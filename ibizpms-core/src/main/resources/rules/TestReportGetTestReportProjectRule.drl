package cn.ibizlab.pms.zentao.logic.testreportlogic.gettestreportproject;
import java.util.Map;
import java.util.HashMap;
import com.alibaba.fastjson.JSONObject;
import org.springframework.util.StringUtils;
import org.springframework.util.ObjectUtils;
import cn.ibizlab.pms.util.errors.BadRequestAlertException;
global cn.ibizlab.pms.core.zentao.domain.TestReport testreportgettestreportprojectdefault;
global cn.ibizlab.pms.core.zentao.service.ITestReportService testreportservice;
global cn.ibizlab.pms.core.zentao.service.ITestReportService iBzSysTestreportDefaultService;
global cn.ibizlab.pms.util.security.AuthenticationUser curuser;


no-loop

//逻辑处理节点[产生的bug]
rule "rawsqlcall8"
ruleflow-group "testreportgettestreportprojectrawsqlcall8"
    when
    then
    Map param =new HashMap();
    param.put("param0",testreportgettestreportprojectdefault.get("id"));
    param.put("param1",testreportgettestreportprojectdefault.get("id"));
    param.put("param2",testreportgettestreportprojectdefault.get("id"));
    String strSql="SELECT COUNT(1) as bugcnt FROM `zt_bug` t1  where FIND_IN_SET((select t.build from zt_testtask t inner join zt_testreport tt on t.id = tt.tasks where tt.id = #{et.param0} ),t1.OPENEDBUILD)  and t1.openedDate > (select tt.`begin` from  zt_testreport tt  where tt.id = #{et.param1} ) and t1.openedDate < (select tt.`end` from  zt_testreport tt  where tt.id = #{et.param2} )";
    java.util.List<JSONObject> entities=iBzSysTestreportDefaultService.select(strSql,param);//SQL调用
    if(entities.size()>0){
        JSONObject entity=entities.get(0);
        for (Map.Entry entry : entity.entrySet()) {
            testreportgettestreportprojectdefault.set(String.valueOf(entry.getKey()),entry.getValue());
        }
    }
    update(testreportgettestreportprojectdefault);//更新fact中变量值
    end

//逻辑处理节点[遗留bug]
rule "rawsqlcall10"
ruleflow-group "testreportgettestreportprojectrawsqlcall10"
    when
    then
    Map param =new HashMap();
    param.put("param0",testreportgettestreportprojectdefault.get("id"));
    param.put("param1",testreportgettestreportprojectdefault.get("id"));
    param.put("param2",testreportgettestreportprojectdefault.get("id"));
    param.put("param3",testreportgettestreportprojectdefault.get("id"));
    String strSql="SELECT COUNT(1) as ylbugcnt FROM `zt_bug` t1  where FIND_IN_SET((select t.build from zt_testtask t inner join zt_testreport tt on t.id = tt.tasks where tt.id = #{et.param0}  ),t1.OPENEDBUILD)  and t1.openedDate > (select tt.`begin` from  zt_testreport tt  where tt.id = #{et.param1} ) and t1.openedDate < (select tt.`end` from  zt_testreport tt  where tt.id = #{et.param2} ) and (t1.`status` = 'active' or t1.resolvedDate > (select tt.`end` from zt_testreport tt where tt.id = #{et.param3}))";
    java.util.List<JSONObject> entities=iBzSysTestreportDefaultService.select(strSql,param);//SQL调用
    if(entities.size()>0){
        JSONObject entity=entities.get(0);
        for (Map.Entry entry : entity.entrySet()) {
            testreportgettestreportprojectdefault.set(String.valueOf(entry.getKey()),entry.getValue());
        }
    }
    update(testreportgettestreportprojectdefault);//更新fact中变量值
    end

//逻辑处理节点[设置概况]
rule "rawsqlcall9"
ruleflow-group "testreportgettestreportprojectrawsqlcall9"
    when
    then
    Map param =new HashMap();
    param.put("param0",testreportgettestreportprojectdefault.get("storycnt"));
    param.put("param1",testreportgettestreportprojectdefault.get("storyestimate"));
    param.put("param2",testreportgettestreportprojectdefault.get("storyestimate"));
    param.put("param3",testreportgettestreportprojectdefault.get("casecnt"));
    param.put("param4",testreportgettestreportprojectdefault.get("rencase"));
    param.put("param5",testreportgettestreportprojectdefault.get("testresultcnt"));
    param.put("param6",testreportgettestreportprojectdefault.get("failcase"));
    param.put("param7",testreportgettestreportprojectdefault.get("bugcnt"));
    param.put("param8",testreportgettestreportprojectdefault.get("ylbugcnt"));
    param.put("param9",testreportgettestreportprojectdefault.get("casebugcnt"));
    param.put("param10",testreportgettestreportprojectdefault.get("effective"));
    param.put("param11",testreportgettestreportprojectdefault.get("resolvedcnt"));
    param.put("param12",testreportgettestreportprojectdefault.get("resolvedcnt"));
    param.put("param13",testreportgettestreportprojectdefault.get("resolvedcnt"));
    param.put("param14",testreportgettestreportprojectdefault.get("casebugcnt"));
    param.put("param15",testreportgettestreportprojectdefault.get("bugcnt"));
    param.put("param16",testreportgettestreportprojectdefault.get("bugcnt"));
    param.put("param17",testreportgettestreportprojectdefault.get("bugcnt"));
    String strSql="select CONCAT_WS('','本页共 ',#{et.param0},' 个需求，预计 ',case when #{et.param1} is null then 0 else #{et.param2} end,' 个工时，用例覆盖率 ',8,'%。<br>','共测试了1个版本。共有',#{et.param3},'个用例，共执行',#{et.param4},'个用例，产生了',#{et.param5},'个结果，失败的用例有',#{et.param6},'个。<br>','共发现',#{et.param7},'个Bug<a data-toggle=\"tooltip\" class=\"text-warning\" title=\"影响版本在测试轮次内，并且创建时间在测试时间范围内产生的Bug数。\" style=\"vertical-align: middle;padding: 2px;\"><i class=\"fa fa-question-circle\" style=\" color: #ff9800;\"></i></a>，遗留',#{et.param8},'个Bug<a data-toggle=\"tooltip\" class=\"text-warning\" title=\"Bug状态是激活，或Bug的解决时间在测试结束时间之后。\" style=\"vertical-align: middle;padding: 2px;\"><i class=\"fa fa-question-circle\" style=\" color: #ff9800;\"></i></a>。 用例执行产生',#{et.param9},'个Bug<a data-toggle=\"tooltip\" class=\"text-warning\" title=\"测试时间范围内，用例执行失败后创建的Bug。\" style=\"vertical-align: middle;padding: 2px;\"><i class=\"fa fa-question-circle\" style=\" color: #ff9800;\"></i></a>。 有效Bug率（方案为已解决或延期 / 状态为已解决或已关闭）：',CONCAT(ROUND(#{et.param10}/(case when #{et.param11} = 0 or #{et.param12} is null then 1 else #{et.param13} end) * 100, 2), '%'),'，用例发现Bug率（用例创建的Bug / 发现Bug数）：',CONCAT(ROUND(#{et.param14}/(case when #{et.param15} = 0 or #{et.param16} is null then 1 else #{et.param17} end)* 100, 2) , '%')) as OVERVIEWS from dual";
    java.util.List<JSONObject> entities=iBzSysTestreportDefaultService.select(strSql,param);//SQL调用
    if(entities.size()>0){
        JSONObject entity=entities.get(0);
        for (Map.Entry entry : entity.entrySet()) {
            testreportgettestreportprojectdefault.set(String.valueOf(entry.getKey()),entry.getValue());
        }
    }
    update(testreportgettestreportprojectdefault);//更新fact中变量值
    end

//逻辑处理节点[用例产生的bug]
rule "rawsqlcall11"
ruleflow-group "testreportgettestreportprojectrawsqlcall11"
    when
    then
    Map param =new HashMap();
    param.put("param0",testreportgettestreportprojectdefault.get("id"));
    param.put("param1",testreportgettestreportprojectdefault.get("id"));
    param.put("param2",testreportgettestreportprojectdefault.get("id"));
    String strSql="SELECT COUNT(1) as casebugcnt FROM `zt_bug` t1  where FIND_IN_SET((select t.build from zt_testtask t inner join zt_testreport tt on t.id = tt.tasks where tt.id = #{et.param0} ),t1.OPENEDBUILD)  and t1.openedDate > (select tt.`begin` from zt_testreport tt where tt.id = #{et.param1} and t1.openedDate < (select tt.`end` from  zt_testreport tt  where tt.id = #{et.param2} ) )  and t1.`case` > 0";
    java.util.List<JSONObject> entities=iBzSysTestreportDefaultService.select(strSql,param);//SQL调用
    if(entities.size()>0){
        JSONObject entity=entities.get(0);
        for (Map.Entry entry : entity.entrySet()) {
            testreportgettestreportprojectdefault.set(String.valueOf(entry.getKey()),entry.getValue());
        }
    }
    update(testreportgettestreportprojectdefault);//更新fact中变量值
    end

//逻辑处理节点[获取需求数]
rule "rawsqlcall1"
ruleflow-group "testreportgettestreportprojectrawsqlcall1"
    when
    then
    Map param =new HashMap();
    param.put("param0",testreportgettestreportprojectdefault.get("id"));
    String strSql="SELECT COUNT(1) as storycnt, sum(t1.ESTIMATE) as storyestimate FROM `zt_story` t1  WHERE t1.`DELETED` = '0' AND FIND_IN_SET ( t1.ID, (SELECT STORIES FROM ZT_TESTREPORT WHERE ID= #{et.param0}))";
    java.util.List<JSONObject> entities=iBzSysTestreportDefaultService.select(strSql,param);//SQL调用
    if(entities.size()>0){
        JSONObject entity=entities.get(0);
        for (Map.Entry entry : entity.entrySet()) {
            testreportgettestreportprojectdefault.set(String.valueOf(entry.getKey()),entry.getValue());
        }
    }
    update(testreportgettestreportprojectdefault);//更新fact中变量值
    end

//逻辑处理节点[开始]
rule "begin"
ruleflow-group "testreportgettestreportprojectbegin"
    when
    then
    end

//逻辑处理节点[执行结果]
rule "rawsqlcall5"
ruleflow-group "testreportgettestreportprojectrawsqlcall5"
    when
    then
    Map param =new HashMap();
    param.put("param0",testreportgettestreportprojectdefault.get("id"));
    String strSql="select COUNT(1) testresultcnt from zt_testresult t1  INNER JOIN zt_case t31 on t31.id = t1.`case` inner join zt_testrun t11 on t1.run = t11.id and t1.`case` = t11.`case` inner join zt_testreport t21 on t11.task = t21.tasks where t21.id = #{et.param0} and FIND_IN_SET(t11.`case`,t21.cases) and t31.deleted = '0' and t1.date >   t21.`begin` and t1.date <  t21.`end`";
    java.util.List<JSONObject> entities=iBzSysTestreportDefaultService.select(strSql,param);//SQL调用
    if(entities.size()>0){
        JSONObject entity=entities.get(0);
        for (Map.Entry entry : entity.entrySet()) {
            testreportgettestreportprojectdefault.set(String.valueOf(entry.getKey()),entry.getValue());
        }
    }
    update(testreportgettestreportprojectdefault);//更新fact中变量值
    end

//逻辑处理节点[执行的用例数]
rule "rawsqlcall3"
ruleflow-group "testreportgettestreportprojectrawsqlcall3"
    when
    then
    Map param =new HashMap();
    param.put("param0",testreportgettestreportprojectdefault.get("id"));
    param.put("param1",testreportgettestreportprojectdefault.get("id"));
    param.put("param2",testreportgettestreportprojectdefault.get("id"));
    param.put("param3",testreportgettestreportprojectdefault.get("id"));
    String strSql="select COUNT(1) as rencase from (SELECT DISTINCT t1.id FROM `zt_case` t1  left join zt_testrun t11 on t1.id = t11.`case` INNER join zt_testresult t21 on t21.run = t11.id WHERE  t1.`DELETED` = '0' AND FIND_IN_SET ( t1.ID, (SELECT cases FROM ZT_TESTREPORT WHERE ID= #{et.param0})) and t11.task = (SELECT tasks FROM ZT_TESTREPORT WHERE ID= #{et.param1}) and t21.date >   (SELECT `BEGIN` FROM ZT_TESTREPORT WHERE ID= #{et.param2}) and t21.date <  (SELECT `end` FROM ZT_TESTREPORT WHERE ID= #{et.param3}) ) t";
    java.util.List<JSONObject> entities=iBzSysTestreportDefaultService.select(strSql,param);//SQL调用
    if(entities.size()>0){
        JSONObject entity=entities.get(0);
        for (Map.Entry entry : entity.entrySet()) {
            testreportgettestreportprojectdefault.set(String.valueOf(entry.getKey()),entry.getValue());
        }
    }
    update(testreportgettestreportprojectdefault);//更新fact中变量值
    end

//逻辑处理节点[获取用例数]
rule "rawsqlcall2"
ruleflow-group "testreportgettestreportprojectrawsqlcall2"
    when
    then
    Map param =new HashMap();
    param.put("param0",testreportgettestreportprojectdefault.get("id"));
    param.put("param1",testreportgettestreportprojectdefault.get("id"));
    String strSql="SELECT COUNT(1) as casecnt FROM `zt_case` t1  left join zt_testrun t11 on t1.id = t11.`case` WHERE  t1.`DELETED` = '0' AND FIND_IN_SET ( t1.ID, (SELECT cases FROM ZT_TESTREPORT WHERE ID= #{et.param0})) and t11.task = (SELECT tasks FROM ZT_TESTREPORT WHERE ID= #{et.param1})";
    java.util.List<JSONObject> entities=iBzSysTestreportDefaultService.select(strSql,param);//SQL调用
    if(entities.size()>0){
        JSONObject entity=entities.get(0);
        for (Map.Entry entry : entity.entrySet()) {
            testreportgettestreportprojectdefault.set(String.valueOf(entry.getKey()),entry.getValue());
        }
    }
    update(testreportgettestreportprojectdefault);//更新fact中变量值
    end

//逻辑处理节点[解决的bug]
rule "rawsqlcall7"
ruleflow-group "testreportgettestreportprojectrawsqlcall7"
    when
    then
    Map param =new HashMap();
    param.put("param0",testreportgettestreportprojectdefault.get("id"));
    param.put("param1",testreportgettestreportprojectdefault.get("id"));
    param.put("param2",testreportgettestreportprojectdefault.get("id"));
    String strSql="SELECT COUNT(1) as resolvedcnt FROM `zt_bug` t1  where FIND_IN_SET((select t.build from zt_testtask t inner join zt_testreport tt on t.id = tt.tasks where tt.id = #{et.param0} ),t1.OPENEDBUILD)  and t1.openedDate > (select tt.`begin` from  zt_testreport tt  where tt.id = #{et.param1} ) and t1.openedDate < (select tt.`end` from  zt_testreport tt  where tt.id = #{et.param2} )  and t1.`status` in ('resolved','closed')";
    java.util.List<JSONObject> entities=iBzSysTestreportDefaultService.select(strSql,param);//SQL调用
    if(entities.size()>0){
        JSONObject entity=entities.get(0);
        for (Map.Entry entry : entity.entrySet()) {
            testreportgettestreportprojectdefault.set(String.valueOf(entry.getKey()),entry.getValue());
        }
    }
    update(testreportgettestreportprojectdefault);//更新fact中变量值
    end

//逻辑处理节点[获取数据]
rule "deaction1"
ruleflow-group "testreportgettestreportprojectdeaction1"
    when
    then
    cn.ibizlab.pms.util.helper.CachedBeanCopier.copy(testreportservice.get(testreportgettestreportprojectdefault.getId()),testreportgettestreportprojectdefault);
    update(testreportgettestreportprojectdefault);//更新fact中变量值
    end

//逻辑处理节点[有效bug数]
rule "rawsqlcall6"
ruleflow-group "testreportgettestreportprojectrawsqlcall6"
    when
    then
    Map param =new HashMap();
    param.put("param0",testreportgettestreportprojectdefault.get("id"));
    param.put("param1",testreportgettestreportprojectdefault.get("id"));
    param.put("param2",testreportgettestreportprojectdefault.get("id"));
    String strSql="SELECT COUNT(1) as effective FROM `zt_bug` t1  where FIND_IN_SET((select t.build from zt_testtask t inner join zt_testreport tt on t.id = tt.tasks where tt.id = #{et.param0} ),t1.OPENEDBUILD)  and t1.openedDate > (select tt.`begin` from  zt_testreport tt  where tt.id = #{et.param1} ) and t1.openedDate < (select tt.`end` from  zt_testreport tt  where tt.id = #{et.param2} ) and t1.`status` in ('resolved','closed') and t1.resolution in ('fixed','postponed')";
    java.util.List<JSONObject> entities=iBzSysTestreportDefaultService.select(strSql,param);//SQL调用
    if(entities.size()>0){
        JSONObject entity=entities.get(0);
        for (Map.Entry entry : entity.entrySet()) {
            testreportgettestreportprojectdefault.set(String.valueOf(entry.getKey()),entry.getValue());
        }
    }
    update(testreportgettestreportprojectdefault);//更新fact中变量值
    end

//逻辑处理节点[失败的用例数]
rule "rawsqlcall4"
ruleflow-group "testreportgettestreportprojectrawsqlcall4"
    when
    then
    Map param =new HashMap();
    param.put("param0",testreportgettestreportprojectdefault.get("id"));
    param.put("param1",testreportgettestreportprojectdefault.get("id"));
    param.put("param2",testreportgettestreportprojectdefault.get("id"));
    param.put("param3",testreportgettestreportprojectdefault.get("id"));
    String strSql="select COUNT(1) as failcase from (SELECT DISTINCT t1.id FROM `zt_case` t1  left join zt_testrun t11 on t1.id = t11.`case` left join zt_testresult t21 on t21.run = t11.id WHERE  t1.`DELETED` = '0' AND FIND_IN_SET ( t1.ID, (SELECT cases FROM ZT_TESTREPORT WHERE ID= #{et.param0})) and t11.task = (SELECT tasks FROM ZT_TESTREPORT WHERE ID= #{et.param1}) and t21.caseResult = 'fail' and t21.date >   (SELECT `BEGIN` FROM ZT_TESTREPORT WHERE ID= #{et.param2}) and t21.date <  (SELECT `end` FROM ZT_TESTREPORT WHERE ID= #{et.param3})) t";
    java.util.List<JSONObject> entities=iBzSysTestreportDefaultService.select(strSql,param);//SQL调用
    if(entities.size()>0){
        JSONObject entity=entities.get(0);
        for (Map.Entry entry : entity.entrySet()) {
            testreportgettestreportprojectdefault.set(String.valueOf(entry.getKey()),entry.getValue());
        }
    }
    update(testreportgettestreportprojectdefault);//更新fact中变量值
    end

