package cn.ibizlab.pms.zentao.logic.caselogic.unlinksuitecases;

import java.util.Map;
import java.util.HashMap;
import com.alibaba.fastjson.JSONObject;
global cn.ibizlab.pms.core.zentao.domain.TestRun caseunlinksuitecasestestrun;
global cn.ibizlab.pms.core.zentao.domain.Case caseunlinksuitecasesdefault;
global cn.ibizlab.pms.core.zentao.service.ICaseService caseservice;
global cn.ibizlab.pms.core.zentao.service.ICaseService iBzSysCaseDefaultService;
global cn.ibizlab.pms.util.security.AuthenticationUser curuser;

no-loop

//逻辑处理节点[准备参数]
rule "prepareparam1"
ruleflow-group "caseunlinksuitecasesprepareparam1"
    when
    then
    caseunlinksuitecasesdefault.set("id",caseunlinksuitecasestestrun.get("id"));
    update(caseunlinksuitecasestestrun);//更新fact中变量值
    update(caseunlinksuitecasesdefault);//更新fact中变量值
    end

//逻辑处理节点[移除用例]
rule "deaction1"
ruleflow-group "caseunlinksuitecasesdeaction1"
    when
    then
    caseservice.unlinkSuiteCase(caseunlinksuitecasesdefault);
    update(caseunlinksuitecasestestrun);//更新fact中变量值
    update(caseunlinksuitecasesdefault);//更新fact中变量值
    end

//逻辑处理节点[获取数据]
rule "rawsqlcall1"
ruleflow-group "caseunlinksuitecasesrawsqlcall1"
    when
    then
    Map param =new HashMap();
    param.put("param0",caseunlinksuitecasesdefault.get("id"));
    param.put("param1",caseunlinksuitecasesdefault.get("task"));
    String strSql="SELECT t1.`ASSIGNEDTO`, t1.`CASE`, t1.`ID`, t1.`LASTRUNDATE`, t1.`LASTRUNNER`, t1.`LASTRUNRESULT`, t1.`STATUS`, t1.`TASK`, t1.`VERSION` FROM `zt_testrun` t1  where t1.`CASE` = #{et.param0} AND t1.`task` = #{et.param1}";
    java.util.List<JSONObject> entities=iBzSysCaseDefaultService.select(strSql,param);//SQL调用
    if(entities.size()>0){
        JSONObject entity=entities.get(0);
        for (Map.Entry entry : entity.entrySet()) {
            caseunlinksuitecasestestrun.set(String.valueOf(entry.getKey()),entry.getValue());
        }
    }
    update(caseunlinksuitecasestestrun);//更新fact中变量值
    update(caseunlinksuitecasesdefault);//更新fact中变量值
    end

//逻辑处理节点[开始]
rule "begin"
ruleflow-group "caseunlinksuitecasesbegin"
    when
    then
    end

