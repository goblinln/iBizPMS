package cn.ibizlab.pms.zentao.logic.testreportlogic.getinfotesttaskproject;
import java.util.Map;
import java.util.HashMap;
import com.alibaba.fastjson.JSONObject;
import org.springframework.util.StringUtils;
import org.springframework.util.ObjectUtils;
import cn.ibizlab.pms.util.errors.BadRequestAlertException;
global cn.ibizlab.pms.core.zentao.domain.TestReport testreportgetinfotesttaskprojectdefault;
global cn.ibizlab.pms.core.zentao.domain.TestTask testreportgetinfotesttaskprojecttesttask;
global cn.ibizlab.pms.core.zentao.service.ITestReportService testreportservice;
global cn.ibizlab.pms.core.zentao.service.ITestReportService iBzSysTestreportDefaultService;
global cn.ibizlab.pms.util.security.AuthenticationUser curuser;


no-loop

//逻辑处理节点[获取测试单]
rule "rawsqlcall2"
ruleflow-group "testreportgetinfotesttaskprojectrawsqlcall2"
    when
    then
    Map param =new HashMap();
    param.put("param0",testreportgetinfotesttaskprojectdefault.get("project"));
    String strSql="select GROUP_CONCAT(t1.id) as tasks,GROUP_CONCAT(DISTINCT t1.build) as builds  from zt_testtask t1 where t1.project = #{et.param0} and t1.deleted = '0' GROUP BY t1.project";
    java.util.List<JSONObject> entities=iBzSysTestreportDefaultService.select(strSql,param);//SQL调用
    if(entities.size()>0){
        JSONObject entity=entities.get(0);
        for (Map.Entry entry : entity.entrySet()) {
            testreportgetinfotesttaskprojectdefault.set(String.valueOf(entry.getKey()),entry.getValue());
        }
    }
    update(testreportgetinfotesttaskprojectdefault);//更新fact中变量值
    update(testreportgetinfotesttaskprojecttesttask);//更新fact中变量值
    end

//逻辑处理节点[开始]
rule "begin"
ruleflow-group "testreportgetinfotesttaskprojectbegin"
    when
    then
    end

//逻辑处理节点[获取项目周期]
rule "rawsqlcall3"
ruleflow-group "testreportgetinfotesttaskprojectrawsqlcall3"
    when
    then
    Map param =new HashMap();
    param.put("param0",testreportgetinfotesttaskprojectdefault.get("id"));
    String strSql="select  t1.`begin`,t1.`end` , CONCAT_WS( ' ', DATE_FORMAT( now( ), '%Y-%m-%d' ), concat( 'PROJECT#', t1.id ), t1.`name`, '测试报告' ) AS TITLE from zt_project t1 where t1.id = #{et.param0}";
    java.util.List<JSONObject> entities=iBzSysTestreportDefaultService.select(strSql,param);//SQL调用
    if(entities.size()>0){
        JSONObject entity=entities.get(0);
        for (Map.Entry entry : entity.entrySet()) {
            testreportgetinfotesttaskprojectdefault.set(String.valueOf(entry.getKey()),entry.getValue());
        }
    }
    update(testreportgetinfotesttaskprojectdefault);//更新fact中变量值
    update(testreportgetinfotesttaskprojecttesttask);//更新fact中变量值
    end

//逻辑处理节点[准备参数]
rule "prepareparam1"
ruleflow-group "testreportgetinfotesttaskprojectprepareparam1"
    when
    then
    testreportgetinfotesttaskprojectdefault.set("objectid",testreportgetinfotesttaskprojectdefault.get("project"));
    testreportgetinfotesttaskprojectdefault.set("objecttype","project");
    update(testreportgetinfotesttaskprojectdefault);//更新fact中变量值
    update(testreportgetinfotesttaskprojecttesttask);//更新fact中变量值
    end

//逻辑处理节点[获取数据]
rule "rawsqlcall1"
ruleflow-group "testreportgetinfotesttaskprojectrawsqlcall1"
    when
    then
    Map param =new HashMap();
    param.put("param0",testreportgetinfotesttaskprojectdefault.get("project"));
    param.put("param1",testreportgetinfotesttaskprojectdefault.get("project"));
    String strSql="select GROUP_CONCAT(DISTINCT t1.`case` order by t1.`case` asc) as cases,GROUP_CONCAT(DISTINCT t1.lastRunner) as MEMBERS	from (select t1.*,#{et.param0} as project from zt_testrun t1 left join zt_case t11 on t1.`case` = t11.id where t11.deleted = '0' and FIND_IN_SET(t1.task,(select GROUP_CONCAT(t1.id) as tasks from zt_testtask t1 where t1.project = #{et.param1} and t1.deleted = '0' GROUP BY t1.project))) t1 GROUP BY t1.project";
    java.util.List<JSONObject> entities=iBzSysTestreportDefaultService.select(strSql,param);//SQL调用
    if(entities.size()>0){
        JSONObject entity=entities.get(0);
        for (Map.Entry entry : entity.entrySet()) {
            testreportgetinfotesttaskprojectdefault.set(String.valueOf(entry.getKey()),entry.getValue());
        }
    }
    update(testreportgetinfotesttaskprojectdefault);//更新fact中变量值
    update(testreportgetinfotesttaskprojecttesttask);//更新fact中变量值
    end

//逻辑处理节点[获取概况信息]
rule "deaction1"
ruleflow-group "testreportgetinfotesttaskprojectdeaction1"
    when
    then
    testreportservice.getInfoTestTaskOvProject(testreportgetinfotesttaskprojectdefault);
    update(testreportgetinfotesttaskprojectdefault);//更新fact中变量值
    update(testreportgetinfotesttaskprojecttesttask);//更新fact中变量值
    end

