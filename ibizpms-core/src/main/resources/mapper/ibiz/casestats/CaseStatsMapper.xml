<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper	namespace="cn.ibizlab.pms.core.ibiz.mapper.CaseStatsMapper">
	
	<!-- 无视图模式 -->
	<sql id="select" databaseId="mysql">
        <![CDATA[ SELECT 0 AS `BLOCKEDCASE`, 0 AS `FAILCASE`, t1.`ID`, t1.`MODULE`, 0 AS `PASSCASE`, t1.`PRODUCT`, t1.`TITLE`, 0 AS `TOTALCASE`, 0 AS `TOTALRUNCASE` FROM `zt_case` t1   ]]>
    </sql>

	
	<!-- 搜索条件 -->
	<sql id="searchMode" databaseId="mysql">
		<if test="srf.n_title_like != null ">
            <bind name="bind_n_title_like" value="'%' + srf.n_title_like + '%'" />
            <![CDATA[ AND  t1.`TITLE` like #{bind_n_title_like,jdbcType=VARCHAR} ]]>
        </if>
		<if test="srf.n_id_eq != null ">
			<![CDATA[ AND  t1.`ID` = #{srf.n_id_eq,jdbcType=BIGINT} ]]>
        </if>
		<if test="srf.n_product_eq != null ">
			<![CDATA[ AND  t1.`PRODUCT` = #{srf.n_product_eq,jdbcType=BIGINT} ]]>
        </if>
		<if test="srf.n_module_eq != null ">
			<![CDATA[ AND  t1.`MODULE` = #{srf.n_module_eq,jdbcType=BIGINT} ]]>
        </if>
		<if test="ew!=null and ew.sqlSegment!=null and ew.sqlSegment!=''">
		AND ${ew.sqlSegment}
		</if>
	</sql>


    <!--该方法用于重写mybatis中selectById方法，以实现查询逻辑属性-->
	<select id="selectById"  resultMap="CaseStatsResultMap" databaseId="mysql">
        <include refid="select" />
		<trim prefix="where" prefixOverrides="and">
			<![CDATA[ AND T1.ID = #{id} ]]>
		</trim>
    </select>


    <!--通过mybatis将查询结果注入到entity中,通过配置autoMapping="true"由mybatis自动处理映射关系 -->
    <resultMap id="CaseStatsResultMap" type="cn.ibizlab.pms.core.ibiz.domain.CaseStats" autoMapping="true">
		<id property="id" column="id" /><!--主键字段映射-->
		<result property="product" column="product" />
		<result property="module" column="module" />
            
		
		<!--通过mybatis自动注入关系属性[主实体]，fetchType="lazy"为懒加载配置 -->
		<association property="ztmodule" javaType="cn.ibizlab.pms.core.zentao.domain.Module" column="module" select="cn.ibizlab.pms.core.zentao.mapper.ModuleMapper.selectById" fetchType="lazy"></association>
		<!--通过mybatis自动注入关系属性[主实体]，fetchType="lazy"为懒加载配置 -->
		<association property="ztproduct" javaType="cn.ibizlab.pms.core.zentao.domain.Product" column="product" select="cn.ibizlab.pms.core.zentao.mapper.ProductMapper.selectById" fetchType="lazy"></association>
    </resultMap>

	<!--关系实体暴露select方法供主实体通过外键查询关系实体数据[实体关系名称:DER1N_IBZ_CASESTATS_ZT_MODULE_MODULE] -->
	 <select id="selectByModule" resultMap="CaseStatsResultMap"  databaseId="mysql">
        <include refid="select" />
		<trim prefix="where" prefixOverrides="and">
			<![CDATA[ AND t1.`MODULE`=#{id} ]]>
		</trim>
     </select>
	<!--关系实体暴露select方法供主实体通过外键查询关系实体数据[实体关系名称:DER1N_IBZ_CASESTATS_ZT_PRODUCT_PRODUCT] -->
	 <select id="selectByProduct" resultMap="CaseStatsResultMap"  databaseId="mysql">
        <include refid="select" />
		<trim prefix="where" prefixOverrides="and">
			<![CDATA[ AND t1.`PRODUCT`=#{id} ]]>
		</trim>
     </select>

    <!--数据集合[Default]-->
	 <select id="searchDefault"  parameterType="cn.ibizlab.pms.core.ibiz.filter.CaseStatsSearchContext"  resultMap="CaseStatsResultMap">
         select t1.* from (
                <include refid="Default" />
         )t1
     </select>

    <!--数据集合[TestCaseStats]-->
	 <select id="searchTestCaseStats"  parameterType="cn.ibizlab.pms.core.ibiz.filter.CaseStatsSearchContext"  resultMap="CaseStatsResultMap">
         select t1.* from (
                <include refid="TestCaseStats" />
         )t1
     </select>

    <!--数据查询[Default]-->
    <sql id="Default" databaseId="mysql">
		<![CDATA[ SELECT 0 AS `BLOCKEDCASE`, 0 AS `FAILCASE`, t1.`ID`, t1.`MODULE`, 0 AS `PASSCASE`, t1.`PRODUCT`, t1.`TITLE`, 0 AS `TOTALCASE`, 0 AS `TOTALRUNCASE` FROM `zt_case` t1   ]]>
		<trim prefix="where" prefixOverrides="and">
			<include refid="searchMode" />
		</trim>
    </sql>
	
	<select id="selectDefault"  parameterType="cn.ibizlab.pms.core.ibiz.filter.CaseStatsSearchContext" resultMap="CaseStatsResultMap">
		<include refid="Default" />
	</select>

    <!--数据查询[TestCaseStats]-->
    <sql id="TestCaseStats" databaseId="mysql">
		<![CDATA[ select  t1.*  from (select  0 as Module, '/' as ModuleName,  t1.id as Product,  count(distinct t2.id) as TotalCase,  sum(case when t3.caseResult = 'pass' then 1 else 0 end) as PassCase,  sum(case when t3.caseResult = 'fail' then 1 else 0 end) as FailCase, sum(case when t3.caseResult = 'blocked' then 1 else 0 end) as BlockedCase, sum(case when t3.caseResult is not null then 1 else 0 end) as TotalRunCase, case when sum(case when t3.caseResult is not null then 1 else 0 end) = 0 then '0.00%' else CONCAT(FORMAT((sum(case when t3.caseResult = 'pass' then 1 else 0 end) / sum(case when t3.caseResult is not null then 1 else 0 end)) * 100, 2),'%') end as PassRate from zt_product t1  left join zt_case t2 on t2.deleted = '0' and t2.module = 0 and t1.id = t2.product  left join zt_testresult t3 on t2.id = t3.`case` where t1.deleted = '0' group by t1.id union select t1.id as Module,  case when t1.parent > 0 then (SELECT GROUP_CONCAT( tt.`name` SEPARATOR '/' ) FROM zt_module tt WHERE FIND_IN_SET( tt.id, t1.path )) ELSE t1.`name` END as ModuleName,  t1.root as Product,  count(distinct t2.id) as TotalCase,  sum(case when t3.caseResult = 'pass' then 1 else 0 end) as PassCase,  sum(case when t3.caseResult = 'fail' then 1 else 0 end) as FailCase, sum(case when t3.caseResult = 'blocked' then 1 else 0 end) as BlockedCase, sum(case when t3.caseResult is not null then 1 else 0 end) as TotalRunCase, case when sum(case when t3.caseResult is not null then 1 else 0 end) = 0 then '0.00%' else CONCAT(FORMAT((sum(case when t3.caseResult = 'pass' then 1 else 0 end) / sum(case when t3.caseResult is not null then 1 else 0 end)) * 100, 2),'%') end as PassRate from zt_module t1 left join zt_case t2 on t1.id = t2.module and t2.deleted = '0'  left join zt_testresult t3 on t2.id = t3.`case` where t1.deleted = '0' and t1.type = 'story' and t1.root = #{srf.datacontext.product} group by t1.id) t1 ]]>
		<trim prefix="where" prefixOverrides="and">
			<if test="true">
			<![CDATA[ AND t1.product = #{srf.datacontext.product} ]]>
			</if>
			<include refid="searchMode" />
		</trim>
    </sql>
	
	<select id="selectTestCaseStats"  parameterType="cn.ibizlab.pms.core.ibiz.filter.CaseStatsSearchContext" resultMap="CaseStatsResultMap">
		<include refid="TestCaseStats" />
	</select>

    <!--数据查询[View]-->
    <sql id="View" databaseId="mysql">
		<![CDATA[ SELECT 0 AS `BLOCKEDCASE`, 0 AS `FAILCASE`, t1.`ID`, t1.`MODULE`, 0 AS `PASSCASE`, t1.`PRODUCT`, t1.`TITLE`, 0 AS `TOTALCASE`, 0 AS `TOTALRUNCASE` FROM `zt_case` t1   ]]>
		<trim prefix="where" prefixOverrides="and">
			<include refid="searchMode" />
		</trim>
    </sql>
	
	<select id="selectView"  parameterType="cn.ibizlab.pms.core.ibiz.filter.CaseStatsSearchContext" resultMap="CaseStatsResultMap">
		<include refid="View" />
	</select>

</mapper>

