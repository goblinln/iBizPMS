<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper	namespace="cn.ibizlab.pms.core.ibiz.mapper.IBZ_PROJECTTEAMMapper">

    <!--该方法用于重写mybatis中selectById方法，以实现查询逻辑属性-->
	<select id="selectById"  resultMap="IBZ_PROJECTTEAMResultMap" databaseId="mysql">
        <![CDATA[select t1.* from (SELECT t1.`ACCOUNT`, t1.`CONSUMED`, t1.`DAYS`, t1.`ESTIMATE`, t1.`HOURS`, t1.`ID`, t1.`JOIN`, t1.`LEFT`, t1.`LIMITED`, t1.`ORDER`, t1.`ROLE`, t1.`ROOT`, (t1.`DAYS` * t1.`HOURS`) AS `TOTAL`, t1.`TYPE` FROM `zt_team` t1  ) t1 where id=#{id}]]>
    </select>

    <!--通过mybatis将查询结果注入到entity中,通过配置autoMapping="true"由mybatis自动处理映射关系 -->
    <resultMap id="IBZ_PROJECTTEAMResultMap" type="cn.ibizlab.pms.core.ibiz.domain.IBZ_PROJECTTEAM" autoMapping="true">
        <id property="id" column="id" /><!--主键字段映射-->
            
		
    </resultMap>


    <!--数据集合[Default]-->
	 <select id="searchDefault"  parameterType="cn.ibizlab.pms.core.ibiz.filter.IBZ_PROJECTTEAMSearchContext"  resultMap="IBZ_PROJECTTEAMResultMap">
         select t1.* from (
                <include refid="Default" />
         )t1
         <where><if test="ew!=null and ew.sqlSegment!=null and !ew.emptyOfWhere">${ew.sqlSegment}</if></where>
         <if test="ew!=null and ew.sqlSegment!=null and ew.emptyOfWhere">${ew.sqlSegment}</if>
     </select>

    <!--数据查询[Default]-->
    <sql id="Default" databaseId="mysql">
		<![CDATA[ SELECT t1.`ACCOUNT`, t1.`CONSUMED`, t1.`DAYS`, t1.`ESTIMATE`, t1.`HOURS`, t1.`ID`, t1.`JOIN`, t1.`LEFT`, t1.`LIMITED`, t1.`ORDER`, t1.`ROLE`, t1.`ROOT`, (t1.`DAYS` * t1.`HOURS`) AS `TOTAL`, t1.`TYPE` FROM `zt_team` t1  
			]]>
    </sql>
    <!--数据查询[View]-->
    <sql id="View" databaseId="mysql">
		<![CDATA[ SELECT t1.`ACCOUNT`, t1.`CONSUMED`, t1.`DAYS`, t1.`ESTIMATE`, t1.`HOURS`, t1.`ID`, t1.`JOIN`, t1.`LEFT`, t1.`LIMITED`, t1.`ORDER`, t1.`ROLE`, t1.`ROOT`, (t1.`DAYS` * t1.`HOURS`) AS `TOTAL`, t1.`TYPE` FROM `zt_team` t1  
			]]>
    </sql>
</mapper>

