<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper	namespace="cn.ibizlab.pms.core.ibiz.mapper.ProjectStatsMapper">

    <!--该方法用于重写mybatis中selectById方法，以实现查询逻辑属性-->
	<select id="selectById"  resultMap="ProjectStatsResultMap" databaseId="mysql">
        <![CDATA[select t1.* from (SELECT (SELECT COUNT(1) FROM ZT_BUG WHERE PROJECT = t1.`ID` AND `STATUS` = 'active' AND DELETED = 0) AS `ACTIVEBUGCNT`, (SELECT COUNT(1) FROM ZT_BUG WHERE PROJECT = t1.`ID` AND DELETED = 0) AS `BUGCNT`, (SELECT COUNT(1) FROM ZT_STORY WHERE `STATUS` =  'closed' AND FIND_IN_SET (PRODUCT, (SELECT GROUP_CONCAT(PRODUCT) FROM ZT_PROJECTPRODUCT WHERE PROJECT= t1.`ID`)) AND DELETED = 0 ) AS `CLOSEDSTORYCNT`, t1.`DELETED`, (SELECT COUNT(1) FROM ZT_BUG WHERE PROJECT = t1.`ID` AND `STATUS` <> 'active' AND DELETED = 0) AS `FINISHBUGCNT`, (SELECT COUNT(1) FROM ZT_TASK WHERE PROJECT = t1.`ID` AND `STATUS` IN ('done','cancel','closed') AND DELETED = 0) AS `FINISHTASKCNT`, t1.`ID`, t1.`NAME`, (SELECT COUNT(1) FROM ZT_STORY LEFT JOIN ZT_PROJECTSTORY ON ZT_STORY.ID = ZT_PROJECTSTORY.STORY WHERE PROJECT = t1.`ID` AND DELETED = 0) AS `STORYCNT`, (SELECT COUNT(1) FROM ZT_TASK WHERE PROJECT = t1.`ID` AND DELETED = '0') AS `TASKCNT`, (SELECT SUM(CONSUMED) FROM ZT_TASK WHERE PROJECT = t1.`ID` AND DELETED = 0) AS `TOTALCONSUMED`, (SELECT SUM(ESTIMATE) FROM ZT_TASK WHERE PROJECT = t1.`ID` AND DELETED =  '0') AS `TOTALESTIMATE`, (SELECT SUM(`LEFT`) FROM ZT_TASK WHERE PROJECT = t1.`ID` AND DELETED = 0) AS `TOTALLEFT`, (SELECT COUNT(1) FROM ZT_BUG WHERE PROJECT = t1.`ID` AND `STATUS` <> 'closed' AND DELETED = 0) AS `UNCLOSEDBUGCNT`, (SELECT COUNT(1) FROM ZT_STORY LEFT JOIN ZT_PROJECTSTORY ON ZT_STORY.ID = ZT_PROJECTSTORY.STORY WHERE `STATUS` <>  'closed' AND PROJECT = t1.`ID` AND DELETED = 0) AS `UNCLOSEDSTORYCNT`, (SELECT COUNT(1) FROM ZT_BUG WHERE PROJECT = t1.`ID` AND `CONFIRMED` = 0 AND DELETED = 0) AS `UNCONFIRMEDBUGCNT`, (SELECT COUNT(1) FROM ZT_TASK WHERE PROJECT = t1.`ID` AND `STATUS` NOT IN ('done','cancel','closed') AND DELETED =  '0') AS `UNDONETASKCNT` FROM `zt_project` t1  ) t1 where id=#{id}]]>
    </select>

    <!--通过mybatis将查询结果注入到entity中,通过配置autoMapping="true"由mybatis自动处理映射关系 -->
    <resultMap id="ProjectStatsResultMap" type="cn.ibizlab.pms.core.ibiz.domain.ProjectStats" autoMapping="true">
        <id property="id" column="id" /><!--主键字段映射-->
            
		
    </resultMap>


    <!--数据集合[Default]-->
	 <select id="searchDefault"  parameterType="cn.ibizlab.pms.core.ibiz.filter.ProjectStatsSearchContext"  resultMap="ProjectStatsResultMap">
         select t1.* from (
                <include refid="Default" />
         )t1
         <where><if test="ew!=null and ew.sqlSegment!=null and !ew.emptyOfWhere">${ew.sqlSegment}</if></where>
         <if test="ew!=null and ew.sqlSegment!=null and ew.emptyOfWhere">${ew.sqlSegment}</if>
     </select>

    <!--数据集合[TaskTime]-->
	 <select id="searchTaskTime"  parameterType="cn.ibizlab.pms.core.ibiz.filter.ProjectStatsSearchContext"  resultMap="ProjectStatsResultMap">
         select t1.* from (
                <include refid="TaskTime" />
         )t1
         <where><if test="ew!=null and ew.sqlSegment!=null and !ew.emptyOfWhere">${ew.sqlSegment}</if></where>
         <if test="ew!=null and ew.sqlSegment!=null and ew.emptyOfWhere">${ew.sqlSegment}</if>
     </select>

    <!--数据查询[Default]-->
    <sql id="Default" databaseId="mysql">
		<![CDATA[ SELECT (SELECT COUNT(1) FROM ZT_BUG WHERE PROJECT = t1.`ID` AND `STATUS` = 'active' AND DELETED = 0) AS `ACTIVEBUGCNT`, (SELECT COUNT(1) FROM ZT_BUG WHERE PROJECT = t1.`ID` AND DELETED = 0) AS `BUGCNT`, (SELECT COUNT(1) FROM ZT_STORY WHERE `STATUS` =  'closed' AND FIND_IN_SET (PRODUCT, (SELECT GROUP_CONCAT(PRODUCT) FROM ZT_PROJECTPRODUCT WHERE PROJECT= t1.`ID`)) AND DELETED = 0 ) AS `CLOSEDSTORYCNT`, t1.`DELETED`, (SELECT COUNT(1) FROM ZT_BUG WHERE PROJECT = t1.`ID` AND `STATUS` <> 'active' AND DELETED = 0) AS `FINISHBUGCNT`, (SELECT COUNT(1) FROM ZT_TASK WHERE PROJECT = t1.`ID` AND `STATUS` IN ('done','cancel','closed') AND DELETED = 0) AS `FINISHTASKCNT`, t1.`ID`, t1.`NAME`, (SELECT COUNT(1) FROM ZT_STORY LEFT JOIN ZT_PROJECTSTORY ON ZT_STORY.ID = ZT_PROJECTSTORY.STORY WHERE PROJECT = t1.`ID` AND DELETED = 0) AS `STORYCNT`, (SELECT COUNT(1) FROM ZT_TASK WHERE PROJECT = t1.`ID` AND DELETED = '0') AS `TASKCNT`, (SELECT SUM(CONSUMED) FROM ZT_TASK WHERE PROJECT = t1.`ID` AND DELETED = 0) AS `TOTALCONSUMED`, (SELECT SUM(ESTIMATE) FROM ZT_TASK WHERE PROJECT = t1.`ID` AND DELETED =  '0') AS `TOTALESTIMATE`, (SELECT SUM(`LEFT`) FROM ZT_TASK WHERE PROJECT = t1.`ID` AND DELETED = 0) AS `TOTALLEFT`, (SELECT COUNT(1) FROM ZT_BUG WHERE PROJECT = t1.`ID` AND `STATUS` <> 'closed' AND DELETED = 0) AS `UNCLOSEDBUGCNT`, (SELECT COUNT(1) FROM ZT_STORY LEFT JOIN ZT_PROJECTSTORY ON ZT_STORY.ID = ZT_PROJECTSTORY.STORY WHERE `STATUS` <>  'closed' AND PROJECT = t1.`ID` AND DELETED = 0) AS `UNCLOSEDSTORYCNT`, (SELECT COUNT(1) FROM ZT_BUG WHERE PROJECT = t1.`ID` AND `CONFIRMED` = 0 AND DELETED = 0) AS `UNCONFIRMEDBUGCNT`, (SELECT COUNT(1) FROM ZT_TASK WHERE PROJECT = t1.`ID` AND `STATUS` NOT IN ('done','cancel','closed') AND DELETED =  '0') AS `UNDONETASKCNT` FROM `zt_project` t1  
					 WHERE 	t1.DELETED = '0'
			]]>
    </sql>
    <!--数据查询[TaskTime]-->
    <sql id="TaskTime" databaseId="mysql">
		<![CDATA[ SELECT t1.`ID`, (SELECT SUM(CONSUMED) FROM ZT_TASK WHERE PROJECT = t1.`ID`) AS `TIME`, 'CONSUMED' AS `TYPE` FROM `zt_project` t1 WHERE t1.`ID` =  #{srf.datacontext.srfparentkey} AND t1.DELETED = 0 UNION ALL  SELECT t2.`ID`, (SELECT SUM(`LEFT`) FROM ZT_TASK WHERE PROJECT = t2.`ID` AND t1.DELETED = 0) AS `TIME`, 'LEFT' AS `TYPE` FROM `zt_project` t2 WHERE t2.`ID` = #{srf.datacontext.srfparentkey}  AND t1.DELETED = 0 
			]]>
    </sql>
    <!--数据查询[View]-->
    <sql id="View" databaseId="mysql">
		<![CDATA[ SELECT (SELECT COUNT(1) FROM ZT_BUG WHERE PROJECT = t1.`ID` AND `STATUS` = 'active' AND DELETED = 0) AS `ACTIVEBUGCNT`, (SELECT COUNT(1) FROM ZT_BUG WHERE PROJECT = t1.`ID` AND DELETED = 0) AS `BUGCNT`, (SELECT COUNT(1) FROM ZT_STORY WHERE `STATUS` =  'closed' AND FIND_IN_SET (PRODUCT, (SELECT GROUP_CONCAT(PRODUCT) FROM ZT_PROJECTPRODUCT WHERE PROJECT= t1.`ID`)) AND DELETED = 0 ) AS `CLOSEDSTORYCNT`, t1.`DELETED`, (SELECT COUNT(1) FROM ZT_BUG WHERE PROJECT = t1.`ID` AND `STATUS` <> 'active' AND DELETED = 0) AS `FINISHBUGCNT`, (SELECT COUNT(1) FROM ZT_TASK WHERE PROJECT = t1.`ID` AND `STATUS` IN ('done','cancel','closed') AND DELETED = 0) AS `FINISHTASKCNT`, t1.`ID`, t1.`NAME`, (SELECT COUNT(1) FROM ZT_STORY LEFT JOIN ZT_PROJECTSTORY ON ZT_STORY.ID = ZT_PROJECTSTORY.STORY WHERE PROJECT = t1.`ID` AND DELETED = 0) AS `STORYCNT`, (SELECT COUNT(1) FROM ZT_TASK WHERE PROJECT = t1.`ID` AND DELETED = '0') AS `TASKCNT`, (SELECT SUM(CONSUMED) FROM ZT_TASK WHERE PROJECT = t1.`ID` AND DELETED = 0) AS `TOTALCONSUMED`, (SELECT SUM(ESTIMATE) FROM ZT_TASK WHERE PROJECT = t1.`ID` AND DELETED =  '0') AS `TOTALESTIMATE`, (SELECT SUM(`LEFT`) FROM ZT_TASK WHERE PROJECT = t1.`ID` AND DELETED = 0) AS `TOTALLEFT`, (SELECT COUNT(1) FROM ZT_BUG WHERE PROJECT = t1.`ID` AND `STATUS` <> 'closed' AND DELETED = 0) AS `UNCLOSEDBUGCNT`, (SELECT COUNT(1) FROM ZT_STORY LEFT JOIN ZT_PROJECTSTORY ON ZT_STORY.ID = ZT_PROJECTSTORY.STORY WHERE `STATUS` <>  'closed' AND PROJECT = t1.`ID` AND DELETED = 0) AS `UNCLOSEDSTORYCNT`, (SELECT COUNT(1) FROM ZT_BUG WHERE PROJECT = t1.`ID` AND `CONFIRMED` = 0 AND DELETED = 0) AS `UNCONFIRMEDBUGCNT`, (SELECT COUNT(1) FROM ZT_TASK WHERE PROJECT = t1.`ID` AND `STATUS` NOT IN ('done','cancel','closed') AND DELETED =  '0') AS `UNDONETASKCNT` FROM `zt_project` t1  
					 WHERE 	t1.DELETED = '0'
			]]>
    </sql>
</mapper>

