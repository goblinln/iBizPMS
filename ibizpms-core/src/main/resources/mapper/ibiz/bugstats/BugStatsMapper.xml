<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper	namespace="cn.ibizlab.pms.core.ibiz.mapper.BugStatsMapper">

    <!--该方法用于重写mybatis中selectById方法，以实现查询逻辑属性-->
	<select id="selectById"  resultMap="BugStatsResultMap" databaseId="mysql">
        <![CDATA[select t1.* from (SELECT 0 AS `BUGBYDESIGN`, 0 AS `BUGDUPLICATE`, 0% AS `BUGEFFICIENT`, 0 AS `BUGEXTERNAL`, 0 AS `BUGFIXED`, 0 AS `BUGNOTREPRO`, 0 AS `BUGPOSTPONED`, 0 AS `BUGTOSTORY`, 0 AS `BUGTOTAL`, 0 AS `BUGWILLNOTFIX`, 0 AS `BUGWJJ`, t1.`ID`, t1.`OPENEDBY`, t1.`TITLE` FROM `zt_bug` t1  ) t1 where id=#{id}]]>
    </select>

    <!--通过mybatis将查询结果注入到entity中,通过配置autoMapping="true"由mybatis自动处理映射关系 -->
    <resultMap id="BugStatsResultMap" type="cn.ibizlab.pms.core.ibiz.domain.BugStats" autoMapping="true">
		<id property="id" column="id" /><!--主键字段映射-->
            
		
    </resultMap>


    <!--数据集合[Default]-->
	 <select id="searchDefault"  parameterType="cn.ibizlab.pms.core.ibiz.filter.BugStatsSearchContext"  resultMap="BugStatsResultMap">
         select t1.* from (
                <include refid="Default" />
         )t1
         <where><if test="ew!=null and ew.sqlSegment!=null and !ew.emptyOfWhere">${ew.sqlSegment}</if></where>
         <if test="ew!=null and ew.sqlSegment!=null and ew.emptyOfWhere">${ew.sqlSegment}</if>
     </select>

    <!--数据查询[Default]-->
    <sql id="Default" databaseId="mysql">
		<![CDATA[ SELECT 	t1.openedBy, 	sum( IF ( t1.resolution = '', t1.v1, 0 ) ) AS Bugwjj, 	sum( IF ( t1.resolution = 'bydesign', t1.v1, 0 ) ) AS Bugbydesign, 	SUM( IF ( t1.resolution = 'duplicate', t1.v1, 0 ) ) AS Bugduplicate, 	SUM( IF ( t1.resolution = 'fixed', t1.v1, 0 ) ) AS Bugfixed, 	SUM( IF ( t1.resolution = 'external', t1.v1, 0 ) ) AS Bugexternal, 	sum( IF ( t1.resolution = 'notrepro', t1.v1, 0 ) ) AS Bugnotrepro, 	SUM( IF ( t1.resolution = 'postponed', t1.v1, 0 ) ) AS Bugpostponed, 	SUM( IF ( t1.resolution = 'willnotfix', t1.v1, 0 ) ) AS Bugwillnotfix, 	CONCAT( ROUND( case when (SUM( IF ( t1.resolution = 'fixed', t1.v1, 0 ) ) + SUM( IF ( t1.resolution = 'postponed', t1.v1, 0 ) )) = 0 then 0 else (SUM( IF ( t1.resolution = 'fixed', t1.v1, 0 ) ) + SUM( IF ( t1.resolution = 'postponed', t1.v1, 0 ) ))/ (sum( IF ( t1.resolution = 'bydesign', t1.v1, 0 ) ) + SUM( IF ( t1.resolution = 'duplicate', t1.v1, 0 ) ) + SUM( IF ( t1.resolution = 'fixed', t1.v1, 0 ) ) + SUM( IF ( t1.resolution = 'external', t1.v1, 0 ) ) + sum( IF ( t1.resolution = 'notrepro', t1.v1, 0 ) ) + SUM( IF ( t1.resolution = 'postponed', t1.v1, 0 ) ) + SUM( IF ( t1.resolution = 'willnotfix', t1.v1, 0 ) )) * 100 end,2), '%') as BugEfficient, 	SUM( IF ( t1.resolution = 'tostory', t1.v1, 0 ) ) AS Bugtostory, 	SUM( t1.v1 ) AS BUGTOTAL  FROM 	( SELECT 	t1.`OPENEDBY`, 	t1.`OPENEDDATE`, 	t1.`PRODUCT`, 	t1.`PROJECT`, 	t1.`RESOLUTION`, 	1 AS `V1`  FROM 	`zt_bug` t1 	LEFT JOIN zt_product t11 ON t1.PRODUCT = t11.ID WHERE 	t1.deleted = '0'  	) t1  WHERE 	( t1.openedDate >= #{srf.datacontext.openeddatelt}  OR #{srf.datacontext.openeddatelt} IS NULL )  	AND ( t1.openedDate <= #{srf.datacontext.openeddategt} OR #{srf.datacontext.openeddategt} )  	AND ( t1.PRODUCT = #{srf.datacontext.producteq} OR #{srf.datacontext.producteq}  IS NULL )  	AND ( t1.PROJECT = #{srf.datacontext.projecteq}  OR #{srf.datacontext.projecteq}  IS NULL )  GROUP BY 	t1.openedBy
			]]>
    </sql>
    <!--数据查询[View]-->
    <sql id="View" databaseId="mysql">
		<![CDATA[ SELECT 0 AS `BUGBYDESIGN`, 0 AS `BUGDUPLICATE`, 0% AS `BUGEFFICIENT`, 0 AS `BUGEXTERNAL`, 0 AS `BUGFIXED`, 0 AS `BUGNOTREPRO`, 0 AS `BUGPOSTPONED`, 0 AS `BUGTOSTORY`, 0 AS `BUGTOTAL`, 0 AS `BUGWILLNOTFIX`, 0 AS `BUGWJJ`, t1.`ID`, t1.`OPENEDBY`, t1.`TITLE` FROM `zt_bug` t1  
			]]>
    </sql>
</mapper>

