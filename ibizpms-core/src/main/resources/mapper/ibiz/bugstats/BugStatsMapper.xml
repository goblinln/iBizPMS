<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper	namespace="cn.ibizlab.pms.core.ibiz.mapper.BugStatsMapper">

    <!--该方法用于重写mybatis中selectById方法，以实现查询逻辑属性-->
	<select id="selectById"  resultMap="BugStatsResultMap" databaseId="mysql">
        <![CDATA[select t1.* from (SELECT t1.`ASSIGNEDTO`, 0 AS `BUGBYDESIGN`, 0 AS `BUGCNT`, 0 AS `BUGDUPLICATE`, 0% AS `BUGEFFICIENT`, 0 AS `BUGEXTERNAL`, 0 AS `BUGFIXED`, 0 AS `BUGNOTREPRO`, 0 AS `BUGPOSTPONED`, 0 AS `BUGTOSTORY`, 0 AS `BUGTOTAL`, 0 AS `BUGWILLNOTFIX`, 0 AS `BUGWJJ`, t1.`ID`, t1.`OPENEDBY`, t1.`PRODUCT`, t11.`NAME` AS `PRODUCTNAME`, t1.`PROJECT`, t2.`PROJECTNAME`, t1.`RESOLVEDBY`, t1.`TITLE` FROM `zt_bug` t1  LEFT JOIN zt_product t11 ON t1.PRODUCT = t11.ID  ) t1 where id=#{id}]]>
    </select>

    <!--通过mybatis将查询结果注入到entity中,通过配置autoMapping="true"由mybatis自动处理映射关系 -->
    <resultMap id="BugStatsResultMap" type="cn.ibizlab.pms.core.ibiz.domain.BugStats" autoMapping="true">
		<id property="id" column="id" /><!--主键字段映射-->
		<result property="product" column="product" />
		<result property="project" column="project" />


		<!--通过mybatis自动注入关系属性[主实体]，fetchType="lazy"为懒加载配置 -->
		<association property="ztproduct" javaType="cn.ibizlab.pms.core.zentao.domain.Product" column="product" select="cn.ibizlab.pms.core.zentao.mapper.ProductMapper.selectById" fetchType="lazy"></association>
		<!--通过mybatis自动注入关系属性[主实体]，fetchType="lazy"为懒加载配置 -->
		<association property="ztproject" javaType="cn.ibizlab.pms.core.zentao.domain.Project" column="project" select="cn.ibizlab.pms.core.zentao.mapper.ProjectMapper.selectById" fetchType="lazy"></association>
    </resultMap>

	<!--关系实体暴露select方法供主实体通过外键查询关系实体数据[实体关系名称:DER1N_IBZ_BUGSTATS_ZT_PRODUCT_PRODUCT] -->
	 <select id="selectByProduct" resultMap="BugStatsResultMap">
         select t1.* from (
                <include refid="Default" />
			 ) t1
			 where  product=#{id}
     </select>
	<!--关系实体暴露select方法供主实体通过外键查询关系实体数据[实体关系名称:DER1N_IBZ_BUGSTATS_ZT_PROJECT_PROJECT] -->
	 <select id="selectByProject" resultMap="BugStatsResultMap">
         select t1.* from (
                <include refid="Default" />
			 ) t1
			 where  project=#{id}
     </select>

    <!--数据集合[BugResolvedBy]-->
	 <select id="searchBugResolvedBy"  parameterType="cn.ibizlab.pms.core.ibiz.filter.BugStatsSearchContext"  resultMap="BugStatsResultMap">
         select t1.* from (
                <include refid="BugResolvedBy" />
         )t1
         <where><if test="ew!=null and ew.sqlSegment!=null and !ew.emptyOfWhere">${ew.sqlSegment}</if></where>
         <if test="ew!=null and ew.sqlSegment!=null and ew.emptyOfWhere">${ew.sqlSegment}</if>
     </select>

    <!--数据集合[BugassignedTo]-->
	 <select id="searchBugassignedTo"  parameterType="cn.ibizlab.pms.core.ibiz.filter.BugStatsSearchContext"  resultMap="BugStatsResultMap">
         select t1.* from (
                <include refid="BugassignedTo" />
         )t1
         <where><if test="ew!=null and ew.sqlSegment!=null and !ew.emptyOfWhere">${ew.sqlSegment}</if></where>
         <if test="ew!=null and ew.sqlSegment!=null and ew.emptyOfWhere">${ew.sqlSegment}</if>
     </select>

    <!--数据集合[Default]-->
	 <select id="searchDefault"  parameterType="cn.ibizlab.pms.core.ibiz.filter.BugStatsSearchContext"  resultMap="BugStatsResultMap">
         select t1.* from (
                <include refid="Default" />
         )t1
         <where><if test="ew!=null and ew.sqlSegment!=null and !ew.emptyOfWhere">${ew.sqlSegment}</if></where>
         <if test="ew!=null and ew.sqlSegment!=null and ew.emptyOfWhere">${ew.sqlSegment}</if>
     </select>

    <!--数据集合[ProductCreateBug]-->
	 <select id="searchProductCreateBug"  parameterType="cn.ibizlab.pms.core.ibiz.filter.BugStatsSearchContext"  resultMap="BugStatsResultMap">
         select t1.* from (
                <include refid="ProductCreateBug" />
         )t1
         <where><if test="ew!=null and ew.sqlSegment!=null and !ew.emptyOfWhere">${ew.sqlSegment}</if></where>
         <if test="ew!=null and ew.sqlSegment!=null and ew.emptyOfWhere">${ew.sqlSegment}</if>
     </select>

    <!--数据查询[BugCountInResolution]-->
    <sql id="BugCountInResolution" databaseId="mysql">
		<![CDATA[ SELECT t1.`ASSIGNEDTO`, 0 AS `BUGBYDESIGN`, 0 AS `BUGCNT`, 0 AS `BUGDUPLICATE`, 0% AS `BUGEFFICIENT`, 0 AS `BUGEXTERNAL`, 0 AS `BUGFIXED`, 0 AS `BUGNOTREPRO`, 0 AS `BUGPOSTPONED`, 0 AS `BUGTOSTORY`, 0 AS `BUGTOTAL`, 0 AS `BUGWILLNOTFIX`, 0 AS `BUGWJJ`, t1.`ID`, t1.`OPENEDBY`, t1.`PRODUCT`, t11.`NAME` AS `PRODUCTNAME`, t1.`PROJECT`, t2.`PROJECTNAME`, t1.`RESOLVEDBY`, t1.`TITLE`, t3.`NAME` AS `PROJECTNAME` , t22. FROM `zt_bug` t1  LEFT JOIN zt_product t11 ON t1.PRODUCT = t11.ID  LEFT JOIN zt_project t3 ON t1.PROJECT = t1.ID LEFT JOIN (SELECT  t10.id,t10.`name`,t10.bydesigncnt as bydesigncnt , t10.fixedcnt,t10.duplicatecnt,t10.willnotfixcnt,t10.externalcnt,t10.notreprocnt,t10.tostorycnt,t10.postponedcnt, (t10.bydesigncnt+t10.fixedcnt+t10.duplicatecnt+t10.willnotfixcnt+t10.externalcnt+t10.notreprocnt+t10.tostorycnt+t10.postponedcnt) as BUGCNT  from (select t1.id,t1.`name`,(case when t2.bydesigncnt is null then 0 else t2.bydesigncnt end)as bydesigncnt,(case when t3.fixedcnt is null then 0 else t3.fixedcnt end)as fixedcnt,(case when  t4.duplicatecnt is null then 0 else t4.duplicatecnt end)as duplicatecnt,(case when t5.willnotfixcnt is null then 0 else t5.willnotfixcnt end)as willnotfixcnt,(case when t6.externalcnt is null then 0 else t6.externalcnt end) as externalcnt,(case when t7.notreprocnt is null then 0 else t7.notreprocnt end)as notreprocnt,(case when t8.tostorycnt is null then 0 else t8.tostorycnt end)as tostorycnt,(case when t9.postponedcnt is null then 0 else t9.postponedcnt end)as postponedcnt from zt_project t1 LEFT JOIN (select t1.project,count(1) as bydesigncnt from zt_bug t1  where t1.resolution = 'bydesign' GROUP BY t1.project ) t2 on t1.id = t2.project LEFT JOIN ( select t1.project,count(1) as fixedcnt from zt_bug t1 where t1.resolution = 'fixed' GROUP BY t1.project ) t3 on t3.project = t1.id LEFT JOIN ( select t1.project,count(1) as duplicatecnt from zt_bug t1 where t1.resolution = 'duplicate' GROUP BY t1.project ) t4 on t4.project = t1.id LEFT JOIN ( select t1.project,count(1) as willnotfixcnt from zt_bug t1 where t1.resolution = 'willnotfix' GROUP BY t1.project ) t5 on t5.project = t1.id LEFT JOIN ( select t1.project,count(1) as externalcnt from zt_bug t1 where t1.resolution = 'external' GROUP BY t1.project ) t6 on t6.project = t1.id LEFT JOIN ( select t1.project,count(1) as notreprocnt from zt_bug t1 where t1.resolution = 'notrepro' GROUP BY t1.project ) t7 on t7.project = t1.id LEFT JOIN ( select t1.project,count(1) as tostorycnt from zt_bug t1 where t1.resolution = 'tostory' GROUP BY t1.project ) t8 on t8.project = t1.id LEFT JOIN ( select t1.project,count(1) as postponedcnt from zt_bug t1 where t1.resolution = 'postponed' GROUP BY t1.project ) t9 on t9.project = t1.id where t1.deleted='0') t10) t22 
			]]>
    </sql>
    <!--数据查询[BugResolvedBy]-->
    <sql id="BugResolvedBy" databaseId="mysql">
		<![CDATA[ SELECT 	t1.resolvedBy, 	t1.product, 	t1.productname, 	t1.bugcnt, 	t11.bugcnt AS bugtotal  FROM 	( 	SELECT 		t1.resolvedBy, 		t1.product, 		t11.`name` AS productname, 		COUNT( t1.id ) AS bugcnt  	FROM 		`zt_bug` t1 		LEFT JOIN zt_product t11 ON t1.PRODUCT = t11.ID  	WHERE 		t1.deleted = '0'  		AND t1.resolvedBy <> ''  		AND t1.product <> 0  		AND t11.deleted = '0'  	GROUP BY 		t1.resolvedBy, 		t1.product, 		t11.`name`  	) t1 	INNER JOIN ( 	SELECT 		t1.resolvedBy, 		COUNT( t1.id ) AS bugcnt  	FROM 		`zt_bug` t1 		LEFT JOIN zt_product t11 ON t1.PRODUCT = t11.ID  	WHERE 		t1.deleted = '0'  		AND t1.resolvedBy <> ''  		AND t1.product <> 0  		AND t11.deleted = '0'  	GROUP BY 		t1.resolvedBy  	) t11 ON t1.resolvedBy = t11.resolvedBy  ORDER BY 	t1.resolvedBy ASC
			]]>
    </sql>
    <!--数据查询[BugassignedTo]-->
    <sql id="BugassignedTo" databaseId="mysql">
		<![CDATA[ SELECT 	t1.assignedTo , t1.product,t1.productname,t1.bugcnt,t11.bugcnt as bugtotal FROM 	( SELECT 	t1.assignedTo, 	t1.product, 	t11.`name` as productname, 	COUNT( t1.id ) AS bugcnt  FROM 	`zt_bug` t1 	LEFT JOIN zt_product t11 ON t1.PRODUCT = t11.ID  WHERE 	t1.deleted = '0'  	AND t1.assignedTo <> ''  	AND t1.assignedTo IS NOT NULL  	AND t1.product <> 0  	AND t1.assignedTo <> 'closed'  	AND t1.`status` = 'active' 	and t11.deleted = '0' GROUP BY 	t1.assignedTo, 	t1.product, 	t11.`name`  	) t1 inner join (SELECT 	t1.assignedTo, 	COUNT( t1.id ) AS bugcnt  FROM 	`zt_bug` t1 	LEFT JOIN zt_product t11 ON t1.PRODUCT = t11.ID  WHERE 	t1.deleted = '0'  	AND t1.assignedTo <> ''  	AND t1.assignedTo IS NOT NULL  	AND t1.product <> 0  	AND t1.assignedTo <> 'closed'  	AND t1.`status` = 'active' 	and t11.deleted = '0' GROUP BY 	t1.assignedTo) t11 on t1.assignedTo = t11.assignedTo ORDER BY 	t1.assignedTo asc 	 	
			]]>
    </sql>
    <!--数据查询[Default]-->
    <sql id="Default" databaseId="mysql">
		<![CDATA[ SELECT 	t1.openedBy, 	sum( IF ( t1.resolution = '', t1.v1, 0 ) ) AS Bugwjj, 	sum( IF ( t1.resolution = 'bydesign', t1.v1, 0 ) ) AS Bugbydesign, 	SUM( IF ( t1.resolution = 'duplicate', t1.v1, 0 ) ) AS Bugduplicate, 	SUM( IF ( t1.resolution = 'fixed', t1.v1, 0 ) ) AS Bugfixed, 	SUM( IF ( t1.resolution = 'external', t1.v1, 0 ) ) AS Bugexternal, 	sum( IF ( t1.resolution = 'notrepro', t1.v1, 0 ) ) AS Bugnotrepro, 	SUM( IF ( t1.resolution = 'postponed', t1.v1, 0 ) ) AS Bugpostponed, 	SUM( IF ( t1.resolution = 'willnotfix', t1.v1, 0 ) ) AS Bugwillnotfix, 	CONCAT( ROUND( case when (SUM( IF ( t1.resolution = 'fixed', t1.v1, 0 ) ) + SUM( IF ( t1.resolution = 'postponed', t1.v1, 0 ) )) = 0 then 0 else (SUM( IF ( t1.resolution = 'fixed', t1.v1, 0 ) ) + SUM( IF ( t1.resolution = 'postponed', t1.v1, 0 ) ))/ (sum( IF ( t1.resolution = 'bydesign', t1.v1, 0 ) ) + SUM( IF ( t1.resolution = 'duplicate', t1.v1, 0 ) ) + SUM( IF ( t1.resolution = 'fixed', t1.v1, 0 ) ) + SUM( IF ( t1.resolution = 'external', t1.v1, 0 ) ) + sum( IF ( t1.resolution = 'notrepro', t1.v1, 0 ) ) + SUM( IF ( t1.resolution = 'postponed', t1.v1, 0 ) ) + SUM( IF ( t1.resolution = 'willnotfix', t1.v1, 0 ) )) * 100 end,2), '%') as BugEfficient, 	SUM( IF ( t1.resolution = 'tostory', t1.v1, 0 ) ) AS Bugtostory, 	SUM( t1.v1 ) AS BUGTOTAL  FROM 	( SELECT 	t1.`OPENEDBY`, 	t1.`OPENEDDATE`, 	t1.`PRODUCT`, 	t1.`PROJECT`, 	t1.`RESOLUTION`, 	1 AS `V1`  FROM 	`zt_bug` t1 	LEFT JOIN zt_product t11 ON t1.PRODUCT = t11.ID WHERE 	t1.deleted = '0'  	) t1  WHERE 	( t1.openedDate >= #{srf.datacontext.openeddatelt}  OR #{srf.datacontext.openeddatelt} IS NULL )  	AND ( t1.openedDate <= #{srf.datacontext.openeddategt} OR #{srf.datacontext.openeddategt} is null )  	AND ( t1.PRODUCT = #{srf.datacontext.producteq} OR #{srf.datacontext.producteq}  IS NULL )  	AND ( t1.PROJECT = #{srf.datacontext.projecteq}  OR #{srf.datacontext.projecteq}  IS NULL )  GROUP BY 	t1.openedBy
			]]>
    </sql>
    <!--数据查询[ProductCreateBug]-->
    <sql id="ProductCreateBug" databaseId="mysql">
		<![CDATA[ SELECT t1.*,t2.productallbug, CONCAT(ROUND(t1.createbugcnt/(case when t2.productallbug = 0 or t2.productallbug is null then 1 else t2.productallbug end)*100,1),'%') from ( SELECT t1.openedBy,t1.productid,t1.productname,COUNT(1) as createbugcnt from ( SELECT t1.id ,t1.openedBy,t2.id as productid,t1.product,t2.`name` as productname from zt_bug t1 LEFT JOIN zt_product t2 on t2.id = t1.product ) t1 GROUP BY t1.openedBy,t1.productid  )t1 LEFT JOIN ( select t1.productid,t1.productname,count(1) as productallbug from ( SELECT t1.id ,t1.openedBy,t2.id as productid,t1.product,t2.`name` as productname from zt_bug t1 LEFT JOIN zt_product t2 on t2.id = t1.product ) t1 GROUP BY t1.productid ) t2 on t2.productid = t1.productid HAVING t1.openedBy = #{srf.sessioncontext.srfloginname}
			]]>
    </sql>
    <!--数据查询[ProjectBugStatusCount]-->
    <sql id="ProjectBugStatusCount" databaseId="mysql">
		<![CDATA[ SELECT t1.`ASSIGNEDTO`, 0 AS `BUGBYDESIGN`, 0 AS `BUGCNT`, 0 AS `BUGDUPLICATE`, 0% AS `BUGEFFICIENT`, 0 AS `BUGEXTERNAL`, 0 AS `BUGFIXED`, 0 AS `BUGNOTREPRO`, 0 AS `BUGPOSTPONED`, 0 AS `BUGTOSTORY`, 0 AS `BUGTOTAL`, 0 AS `BUGWILLNOTFIX`, 0 AS `BUGWJJ`, t1.`ID`, t1.`OPENEDBY`, t1.`PRODUCT`, t11.`NAME` AS `PRODUCTNAME`, t1.`PROJECT`, t2.`PROJECTNAME`, t1.`RESOLVEDBY`, t1.`TITLE` FROM `zt_bug` t1  LEFT JOIN zt_product t11 ON t1.PRODUCT = t11.ID  
			]]>
    </sql>
    <!--数据查询[View]-->
    <sql id="View" databaseId="mysql">
		<![CDATA[ SELECT t1.`ASSIGNEDTO`, 0 AS `BUGBYDESIGN`, 0 AS `BUGCNT`, 0 AS `BUGDUPLICATE`, 0% AS `BUGEFFICIENT`, 0 AS `BUGEXTERNAL`, 0 AS `BUGFIXED`, 0 AS `BUGNOTREPRO`, 0 AS `BUGPOSTPONED`, 0 AS `BUGTOSTORY`, 0 AS `BUGTOTAL`, 0 AS `BUGWILLNOTFIX`, 0 AS `BUGWJJ`, t1.`ID`, t1.`OPENEDBY`, t1.`PRODUCT`, t11.`NAME` AS `PRODUCTNAME`, t1.`PROJECT`, t2.`PROJECTNAME`, t1.`RESOLVEDBY`, t1.`TITLE` FROM `zt_bug` t1  LEFT JOIN zt_product t11 ON t1.PRODUCT = t11.ID  
			]]>
    </sql>
</mapper>

