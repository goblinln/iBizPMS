<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper	namespace="cn.ibizlab.pms.core.ibiz.mapper.ProductSumMapper">

    <!--该方法用于重写mybatis中selectById方法，以实现查询逻辑属性-->
	<select id="selectById"  resultMap="ProductSumResultMap" databaseId="mysql">
        <![CDATA[select t1.* from (SELECT 0 AS `ACTIVESTORYCNT`, 0 AS `CHANGEDSTORYCNT`, 0 AS `CLOSEDSTORYCNT`, t1.`ID`, t1.`NAME`, 0 AS `PLAN`, t1.`PO`, 0 AS `STORYCNT`, 0 AS `WAITSTORYCNT` FROM `zt_product` t1  ) t1 where id=#{id}]]>
    </select>

    <!--通过mybatis将查询结果注入到entity中,通过配置autoMapping="true"由mybatis自动处理映射关系 -->
    <resultMap id="ProductSumResultMap" type="cn.ibizlab.pms.core.ibiz.domain.ProductSum" autoMapping="true">
		<id property="id" column="id" /><!--主键字段映射-->
            
		
    </resultMap>


    <!--数据集合[Default]-->
	 <select id="searchDefault"  parameterType="cn.ibizlab.pms.core.ibiz.filter.ProductSumSearchContext"  resultMap="ProductSumResultMap">
         select t1.* from (
                <include refid="Default" />
         )t1
         <where><if test="ew!=null and ew.sqlSegment!=null and !ew.emptyOfWhere">${ew.sqlSegment}</if></where>
         <if test="ew!=null and ew.sqlSegment!=null and ew.emptyOfWhere">${ew.sqlSegment}</if>
     </select>

    <!--数据集合[ProductCreateStory]-->
	 <select id="searchProductCreateStory"  parameterType="cn.ibizlab.pms.core.ibiz.filter.ProductSumSearchContext"  resultMap="ProductSumResultMap">
         select t1.* from (
                <include refid="ProductCreateStory" />
         )t1
         <where><if test="ew!=null and ew.sqlSegment!=null and !ew.emptyOfWhere">${ew.sqlSegment}</if></where>
         <if test="ew!=null and ew.sqlSegment!=null and ew.emptyOfWhere">${ew.sqlSegment}</if>
     </select>

    <!--数据集合[ProductStorycntAndPlancnt]-->
	 <select id="searchProductStorycntAndPlancnt"  parameterType="cn.ibizlab.pms.core.ibiz.filter.ProductSumSearchContext"  resultMap="ProductSumResultMap">
         select t1.* from (
                <include refid="ProductPlancntAndStorycnt" />
         )t1
         <where><if test="ew!=null and ew.sqlSegment!=null and !ew.emptyOfWhere">${ew.sqlSegment}</if></where>
         <if test="ew!=null and ew.sqlSegment!=null and ew.emptyOfWhere">${ew.sqlSegment}</if>
     </select>

    <!--数据查询[Default]-->
    <sql id="Default" databaseId="mysql">
		<![CDATA[ select t1.*  from(select  t1.id,t1.`NAME`,t1.po,t1.PLAN, case when t1.`begin` = '2030-01-01' then '待定' else t1.`begin` end as `begin`,case when t1.`end` = '2030-01-01' then '待定' else t1.`end` end as `end`, 	sum( IF ( t1.`status` = 'draft', t1.rowcnt, 0 ) ) AS WAITSTORYCNT, 	SUM( IF ( t1.`status` = 'active', t1.rowcnt, 0 ) ) AS ACTIVESTORYCNT, 	SUM( IF ( t1.`status` = 'changed', t1.rowcnt, 0 ) ) AS CHANGEDSTORYCNT, 	SUM( IF ( t1.`status` = 'closed', t1.rowcnt, 0 ) ) AS CLOSEDSTORYCNT, 	sum( IF ( t1.`deleted` = '0',  t1.rowcnt, 0) ) AS STORYCNT  FROM 	( 	SELECT 		1 AS rowcnt, 	t41.id as plan, 		t31.`NAME` AS `NAME`, 		t31.id AS id, 		t1.`status`, 		t31.po, 		t41.`begin`, 		t41.`end` , 		t1.deleted 	FROM 		zt_product t31 		LEFT JOIN ZT_PRODUCTPLAN t41 ON t41.PRODUCT = t31.ID 		LEFT JOIN  `zt_story` t1  ON t41.id = t1.plan  where t31.deleted = '0' and  ( 			( ( t31.`status` = 'normal' ) OR ( t31.`status` = 'closed' AND #{srf.datacontext.closed} = '1' ) )  			and ( t41.id is null or 				( t41.`end` >= now( ) )  				OR ( t41.`end` <= now( ) AND #{srf.datacontext.expired} = '1' )  			)  		) ) t1 GROUP BY t1.id,t1.`NAME`,t1.po,t1.PLAN,t1.`begin`,t1.`end`) t1
			]]>
    </sql>
    <!--数据查询[ProductCreateStory]-->
    <sql id="ProductCreateStory" databaseId="mysql">
		<![CDATA[ SELECT t1.*,IFNULL(t2.storycnt,0) as storycnt,IFNULL(t2.allstorycnt,0) as allstorycnt,IFNULL(t2.zhanbi,0) as zhanbi from ( SELECT t1.id,t1.`name`,t1.`status` from zt_product t1 where t1.id in (SELECT t1.id from zt_product t1 where YEAR(t1.createddate) = '2020' and (t1.createdBy = #{srf.sessioncontext.srfloginname}   or t1.po = #{srf.sessioncontext.srfloginname}  or t1.QD = #{srf.sessioncontext.srfloginname} or t1.RD = #{srf.sessioncontext.srfloginname} )) or t1.id in (SELECT DISTINCT t1.product from zt_story t1 where t1.openedBy = #{srf.sessioncontext.srfloginname}  and YEAR(t1.openeddate) = '2020') or t1.id in (SELECT DISTINCT t1.product from zt_productplan t1 LEFT JOIN zt_action t2 on t1.id = t2.OBJECTID and t2.objectType = 'productplan' where YEAR(t2.date) = '2020' and t2.actor = #{srf.sessioncontext.srfloginname} and t2.action = 'opened' ) ) t1  LEFT JOIN ( select t1.*,t2.allstorycnt , CONCAT(ROUND(t1.storycnt/(case when t2.allstorycnt = 0 or t2.allstorycnt is null then 1 else t2.allstorycnt end)*100,1),'%') as zhanbi from (SELECT t1.openedBy,t1.productid,t1.productname,COUNT(1) as storycnt from ( SELECT t1.id,t1.openedBy,t2.id as productid ,t2.`name` as productname from zt_story t1 LEFT JOIN zt_product t2 on t2.id = t1.product) t1 GROUP BY t1.openedBy,t1.productid ) t1 LEFT JOIN (select t1.productid,t1.productname,COUNT(1) as allstorycnt from ( SELECT t1.id,t1.openedBy,t2.id as productid ,t2.`name` as productname from zt_story t1 LEFT JOIN zt_product t2 on t2.id = t1.product ) t1 GROUP BY t1.productid) t2 on t2.productid = t1.productid  having t1.openedBy = #{srf.sessioncontext.srfloginname} ) t2 on t1.id = t2.productid
			]]>
    </sql>
    <!--数据查询[ProductPlancntAndStorycnt]-->
    <sql id="ProductPlancntAndStorycnt" databaseId="mysql">
		<![CDATA[ SELECT 	t1.*, 	IFNULL( t2.storycnt, 0 ) AS storycnt, 	IFNULL( t2.allstorycnt, 0 ) AS allstorycnt, 	IFNULL( t2.zhanbi, 0 ) AS zhanbi , 	IFNULL(t3.plancnt,0) as plan FROM 	( 	SELECT 		t1.id, 		t1.`name`, 		t1.`status`  	FROM 		zt_product t1  	WHERE 		t1.id IN ( 		SELECT 			t1.id  		FROM 			zt_product t1  		WHERE 			YEAR ( t1.createddate ) = '2020'  			AND ( t1.createdBy =  #{srf.sessioncontext.srfloginname}  			OR t1.po =  #{srf.sessioncontext.srfloginname}  			OR t1.QD =  #{srf.sessioncontext.srfloginname} OR t1.RD =  #{srf.sessioncontext.srfloginname} )  		)  		OR t1.id IN ( SELECT DISTINCT t1.product FROM zt_story t1 WHERE t1.openedBy =  #{srf.sessioncontext.srfloginname} AND YEAR ( t1.openeddate ) = '2020' )  		OR t1.id IN ( 		SELECT DISTINCT 			t1.product  		FROM 			zt_productplan t1 			LEFT JOIN zt_action t2 ON t1.id = t2.OBJECTID  			AND t2.objectType = 'productplan'  		WHERE 			YEAR ( t2.date ) = '2020'  			AND t2.actor =  #{srf.sessioncontext.srfloginname}  			AND t2.action = 'opened'  		)  	) t1 	LEFT JOIN ( 	SELECT 		t1.*, 		t2.allstorycnt, 		CONCAT( 			ROUND( 				t1.storycnt / ( CASE WHEN t2.allstorycnt = 0 OR t2.allstorycnt IS NULL THEN 1 ELSE t2.allstorycnt END ) * 100, 				1  			), 			'%'  		) AS zhanbi  	FROM 		( 		SELECT 			t1.openedBy, 			t1.productid, 			t1.productname, 			COUNT( 1 ) AS storycnt  		FROM 			( 			SELECT 				t1.id, 				t1.openedBy, 				t2.id AS productid, 				t2.`name` AS productname  			FROM 				zt_story t1 				LEFT JOIN zt_product t2 ON t2.id = t1.product  			) t1  		GROUP BY 			t1.openedBy, 			t1.productid  		) t1 		LEFT JOIN ( 		SELECT 			t1.productid, 			t1.productname, 			COUNT( 1 ) AS allstorycnt  		FROM 			( 			SELECT 				t1.id, 				t1.openedBy, 				t2.id AS productid, 				t2.`name` AS productname  			FROM 				zt_story t1 				LEFT JOIN zt_product t2 ON t2.id = t1.product  			) t1  		GROUP BY 			t1.productid  		) t2 ON t2.productid = t1.productid  	HAVING 		t1.openedBy =  #{srf.sessioncontext.srfloginname}  	) t2 ON t1.id = t2.productid 	 	LEFT JOIN ( 	SELECT t1.productid,t1.productname,count(1) as plancnt from ( select t1.id,t2.id as productid,t2.`name` as productname from zt_productplan t1 LEFT JOIN zt_product t2 on t2.id = t1.product where t1.parent >= '0'  and t1.`begin` >= (CONCAT( YEAR(NOW()),'-01-01',' 00:00:00')) and t1.`end` <= (CONCAT( YEAR(NOW()),'-12-31',' 23:59:59')) ) t1 GROUP BY t1.productid  ) t3 on t3.productid = t1.id 
			]]>
    </sql>
    <!--数据查询[View]-->
    <sql id="View" databaseId="mysql">
		<![CDATA[ SELECT 0 AS `ACTIVESTORYCNT`, 0 AS `CHANGEDSTORYCNT`, 0 AS `CLOSEDSTORYCNT`, t1.`ID`, t1.`NAME`, 0 AS `PLAN`, t1.`PO`, 0 AS `STORYCNT`, 0 AS `WAITSTORYCNT` FROM `zt_product` t1  
			]]>
    </sql>
</mapper>

