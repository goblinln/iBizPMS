<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper	namespace="cn.ibizlab.pms.core.ibiz.mapper.ProductStatsMapper">
	
	<!-- 无视图模式 -->
	<sql id="select" databaseId="mysql">
        <![CDATA[ SELECT (SELECT COUNT(1) FROM ZT_BUG WHERE PRODUCT = t1.`ID` AND `STATUS` = 'active' AND DELETED ='0') AS `ACTIVEBUGCNT`, (SELECT COUNT(1) FROM ZT_STORY WHERE PRODUCT = t1.`ID` AND `STATUS`='active' AND DELETED = '0') AS `ACTIVESTORYCNT`, 1 AS `ASSIGNTOMEBUGCNT`, (SELECT COUNT(1) FROM ZT_BUG WHERE PRODUCT = t1.`ID` AND DELETED = '0') AS `BUGCNT`, t1.`CODE`, (SELECT t.name FROM zt_project t,zt_projectproduct t2 WHERE t.id=t2.project and t2.product = t1.id limit 1) AS `CURRPROJECT`, t1.`DELETED`, (SELECT COUNT(1) FROM ZT_STORY WHERE PRODUCT = t1.`ID` AND STAGE = 'developing' AND DELETED = '0') AS `DEVELOPINGSTORYCNT`, t1.`ID`, t1.`NAME`, (SELECT COUNT(1) FROM ZT_RELEASE WHERE PRODUCT= t1.`ID` AND  `STATUS`= 'normal' AND DELETED = '0') AS `NORMALRELEASECNT`, (SELECT COUNT(1) FROM ZT_BUG WHERE PRODUCT = t1.`ID` AND `STATUS` <> 'closed' AND DELETED = '0') AS `NOTCLOSEDBUGCNT`, t1.`order` AS `ORDER1`, (SELECT COUNT(1) FROM ZT_STORY WHERE PRODUCT = t1.`ID` AND STAGE = 'planned' AND DELETED ='0') AS `PLANNEDSTORYCNT`, (SELECT COUNT(1) FROM ZT_PROJECT t2 LEFT JOIN ZT_PROJECTPRODUCT t ON t2.ID = t.project WHERE t.PRODUCT = t1.id AND t2.DELETED = '0' and t2.`status` in( 'wait','doing') and t2.`END` < now() ) AS `POSTPONEDPROJECTCNT`, (SELECT COUNT(1) FROM ZT_PRODUCTPLAN WHERE PRODUCT= t1.`ID` AND DELETED = '0') AS `PRODUCTPLANCNT`, (SELECT COUNT(1) FROM ZT_RELEASE WHERE PRODUCT= t1.`ID` AND DELETED = '0') AS `RELEASECNT`, (SELECT COUNT(1) FROM ZT_STORY WHERE PRODUCT = t1.`ID` AND STAGE = 'released' AND DELETED = '0') AS `RELEASEDSTORYCNT`, (SELECT COUNT(1) FROM ZT_PROJECT LEFT JOIN ZT_PROJECTPRODUCT ON  ZT_PROJECT.ID = ZT_PROJECTPRODUCT.project WHERE PRODUCT = t1.`ID` AND DELETED = '0') AS `RESPROJECTCNT`, t1.`STATUS`, (SELECT COUNT(1) FROM ZT_STORY WHERE PRODUCT = t1.`ID` AND DELETED = '0') AS `STORYCNT`, (SELECT COUNT(1) FROM ZT_STORY WHERE PRODUCT = t1.`ID` AND STAGE = 'testing' AND DELETED = '0') AS `TESTINGSTORYCNT`, t1.`TYPE`, (SELECT COUNT(1) FROM ZT_BUG WHERE PRODUCT = t1.`ID` AND `CONFIRMED` = 0 AND DELETED = '0') AS `UNCONFIRMBUGCNT`, (SELECT COUNT(1) FROM ZT_PROJECT LEFT JOIN ZT_PROJECTPRODUCT ON  ZT_PROJECT.ID = ZT_PROJECTPRODUCT.project WHERE PRODUCT = t1.`ID` AND `STATUS` <> 'closed' AND DELETED = '0') AS `UNDONERESPROJECTCNT`, (SELECT COUNT(1) FROM ZT_PRODUCTPLAN WHERE PRODUCT= t1.`ID`  AND `END` > CURDATE() AND DELETED = '0') AS `UNENDPRODUCTPLANCNT`, (SELECT COUNT(1) FROM ZT_STORY WHERE PRODUCT = t1.`ID` AND STAGE = 'wait' AND DELETED = '0') AS `WAITSTORYCNT`, (SELECT COUNT( 1 ) FROM ZT_BUG WHERE PRODUCT = t1.`ID`  AND DELETED = '0' and resolvedDate BETWEEN CONCAT(YEAR(DATE_ADD(now(),INTERVAL -1 day)),'-',month(DATE_ADD(now(),INTERVAL -1 day)),'-',day(DATE_ADD(now(),INTERVAL -1 day)),' 00:00:00') and CONCAT(YEAR(DATE_ADD(now(),INTERVAL -1 day)),'-',month(DATE_ADD(now(),INTERVAL -1 day)),'-',day(DATE_ADD(now(),INTERVAL -1 day)),' 23:59:59')) AS `YESTERDAYCLOSEDBUGCNT`, 5 AS `YESTERDAYCONFIRMBUGCNT`, (SELECT COUNT( 1 ) FROM ZT_BUG WHERE PRODUCT = t1.`ID` AND `STATUS` = 'closed' AND DELETED = '0' and CLOSEDDATE BETWEEN CONCAT(YEAR(DATE_ADD(now(),INTERVAL -1 day)),'-',month(DATE_ADD(now(),INTERVAL -1 day)),'-',day(DATE_ADD(now(),INTERVAL -1 day)),' 00:00:00') and CONCAT(YEAR(DATE_ADD(now(),INTERVAL -1 day)),'-',month(DATE_ADD(now(),INTERVAL -1 day)),'-',day(DATE_ADD(now(),INTERVAL -1 day)),' 23:59:59')) AS `YESTERDAYRESOLVEDBUGCNT` FROM `zt_product` t1   ]]>
    </sql>

	
	<!-- 搜索条件 -->
	<sql id="searchMode" databaseId="mysql">
		<if test="srf.n_id_eq != null ">
			<![CDATA[ AND  t1.`ID` = #{srf.n_id_eq,jdbcType=BIGINT} ]]>
        </if>
		<if test="srf.n_type_eq != null ">
			<![CDATA[ AND  t1.`TYPE` = #{srf.n_type_eq,jdbcType=VARCHAR} ]]>
        </if>
		<if test="srf.n_name_like != null ">
            <bind name="bind_n_name_like" value="'%' + srf.n_name_like + '%'" />
            <![CDATA[ AND  t1.`NAME` like #{bind_n_name_like,jdbcType=VARCHAR} ]]>
        </if>
		<if test="srf.n_status_eq != null ">
			<![CDATA[ AND  t1.`STATUS` = #{srf.n_status_eq,jdbcType=VARCHAR} ]]>
        </if>
		<if test="ew!=null and ew.sqlSegment!=null and ew.sqlSegment!=''">
		AND ${ew.sqlSegment}
		</if>
	</sql>


    <!--该方法用于重写mybatis中selectById方法，以实现查询逻辑属性-->
	<select id="selectById"  resultMap="ProductStatsResultMap" databaseId="mysql">
        <include refid="select" />
		<trim prefix="where" prefixOverrides="and">
			<if test="true">
			<![CDATA[ AND t1.DELETED = '0' ]]>
			</if>
			<![CDATA[ AND T1.ID = #{id} ]]>
		</trim>
    </select>


    <!--通过mybatis将查询结果注入到entity中,通过配置autoMapping="true"由mybatis自动处理映射关系 -->
    <resultMap id="ProductStatsResultMap" type="cn.ibizlab.pms.core.ibiz.domain.ProductStats" autoMapping="true">
		<id property="id" column="id" /><!--主键字段映射-->
            
		
    </resultMap>


    <!--数据集合[Default]-->
	 <select id="searchDefault"  parameterType="cn.ibizlab.pms.core.ibiz.filter.ProductStatsSearchContext"  resultMap="ProductStatsResultMap">
	 	select * from (
         select t1.* from (
                <include refid="Default" />
         )t1
		 )t1
     </select>

    <!--数据集合[NoOpenProduct]-->
	 <select id="searchNoOpenProduct"  parameterType="cn.ibizlab.pms.core.ibiz.filter.ProductStatsSearchContext"  resultMap="ProductStatsResultMap">
	 	select * from (
         select t1.* from (
                <include refid="NoOpenProduct" />
         )t1
		 )t1
     </select>

    <!--数据集合[ProdctQuantiGird]-->
	 <select id="searchProdctQuantiGird"  parameterType="cn.ibizlab.pms.core.ibiz.filter.ProductStatsSearchContext"  resultMap="ProductStatsResultMap">
         select t1.* from (
                <include refid="ProdctQuantiGird" />
         )t1
     </select>

    <!--数据集合[ProductInputTable]-->
	 <select id="searchProductInputTable"  parameterType="cn.ibizlab.pms.core.ibiz.filter.ProductStatsSearchContext"  resultMap="ProductStatsResultMap">
         select t1.* from (
                <include refid="ProductInputTable" />
         )t1
     </select>

    <!--数据集合[Productcompletionstatistics]-->
	 <select id="searchProductcompletionstatistics"  parameterType="cn.ibizlab.pms.core.ibiz.filter.ProductStatsSearchContext"  resultMap="ProductStatsResultMap">
         select t1.* from (
                <include refid="Productcompletionstatistics" />
         )t1
     </select>

    <!--数据查询[Default]-->
    <sql id="Default" databaseId="mysql">
		<![CDATA[ SELECT 	( SELECT COUNT( 1 ) FROM ZT_BUG WHERE PRODUCT = t1.`ID` AND `STATUS` = 'active' AND DELETED = '0' ) AS `ACTIVEBUGCNT`, 	( SELECT COUNT( 1 ) FROM ZT_STORY WHERE PRODUCT = t1.`ID` AND `STATUS` = 'active' AND DELETED = '0' ) AS `ACTIVESTORYCNT`, 	1 AS `ASSIGNTOMEBUGCNT`, 	( SELECT COUNT( 1 ) FROM ZT_BUG WHERE PRODUCT = t1.`ID` AND DELETED = '0' ) AS `BUGCNT`, 	t1.`CODE`, 	( SELECT 	t.NAME  FROM 	zt_project t, 	zt_projectproduct t2  WHERE 	t.id = t2.project  	AND t2.product = t1.id  	LIMIT 1  	) AS `CURRPROJECT`, 	t1.`DELETED`, 	( SELECT COUNT( 1 ) FROM ZT_STORY WHERE PRODUCT = t1.`ID` AND STAGE = 'developing' AND DELETED = '0' ) AS `DEVELOPINGSTORYCNT`, 	t1.`ID`, 	t1.`NAME`, 	( SELECT COUNT( 1 ) FROM ZT_RELEASE WHERE PRODUCT = t1.`ID` AND `STATUS` = 'normal' AND DELETED = '0' ) AS `NORMALRELEASECNT`, 	( SELECT COUNT( 1 ) FROM ZT_BUG WHERE PRODUCT = t1.`ID` AND `STATUS` <> 'closed' AND DELETED = '0' ) AS `NOTCLOSEDBUGCNT`, 	( SELECT COUNT( 1 ) FROM ZT_STORY WHERE PRODUCT = t1.`ID` AND STAGE = 'planned' AND DELETED = '0' ) AS `PLANNEDSTORYCNT`, 	( SELECT 	COUNT( 1 )  FROM 	ZT_PROJECT t2 	LEFT JOIN ZT_PROJECTPRODUCT t ON t2.ID = t.project  WHERE 	t.PRODUCT = t1.id  	AND t2.DELETED = '0'  	AND t2.`status` IN ( 'wait', 'doing' )  	AND t2.`END` < now( )  	) AS `POSTPONEDPROJECTCNT`, 	( SELECT COUNT( 1 ) FROM ZT_PRODUCTPLAN WHERE PRODUCT = t1.`ID` AND DELETED = '0' ) AS `PRODUCTPLANCNT`, 	( SELECT COUNT( 1 ) FROM ZT_RELEASE WHERE PRODUCT = t1.`ID` AND DELETED = '0' ) AS `RELEASECNT`, 	( SELECT COUNT( 1 ) FROM ZT_STORY WHERE PRODUCT = t1.`ID` AND STAGE = 'released' AND DELETED = '0' ) AS `RELEASEDSTORYCNT`, 	( SELECT 	COUNT( 1 )  FROM 	ZT_PROJECT 	LEFT JOIN ZT_PROJECTPRODUCT ON ZT_PROJECT.ID = ZT_PROJECTPRODUCT.project  WHERE 	PRODUCT = t1.`ID`  	AND DELETED = '0'  	) AS `RESPROJECTCNT`, 	t1.`STATUS`, 	( SELECT COUNT( 1 ) FROM ZT_STORY WHERE PRODUCT = t1.`ID` AND DELETED = '0' ) AS `STORYCNT`, 	( SELECT COUNT( 1 ) FROM ZT_STORY WHERE PRODUCT = t1.`ID` AND STAGE = 'testing' AND DELETED = '0' ) AS `TESTINGSTORYCNT`, 	t1.`TYPE`, 	( SELECT COUNT( 1 ) FROM ZT_BUG WHERE PRODUCT = t1.`ID` AND `CONFIRMED` = 0 AND DELETED = '0' ) AS `UNCONFIRMBUGCNT`, 	( SELECT 	COUNT( 1 )  FROM 	ZT_PROJECT 	LEFT JOIN ZT_PROJECTPRODUCT ON ZT_PROJECT.ID = ZT_PROJECTPRODUCT.project  WHERE 	PRODUCT = t1.`ID`  	AND `STATUS` <> 'closed'  	AND DELETED = '0'  	) AS `UNDONERESPROJECTCNT`, 	( SELECT COUNT( 1 ) FROM ZT_PRODUCTPLAN WHERE PRODUCT = t1.`ID` AND `END` > CURDATE( ) AND DELETED = '0' ) AS `UNENDPRODUCTPLANCNT`, 	( SELECT COUNT( 1 ) FROM ZT_STORY WHERE PRODUCT = t1.`ID` AND STAGE = 'wait' AND DELETED = '0' ) AS `WAITSTORYCNT`, 	( SELECT 	COUNT( 1 )  FROM 	ZT_BUG  WHERE 	PRODUCT = t1.`ID`  	AND DELETED = '0'  	AND resolvedDate BETWEEN CONCAT( 	YEAR ( DATE_ADD( now( ), INTERVAL - 1 DAY ) ), 	'-', 	MONTH ( DATE_ADD( now( ), INTERVAL - 1 DAY ) ), 	'-', 	DAY ( DATE_ADD( now( ), INTERVAL - 1 DAY ) ), 	' 00:00:00'  	)  	AND CONCAT( 	YEAR ( DATE_ADD( now( ), INTERVAL - 1 DAY ) ), 	'-', 	MONTH ( DATE_ADD( now( ), INTERVAL - 1 DAY ) ), 	'-', 	DAY ( DATE_ADD( now( ), INTERVAL - 1 DAY ) ), 	' 23:59:59'  	)  	) AS `YESTERDAYCLOSEDBUGCNT`, 	5 AS `YESTERDAYCONFIRMBUGCNT`, 	( SELECT 	COUNT( 1 )  FROM 	ZT_BUG  WHERE 	PRODUCT = t1.`ID`  	AND `STATUS` = 'closed'  	AND DELETED = '0'  	AND CLOSEDDATE BETWEEN CONCAT( 	YEAR ( DATE_ADD( now( ), INTERVAL - 1 DAY ) ), 	'-', 	MONTH ( DATE_ADD( now( ), INTERVAL - 1 DAY ) ), 	'-', 	DAY ( DATE_ADD( now( ), INTERVAL - 1 DAY ) ), 	' 00:00:00'  	)  	AND CONCAT( 	YEAR ( DATE_ADD( now( ), INTERVAL - 1 DAY ) ), 	'-', 	MONTH ( DATE_ADD( now( ), INTERVAL - 1 DAY ) ), 	'-', 	DAY ( DATE_ADD( now( ), INTERVAL - 1 DAY ) ), 	' 23:59:59'  	)  	) AS `YESTERDAYRESOLVEDBUGCNT` , 		(CASE WHEN T2.OBJECTORDER IS NOT NULL THEN T2.OBJECTORDER ELSE  t1.`ORDER` END) as `ORDER1`, 	(CASE WHEN T2.OBJECTORDER IS NOT NULL THEN 1 ELSE 0 END) as `ISTOP` FROM 	`zt_product` t1 	left join t_ibz_top t2 on t1.id = t2.OBJECTID and t2.type = 'product' and t2.ACCOUNT = #{srf.sessioncontext.srfloginname} ]]>
		<trim prefix="where" prefixOverrides="and">
			<if test="true">
                <![CDATA[ AND t1.DELETED = '0' ]]>
            </if>
			<if test="true">
                <![CDATA[ AND (t1.id in( 	SELECT t.root from zt_team t WHERE 	t.account =  #{srf.sessioncontext.srfloginname} 	AND t.type = 'product'  	  	) or t1.acl = 'open' ) 	 ]]>
            </if>
			<if test="true">
                <![CDATA[ AND t1.orgid = #{srf.sessioncontext.srforgid} ]]>
            </if>
			<include refid="searchMode" />
		</trim>
    </sql>
	
	<select id="selectDefault"  parameterType="cn.ibizlab.pms.core.ibiz.filter.ProductStatsSearchContext" resultMap="ProductStatsResultMap">
		<include refid="Default" />
	</select>

    <!--数据查询[NoOpenProduct]-->
    <sql id="NoOpenProduct" databaseId="mysql">
		<![CDATA[ SELECT 	( SELECT COUNT( 1 ) FROM ZT_BUG WHERE PRODUCT = t1.`ID` AND `STATUS` = 'active' AND DELETED = '0' ) AS `ACTIVEBUGCNT`, 	( SELECT COUNT( 1 ) FROM ZT_STORY WHERE PRODUCT = t1.`ID` AND `STATUS` = 'active' AND DELETED = '0' ) AS `ACTIVESTORYCNT`, 	t1.`CODE`, 	( SELECT 	t.`NAME`  FROM 	zt_project t, 	zt_projectproduct t2  WHERE 	t.id = t2.project  	AND t2.product = t1.id  	LIMIT 1  	) AS `CURRPROJECT`, 	t1.`DELETED`, 	t1.`ID`, 	t1.`NAME`, 	( SELECT COUNT( 1 ) FROM ZT_PRODUCTPLAN WHERE PRODUCT = t1.`ID` AND DELETED = '0' ) AS `PRODUCTPLANCNT`, 	( SELECT COUNT( 1 ) FROM ZT_RELEASE WHERE PRODUCT = t1.`ID` AND DELETED = '0' ) AS `RELEASECNT`, 	t1.`STATUS`, 	t1.`TYPE`, 	( CASE WHEN T2.OBJECTORDER IS NOT NULL THEN T2.OBJECTORDER ELSE t1.`ORDER` END ) AS `ORDER1`  FROM 	`zt_product` t1 	LEFT JOIN t_ibz_top t2 ON t1.id = t2.OBJECTID  	AND t2.type = 'product'  	AND t2.ACCOUNT = #{srf.sessioncontext.srfloginname} ]]>
		<trim prefix="where" prefixOverrides="and">
			<if test="true">
                <![CDATA[ AND t1.DELETED = '0' ]]>
            </if>
			<if test="true">
                <![CDATA[ AND ( t1.`STATUS` = 'normal' ) ]]>
            </if>
			<if test="true">
                <![CDATA[ AND (t1.id IN ( SELECT 	t.product  FROM 	zt_projectproduct t  WHERE 	t.project IN ( SELECT 	t3.root  FROM 	zt_team t3  WHERE 	t3.account = #{srf.sessioncontext.srfloginname}  	AND t3.type = 'project'  	)  	) or  t1.acl = 'open') ]]>
            </if>
			<include refid="searchMode" />
		</trim>
    </sql>
	
	<select id="selectNoOpenProduct"  parameterType="cn.ibizlab.pms.core.ibiz.filter.ProductStatsSearchContext" resultMap="ProductStatsResultMap">
		<include refid="NoOpenProduct" />
	</select>

    <!--数据查询[ProdctQuantiGird]-->
    <sql id="ProdctQuantiGird" databaseId="mysql">
		<![CDATA[ SELECT t1.id,t1.`name`,IFNULL(t2.storycnt,0) as storycnt,IFNULL(t2.finishedStory,0) as finishedStorycnt,IFNULL(t3.bugcnt,0) as bugcnt,IFNULL(t3.resolvedBugCnt,0) as resolvedBugCnt,IFNULL(t3.importantbugcnt,0) as importantbugcnt,IFNULL(t4.bugstory,0)  as bugstory , CONCAT(IFNULL(ROUND(t3.importantbugcnt/t3.bugcnt,2)*100,0),'%') as ImportantBugpercent from zt_product t1 LEFT JOIN ( SELECT t1.product,t1.`name`, IFNULL(COUNT(1),0) as storycnt , SUM(IF(t1.stage in ('tested','developing','developed'),t1.num,0)) as finishedStory from ( select t1.`stage`,t1.closedReason,t1.id as storyid,t1.product,t2.`name`, 1 as num from zt_story t1 LEFT JOIN zt_product t2 on t1.product = t2.id where t2.id <> '0' and t1.deleted = '0' and t2.deleted = '0') t1 GROUP BY t1.product  ) t2 on t1.id = t2.product LEFT JOIN ( SELECT t1.product,t1.`name`, IFNULL(COUNT(1),0) as bugcnt, SUM(IF(t1.`STATUS` = 'closed' and t1.resolution in ('fixed'),t1.num,0)) as resolvedBugCnt, SUM(IF(t1.pri >= 1 and t1.pri <= 3,t1.num,0)) as importantbugcnt from   ( SELECT t1.`STATUS`,t1.resolution,t1.pri,t1.id,t1.product,t2.`name`,1 as num from zt_bug t1 LEFT JOIN zt_product t2 on t1.product = t2.id where t2.id <> '0' and t1.deleted = '0' and t2.deleted = '0' ) t1 GROUP BY t1.product) t3 on t1.id = t3.product  LEFT JOIN ( SELECT t2.product,t2.`name`,COUNT(1) as bugstory from ( SELECT t1.story,t1.product,t2.`name`,1 as num from zt_bug t1 LEFT JOIN zt_product t2 on t1.product = t2.id where t1.story <> 0 and t1.deleted = '0' and t2.deleted = '0' ) t2 GROUP BY t2.product ) t4 on t1.id = t4.product where t1.deleted = '0' ]]>
		<trim prefix="where" prefixOverrides="and">
			<include refid="searchMode" />
		</trim>
    </sql>
	
	<select id="selectProdctQuantiGird"  parameterType="cn.ibizlab.pms.core.ibiz.filter.ProductStatsSearchContext" resultMap="ProductStatsResultMap">
		<include refid="ProdctQuantiGird" />
	</select>

    <!--数据查询[ProductInputTable]-->
    <sql id="ProductInputTable" databaseId="mysql">
		<![CDATA[ SELECT t1.id,t1.`name`,t1.RESPROJECTCNT,ROUND(IFNULL(t2.haveconsumed,0),2)  as haveconsumed from ( SELECT t1.id,t1.`name`,COUNT(1) as RESPROJECTCNT from zt_product t1 LEFT JOIN zt_projectproduct t2 on t1.id = t2.product LEFT JOIN zt_project t3 on t3.id = t2.project  where t3.deleted = '0' and t1.deleted = '0' GROUP BY t1.id) t1  LEFT JOIN ( SELECT t1.id,t1.`name`,SUM(t4.consumed) as haveconsumed from zt_product t1 LEFT JOIN zt_projectproduct t2 on t1.id = t2.product LEFT JOIN zt_project t3 on t3.id = t2.project LEFT JOIN zt_task  t4 on t4.project = t3.id  where t3.deleted = '0' and t1.deleted = '0' and t3.deleted = '0' and t4.parent >= 0 GROUP BY t1.id ) t2 on t1.id = t2.id  ]]>
		<trim prefix="where" prefixOverrides="and">
			<include refid="searchMode" />
		</trim>
    </sql>
	
	<select id="selectProductInputTable"  parameterType="cn.ibizlab.pms.core.ibiz.filter.ProductStatsSearchContext" resultMap="ProductStatsResultMap">
		<include refid="ProductInputTable" />
	</select>

    <!--数据查询[Productcompletionstatistics]-->
    <sql id="Productcompletionstatistics" databaseId="mysql">
		<![CDATA[ SELECT *,CONCAT(ROUND(t1.finishedstorycnt/t1.storycnt,2)*100,'%') as ImportantBugpercent from ( SELECT t1.product,t1.`name`, IFNULL(COUNT(1),0) as storycnt , SUM(IF(t1.stage in ('tested','developing','developed'),t1.num,0)) as finishedStorycnt from ( select t1.`stage`,t1.closedReason,t1.id as storyid,t1.product,t2.`name`, 1 as num from zt_story t1 LEFT JOIN zt_product t2 on t1.product = t2.id where t2.id <> '0' and t1.deleted = '0' and t2.deleted = '0') t1 GROUP BY t1.product   ) t1 ]]>
		<trim prefix="where" prefixOverrides="and">
			<include refid="searchMode" />
		</trim>
    </sql>
	
	<select id="selectProductcompletionstatistics"  parameterType="cn.ibizlab.pms.core.ibiz.filter.ProductStatsSearchContext" resultMap="ProductStatsResultMap">
		<include refid="Productcompletionstatistics" />
	</select>

    <!--数据查询[View]-->
    <sql id="View" databaseId="mysql">
		<![CDATA[ SELECT (SELECT COUNT(1) FROM ZT_BUG WHERE PRODUCT = t1.`ID` AND `STATUS` = 'active' AND DELETED ='0') AS `ACTIVEBUGCNT`, (SELECT COUNT(1) FROM ZT_STORY WHERE PRODUCT = t1.`ID` AND `STATUS`='active' AND DELETED = '0') AS `ACTIVESTORYCNT`, 1 AS `ASSIGNTOMEBUGCNT`, (SELECT COUNT(1) FROM ZT_BUG WHERE PRODUCT = t1.`ID` AND DELETED = '0') AS `BUGCNT`, t1.`CODE`, (SELECT t.name FROM zt_project t,zt_projectproduct t2 WHERE t.id=t2.project and t2.product = t1.id limit 1) AS `CURRPROJECT`, t1.`DELETED`, (SELECT COUNT(1) FROM ZT_STORY WHERE PRODUCT = t1.`ID` AND STAGE = 'developing' AND DELETED = '0') AS `DEVELOPINGSTORYCNT`, t1.`ID`, t1.`NAME`, (SELECT COUNT(1) FROM ZT_RELEASE WHERE PRODUCT= t1.`ID` AND  `STATUS`= 'normal' AND DELETED = '0') AS `NORMALRELEASECNT`, (SELECT COUNT(1) FROM ZT_BUG WHERE PRODUCT = t1.`ID` AND `STATUS` <> 'closed' AND DELETED = '0') AS `NOTCLOSEDBUGCNT`, t1.`order` AS `ORDER1`, (SELECT COUNT(1) FROM ZT_STORY WHERE PRODUCT = t1.`ID` AND STAGE = 'planned' AND DELETED ='0') AS `PLANNEDSTORYCNT`, (SELECT COUNT(1) FROM ZT_PROJECT t2 LEFT JOIN ZT_PROJECTPRODUCT t ON t2.ID = t.project WHERE t.PRODUCT = t1.id AND t2.DELETED = '0' and t2.`status` in( 'wait','doing') and t2.`END` < now() ) AS `POSTPONEDPROJECTCNT`, (SELECT COUNT(1) FROM ZT_PRODUCTPLAN WHERE PRODUCT= t1.`ID` AND DELETED = '0') AS `PRODUCTPLANCNT`, (SELECT COUNT(1) FROM ZT_RELEASE WHERE PRODUCT= t1.`ID` AND DELETED = '0') AS `RELEASECNT`, (SELECT COUNT(1) FROM ZT_STORY WHERE PRODUCT = t1.`ID` AND STAGE = 'released' AND DELETED = '0') AS `RELEASEDSTORYCNT`, (SELECT COUNT(1) FROM ZT_PROJECT LEFT JOIN ZT_PROJECTPRODUCT ON  ZT_PROJECT.ID = ZT_PROJECTPRODUCT.project WHERE PRODUCT = t1.`ID` AND DELETED = '0') AS `RESPROJECTCNT`, t1.`STATUS`, (SELECT COUNT(1) FROM ZT_STORY WHERE PRODUCT = t1.`ID` AND DELETED = '0') AS `STORYCNT`, (SELECT COUNT(1) FROM ZT_STORY WHERE PRODUCT = t1.`ID` AND STAGE = 'testing' AND DELETED = '0') AS `TESTINGSTORYCNT`, t1.`TYPE`, (SELECT COUNT(1) FROM ZT_BUG WHERE PRODUCT = t1.`ID` AND `CONFIRMED` = 0 AND DELETED = '0') AS `UNCONFIRMBUGCNT`, (SELECT COUNT(1) FROM ZT_PROJECT LEFT JOIN ZT_PROJECTPRODUCT ON  ZT_PROJECT.ID = ZT_PROJECTPRODUCT.project WHERE PRODUCT = t1.`ID` AND `STATUS` <> 'closed' AND DELETED = '0') AS `UNDONERESPROJECTCNT`, (SELECT COUNT(1) FROM ZT_PRODUCTPLAN WHERE PRODUCT= t1.`ID`  AND `END` > CURDATE() AND DELETED = '0') AS `UNENDPRODUCTPLANCNT`, (SELECT COUNT(1) FROM ZT_STORY WHERE PRODUCT = t1.`ID` AND STAGE = 'wait' AND DELETED = '0') AS `WAITSTORYCNT`, (SELECT COUNT( 1 ) FROM ZT_BUG WHERE PRODUCT = t1.`ID`  AND DELETED = '0' and resolvedDate BETWEEN CONCAT(YEAR(DATE_ADD(now(),INTERVAL -1 day)),'-',month(DATE_ADD(now(),INTERVAL -1 day)),'-',day(DATE_ADD(now(),INTERVAL -1 day)),' 00:00:00') and CONCAT(YEAR(DATE_ADD(now(),INTERVAL -1 day)),'-',month(DATE_ADD(now(),INTERVAL -1 day)),'-',day(DATE_ADD(now(),INTERVAL -1 day)),' 23:59:59')) AS `YESTERDAYCLOSEDBUGCNT`, 5 AS `YESTERDAYCONFIRMBUGCNT`, (SELECT COUNT( 1 ) FROM ZT_BUG WHERE PRODUCT = t1.`ID` AND `STATUS` = 'closed' AND DELETED = '0' and CLOSEDDATE BETWEEN CONCAT(YEAR(DATE_ADD(now(),INTERVAL -1 day)),'-',month(DATE_ADD(now(),INTERVAL -1 day)),'-',day(DATE_ADD(now(),INTERVAL -1 day)),' 00:00:00') and CONCAT(YEAR(DATE_ADD(now(),INTERVAL -1 day)),'-',month(DATE_ADD(now(),INTERVAL -1 day)),'-',day(DATE_ADD(now(),INTERVAL -1 day)),' 23:59:59')) AS `YESTERDAYRESOLVEDBUGCNT` FROM `zt_product` t1   ]]>
		<trim prefix="where" prefixOverrides="and">
			<if test="true">
                <![CDATA[ AND t1.DELETED = '0' ]]>
            </if>
			<include refid="searchMode" />
		</trim>
    </sql>
	
	<select id="selectView"  parameterType="cn.ibizlab.pms.core.ibiz.filter.ProductStatsSearchContext" resultMap="ProductStatsResultMap">
		<include refid="View" />
	</select>

</mapper>

