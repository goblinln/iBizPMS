<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper	namespace="cn.ibizlab.pms.core.ibiz.mapper.EMPLOYEELOADMapper">

    <!--该方法用于重写mybatis中selectById方法，以实现查询逻辑属性-->
	<select id="selectById"  resultMap="EMPLOYEELOADResultMap" databaseId="mysql">
        <![CDATA[select t1.* from (SELECT t1.`ASSIGNEDTO`, t1.`ID`, ０ AS `LEFT`, t1.`NAME`, t1.`PROJECT`, t11.`NAME` AS `PROJECTNAME`, ０ AS `TASKCNT`, ０ AS `TOTALLEFT`, ０ AS `TOTALTASKCNT`, ０ AS `WORKLOAD` FROM `ZT_TASK` t1  LEFT JOIN zt_project t11 ON t1.PROJECT = t11.ID  ) t1 where id=#{id}]]>
    </select>

    <!--通过mybatis将查询结果注入到entity中,通过配置autoMapping="true"由mybatis自动处理映射关系 -->
    <resultMap id="EMPLOYEELOADResultMap" type="cn.ibizlab.pms.core.ibiz.domain.EMPLOYEELOAD" autoMapping="true">
		<id property="id" column="id" /><!--主键字段映射-->
		<result property="project" column="project" />
            
		
		<!--通过mybatis自动注入关系属性[主实体]，fetchType="lazy"为懒加载配置 -->
		<association property="ztproject" javaType="cn.ibizlab.pms.core.zentao.domain.Project" column="project" select="cn.ibizlab.pms.core.zentao.mapper.ProjectMapper.selectById" fetchType="lazy"></association>
    </resultMap>

	<!--关系实体暴露select方法供主实体通过外键查询关系实体数据[实体关系名称:DER1N_IBZ_EMPLOYEELOAD_ZT_PROJECT_PROJECT] -->
	 <select id="selectByProject" resultMap="EMPLOYEELOADResultMap">
         select t1.* from (
                <include refid="Default" />
			 ) t1
			 where  project=#{id}
     </select>

    <!--数据集合[Default]-->
	 <select id="searchDefault"  parameterType="cn.ibizlab.pms.core.ibiz.filter.EMPLOYEELOADSearchContext"  resultMap="EMPLOYEELOADResultMap">
         select t1.* from (
                <include refid="Default" />
         )t1
         <where><if test="ew!=null and ew.sqlSegment!=null and !ew.emptyOfWhere">${ew.sqlSegment}</if></where>
         <if test="ew!=null and ew.sqlSegment!=null and ew.emptyOfWhere">${ew.sqlSegment}</if>
     </select>

    <!--数据查询[Default]-->
    <sql id="Default" databaseId="mysql">
		<![CDATA[ SELECT t1.`ASSIGNEDTO`, t1.`ID`, ０ AS `LEFT`, t1.`NAME`, t1.`PROJECT`, t11.`NAME` AS `PROJECTNAME`, ０ AS `TASKCNT`, ０ AS `TOTALLEFT`, ０ AS `TOTALTASKCNT`, ０ AS `WORKLOAD` FROM `ZT_TASK` t1  LEFT JOIN zt_project t11 ON t1.PROJECT = t11.ID  
			]]>
    </sql>
    <!--数据查询[GETWOERKLOAD]-->
    <sql id="GETWOERKLOAD" databaseId="mysql">
		<![CDATA[ select t1.*,t4.taskcnt as totaltaskcnt,t4.`left` as totalleft,CONCAT(ROUND( t4.`left`/ ((case when #{srf.datacontext.workday} is null then 6 else #{srf.datacontext.workday}  end) * (case when #{srf.datacontext.everydaytime}  is null then 7 else #{srf.datacontext.everydaytime}  end)) * 100, 2),'%')  as zzfz from ( select  t1.assignedTo,t1.project,t1.projectname,COUNT(1) as taskcnt,sum(t1.`left`) as `left` from( select t1.id,t1.`name`,t1.`left`,t1.project ,t2.`name` as projectname,t1.assignedTo from zt_task t1 left join zt_project t2 on t1.project = t2.id  where t1.deleted = '0' and t1.`status` in ('wait','doing') and t2.deleted = '0' and t2.`status` in ('wait','doing') and t1.assignedTo <> '' and t1.parent >= 0 and not EXISTS(select  1  from zt_team t where t.type = 'task' and t.root = t1.id)  union  select t1.id,t1.`name`,t3.`left`,t1.project ,t2.`name` as projectname,t3.account as assignedTo from zt_task t1 left join zt_project t2 on t1.project = t2.id  INNER join zt_team t3 on t1.id = t3.root and t3.type = 'task' where t1.deleted = '0' and t1.`status` in ('wait','doing') and t2.deleted = '0' and t2.`status` in ('wait','doing')  and t1.`left` > 0 ) t1 GROUP BY t1.assignedTo,t1.project,t1.projectname) t1 left join zt_user tt on tt.account = t1.assignedTo  left join  ( select  t1.assignedTo,COUNT(1) as taskcnt,sum(t1.`left`) as `left` from( select t1.id,t1.`name`,t1.`left`,t1.project ,t2.`name` as projectname,t1.assignedTo from zt_task t1 left join zt_project t2 on t1.project = t2.id  where t1.deleted = '0' and t1.`status` in ('wait','doing') and t2.deleted = '0' and t2.`status` in ('wait','doing') and t1.assignedTo <> '' and t1.parent >= 0 and not EXISTS(select  1  from zt_team t where t.type = 'task' and t.root = t1.id)  union  select t1.id,t1.`name`,t3.`left`,t1.project ,t2.`name` as projectname,t3.account as assignedTo from zt_task t1 left join zt_project t2 on t1.project = t2.id  INNER join zt_team t3 on t1.id = t3.root and t3.type = 'task' where t1.deleted = '0' and t1.`status` in ('wait','doing') and t2.deleted = '0' and t2.`status` in ('wait','doing')  and t1.`left` > 0 ) t1 GROUP BY t1.assignedTo) t4 on t4.assignedTo = t1.assignedTo where tt.dept = #{srf.datacontext.dept} or #{srf.datacontext.dept} is #{srf.datacontext.dept}
			]]>
    </sql>
    <!--数据查询[View]-->
    <sql id="View" databaseId="mysql">
		<![CDATA[ SELECT t1.`ASSIGNEDTO`, t1.`ID`, ０ AS `LEFT`, t1.`NAME`, t1.`PROJECT`, t11.`NAME` AS `PROJECTNAME`, ０ AS `TASKCNT`, ０ AS `TOTALLEFT`, ０ AS `TOTALTASKCNT`, ０ AS `WORKLOAD` FROM `ZT_TASK` t1  LEFT JOIN zt_project t11 ON t1.PROJECT = t11.ID  
			]]>
    </sql>
</mapper>

