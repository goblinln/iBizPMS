<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper	namespace="cn.ibizlab.pms.core.ibiz.mapper.SysUpdateFeaturesMapper">
	
	<!-- 无视图模式 -->
	<sql id="select" databaseId="mysql">
        <![CDATA[ SELECT t1.`CREATEDATE`, t1.`CREATEMAN`, t1.`DISPLAYORDER`, t1.`FEATURESDESC`, t1.`SYS_UPDATE_FEATURESID`, t1.`SYS_UPDATE_FEATURESNAME`, t1.`SYS_UPDATE_LOGID`, t11.`SYS_UPDATE_LOGNAME`, t1.`TYPE`, t1.`UPDATEDATE`, t1.`UPDATEMAN`, t1.`UPFEATURES` FROM `T_SYS_UPDATE_FEATURES` t1  LEFT JOIN `T_SYS_UPDATE_LOG` t11 ON t1.`SYS_UPDATE_LOGID` = t11.`SYS_UPDATE_LOGID`   ]]>
    </sql>

	
	<!-- 搜索条件 -->
	<sql id="searchMode" databaseId="mysql">
		<if test="srf.n_sys_update_featuresname_like != null ">
            <bind name="bind_n_sys_update_featuresname_like" value="'%' + srf.n_sys_update_featuresname_like + '%'" />
            <![CDATA[ AND  t1.`SYS_UPDATE_FEATURESNAME` like #{bind_n_sys_update_featuresname_like,jdbcType=VARCHAR} ]]>
        </if>
		<if test="srf.n_type_eq != null ">
			<![CDATA[ AND  t1.`TYPE` = #{srf.n_type_eq,jdbcType=VARCHAR} ]]>
        </if>
		<if test="srf.n_sys_update_logname_eq != null ">
			<![CDATA[ AND  t11.`SYS_UPDATE_LOGNAME` = #{srf.n_sys_update_logname_eq,jdbcType=VARCHAR} ]]>
        </if>
		<if test="srf.n_sys_update_logname_like != null ">
            <bind name="bind_n_sys_update_logname_like" value="'%' + srf.n_sys_update_logname_like + '%'" />
            <![CDATA[ AND  t11.`SYS_UPDATE_LOGNAME` like #{bind_n_sys_update_logname_like,jdbcType=VARCHAR} ]]>
        </if>
		<if test="srf.n_sys_update_logid_eq != null ">
			<![CDATA[ AND  t1.`SYS_UPDATE_LOGID` = #{srf.n_sys_update_logid_eq,jdbcType=VARCHAR} ]]>
        </if>
		<if test="ew!=null and ew.sqlSegment!=null and ew.sqlSegment!=''">
		AND ${ew.sqlSegment}
		</if>
	</sql>


    <!--该方法用于重写mybatis中selectById方法，以实现查询逻辑属性-->
	<select id="selectById"  resultMap="SysUpdateFeaturesResultMap" databaseId="mysql">
        <include refid="select" />
		<trim prefix="where" prefixOverrides="and">
			<![CDATA[ AND T1.SYS_UPDATE_FEATURESID = #{id} ]]>
		</trim>
    </select>


    <!--通过mybatis将查询结果注入到entity中,通过配置autoMapping="true"由mybatis自动处理映射关系 -->
    <resultMap id="SysUpdateFeaturesResultMap" type="cn.ibizlab.pms.core.ibiz.domain.SysUpdateFeatures" autoMapping="true">
		<id property="sysupdatefeaturesid" column="sys_update_featuresid" /><!--主键字段映射-->
		<result property="sysupdatefeaturesname" column="sys_update_featuresname" />
		<result property="sysupdatelogname" column="sys_update_logname" />
		<result property="sysupdatelogid" column="sys_update_logid" />
            
		
		<!--通过mybatis自动注入关系属性[主实体]，fetchType="lazy"为懒加载配置 -->
		<association property="sysupdatelog" javaType="cn.ibizlab.pms.core.ibiz.domain.SysUpdateLog" column="sys_update_logid" select="cn.ibizlab.pms.core.ibiz.mapper.SysUpdateLogMapper.selectById" fetchType="lazy"></association>
    </resultMap>

	<!--关系实体暴露select方法供主实体通过外键查询关系实体数据[实体关系名称:DER1N_SYS_UPDATE_FEATURES_SYS_UPDATE_LOG_SYS_UPDATE_LOGID] -->
	 <select id="selectBySysupdatelogid" resultMap="SysUpdateFeaturesResultMap"  databaseId="mysql">
        <include refid="select" />
		<trim prefix="where" prefixOverrides="and">
			<![CDATA[ AND t1.`SYS_UPDATE_LOGID`=#{sysupdatelogid} ]]>
		</trim>
     </select>

    <!--数据集合[Default]-->
	 <select id="searchDefault"  parameterType="cn.ibizlab.pms.core.ibiz.filter.SysUpdateFeaturesSearchContext"  resultMap="SysUpdateFeaturesResultMap">
         select t1.* from (
                <include refid="Default" />
         )t1
     </select>

    <!--数据查询[Default]-->
    <sql id="Default" databaseId="mysql">
		<![CDATA[ SELECT t1.`CREATEDATE`, t1.`CREATEMAN`, t1.`DISPLAYORDER`, t1.`SYS_UPDATE_FEATURESID`, t1.`SYS_UPDATE_FEATURESNAME`, t1.`SYS_UPDATE_LOGID`, t11.`SYS_UPDATE_LOGNAME`, t1.`TYPE`, t1.`UPDATEDATE`, t1.`UPDATEMAN`, t1.`UPFEATURES`, t1.FEATURESDESC FROM `T_SYS_UPDATE_FEATURES` t1  LEFT JOIN T_SYS_UPDATE_LOG t11 ON t1.SYS_UPDATE_LOGID = t11.SYS_UPDATE_LOGID   ]]>
		<trim prefix="where" prefixOverrides="and">
			<include refid="searchMode" />
		</trim>
    </sql>

    <!--数据查询[View]-->
    <sql id="View" databaseId="mysql">
		<![CDATA[ SELECT t1.`CREATEDATE`, t1.`CREATEMAN`, t1.`DISPLAYORDER`, t1.`FEATURESDESC`, t1.`SYS_UPDATE_FEATURESID`, t1.`SYS_UPDATE_FEATURESNAME`, t1.`SYS_UPDATE_LOGID`, t11.`SYS_UPDATE_LOGNAME`, t1.`TYPE`, t1.`UPDATEDATE`, t1.`UPDATEMAN`, t1.`UPFEATURES` FROM `T_SYS_UPDATE_FEATURES` t1  LEFT JOIN `T_SYS_UPDATE_LOG` t11 ON t1.`SYS_UPDATE_LOGID` = t11.`SYS_UPDATE_LOGID`   ]]>
		<trim prefix="where" prefixOverrides="and">
			<include refid="searchMode" />
		</trim>
    </sql>

</mapper>

