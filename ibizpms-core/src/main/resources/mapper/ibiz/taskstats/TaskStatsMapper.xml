<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper	namespace="cn.ibizlab.pms.core.ibiz.mapper.TaskStatsMapper">

    <!--该方法用于重写mybatis中selectById方法，以实现查询逻辑属性-->
	<select id="selectById"  resultMap="TaskStatsResultMap" databaseId="mysql">
        <![CDATA[select t1.* from (SELECT t1.`ID`, t1.`NAME`, 0 AS `TASKEFFICIENT`, 0 AS `TOTALCONSUMED`, 0 AS `TOTALESTIMATE`, 0 AS `TOTALLEFT` FROM `zt_task` t1  ) t1 where id=#{id}]]>
    </select>

    <!--通过mybatis将查询结果注入到entity中,通过配置autoMapping="true"由mybatis自动处理映射关系 -->
    <resultMap id="TaskStatsResultMap" type="cn.ibizlab.pms.core.ibiz.domain.TaskStats" autoMapping="true">
		<id property="id" column="id" /><!--主键字段映射-->


    </resultMap>


    <!--数据集合[Default]-->
	 <select id="searchDefault"  parameterType="cn.ibizlab.pms.core.ibiz.filter.TaskStatsSearchContext"  resultMap="TaskStatsResultMap">
         select t1.* from (
                <include refid="Default" />
         )t1
         <where><if test="ew!=null and ew.sqlSegment!=null and !ew.emptyOfWhere">${ew.sqlSegment}</if></where>
         <if test="ew!=null and ew.sqlSegment!=null and ew.emptyOfWhere">${ew.sqlSegment}</if>
     </select>

    <!--数据集合[UserFinishTaskSum]-->
	 <select id="searchUserFinishTaskSum"  parameterType="cn.ibizlab.pms.core.ibiz.filter.TaskStatsSearchContext"  resultMap="TaskStatsResultMap">
         select t1.* from (
                <include refid="UserFinishTaskSum" />
         )t1
         <where><if test="ew!=null and ew.sqlSegment!=null and !ew.emptyOfWhere">${ew.sqlSegment}</if></where>
         <if test="ew!=null and ew.sqlSegment!=null and ew.emptyOfWhere">${ew.sqlSegment}</if>
     </select>

    <!--数据查询[Default]-->
    <sql id="Default" databaseId="mysql">
		<![CDATA[ SELECT t1.`ID`, t1.`NAME`, 0 AS `TASKEFFICIENT`, 0 AS `TOTALCONSUMED`, 0 AS `TOTALESTIMATE`, 0 AS `TOTALLEFT` FROM `zt_task` t1  
			]]>
    </sql>
    <!--数据查询[UserFinishTaskSum]-->
    <sql id="UserFinishTaskSum" databaseId="mysql">
		<![CDATA[ SELECT 	t1.project, 	t2.`name` as PROJECTNAME, 	t1.finishedBy, 	sum( t1.estimate ) AS TOTALESTIMATE, 	sum( t1.consumed ) AS TOTALCONSUMED, 	CASE WHEN sum( t1.consumed ) <= sum( t1.estimate ) THEN 		'100.00%' ELSE CONCAT ( FORMAT(( sum( t1.estimate ) / sum( t1.consumed )) * 100, 2 ), '%' )  	END AS TASKEFFICIENT FROM 	(( 		SELECT 			t1.project, 			t1.finishedBy, 			t1.estimate, 			CASE WHEN t2.consumed IS NULL THEN 				t1.consumed ELSE t2.consumed  			END AS consumed  		FROM 			zt_task t1 			LEFT JOIN zt_taskestimate t2 ON t1.id = t2.task  		WHERE 			t1.deleted = '0'  			AND t1.parent <> - 1  			AND t1.`status` IN ( 'done', 'closed' )  			AND t1.finishedBy <> ''  			AND t1.id NOT IN ( SELECT t1.id FROM zt_team t1 WHERE t1.type = 'task' )  			) UNION 		( 		SELECT 			t1.project, 			t2.account AS finishedBy, 			t2.estimate, 			CASE WHEN t3.consumed IS NULL THEN 				t2.consumed ELSE t3.consumed  			END AS consumed  		FROM 			zt_task t1 			JOIN zt_team t2 ON t2.type = 'task'  			AND t1.id = t2.root 			LEFT JOIN zt_taskestimate t3 ON t1.id = t3.task  			AND t2.account = t3.account  		WHERE 			t1.deleted = '0'  			AND t1.parent <> - 1  		AND t1.`status` IN ( 'done', 'closed' ))  	) t1 	JOIN zt_project t2 ON t1.project = t2.id  WHERE 	t2.deleted = '0'  GROUP BY 	t1.project, 	t1.finishedBy
			]]>
    </sql>
    <!--数据查询[View]-->
    <sql id="View" databaseId="mysql">
		<![CDATA[ SELECT t1.`ID`, t1.`NAME`, 0 AS `TASKEFFICIENT`, 0 AS `TOTALCONSUMED`, 0 AS `TOTALESTIMATE`, 0 AS `TOTALLEFT` FROM `zt_task` t1  
			]]>
    </sql>
</mapper>

