<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper	namespace="cn.ibizlab.pms.core.ibiz.mapper.TaskStatsMapper">

    <!--该方法用于重写mybatis中selectById方法，以实现查询逻辑属性-->
	<select id="selectById"  resultMap="TaskStatsResultMap" databaseId="mysql">
        <![CDATA[select t1.* from (SELECT t1.`ID`, t1.`NAME`, 0 AS `TOTALCONSUMED`, 0 AS `TOTALESTIMATE`, 0 AS `TOTALLEFT` FROM `zt_task` t1  ) t1 where id=#{id}]]>
    </select>

    <!--通过mybatis将查询结果注入到entity中,通过配置autoMapping="true"由mybatis自动处理映射关系 -->
    <resultMap id="TaskStatsResultMap" type="cn.ibizlab.pms.core.ibiz.domain.TaskStats" autoMapping="true">
		<id property="id" column="id" /><!--主键字段映射-->


    </resultMap>


    <!--数据集合[Default]-->
	 <select id="searchDefault"  parameterType="cn.ibizlab.pms.core.ibiz.filter.TaskStatsSearchContext"  resultMap="TaskStatsResultMap">
         select t1.* from (
                <include refid="Default" />
         )t1
         <where><if test="ew!=null and ew.sqlSegment!=null and !ew.emptyOfWhere">${ew.sqlSegment}</if></where>
         <if test="ew!=null and ew.sqlSegment!=null and ew.emptyOfWhere">${ew.sqlSegment}</if>
     </select>

    <!--数据集合[UserFinishTaskSum]-->
	 <select id="searchUserFinishTaskSum"  parameterType="cn.ibizlab.pms.core.ibiz.filter.TaskStatsSearchContext"  resultMap="TaskStatsResultMap">
         select t1.* from (
                <include refid="UserFinishTaskSum" />
         )t1
         <where><if test="ew!=null and ew.sqlSegment!=null and !ew.emptyOfWhere">${ew.sqlSegment}</if></where>
         <if test="ew!=null and ew.sqlSegment!=null and ew.emptyOfWhere">${ew.sqlSegment}</if>
     </select>

    <!--数据查询[Default]-->
    <sql id="Default" databaseId="mysql">
		<![CDATA[ SELECT t1.`ID`, t1.`NAME`, 0 AS `TOTALCONSUMED`, 0 AS `TOTALESTIMATE`, 0 AS `TOTALLEFT` FROM `zt_task` t1  
			]]>
    </sql>
    <!--数据查询[UserFinishTaskSum]-->
    <sql id="UserFinishTaskSum" databaseId="mysql">
		<![CDATA[ SELECT 	t1.id as `PROJECT`, 	t1.`name` as `PROJECTNAME`, 	t2.account as `FINISHEDBY`, 	t2.`TOTALESTIMATE`, 	t2.`TOTALCONSUMED`, 	t2.`TOTALLEFT`  FROM 	zt_project t1 	JOIN ( 	SELECT 		t1.project, 		t1.account, 		sum( t1.estimate ) AS `TOTALESTIMATE`, 		sum( t1.consumed ) AS `TOTALCONSUMED`, 		sum( t1.`left` ) AS `TOTALLEFT`  	FROM 		(( 			SELECT 				t1.project, 				t2.account, 				t2.`left` + t2.consumed AS estimate, 				t2.consumed, 				t2.`left`  			FROM 				( 				SELECT 					t1.id, 					t1.project  				FROM 					zt_task t1  				WHERE 					t1.deleted = '0'  					AND t1.parent <> - 1  				AND t1.id IN ( SELECT DISTINCT root FROM zt_team WHERE type = 'task' )) t1 				JOIN zt_taskestimate t2 ON t1.id = t2.task  				) UNION 			( 			SELECT 				t1.project, 				t1.finishedBy AS account, 				t1.estimate, 				t1.consumed, 				t1.`left`  			FROM 				zt_task t1  			WHERE 				t1.deleted = '0'  				AND t1.parent <> - 1  				AND t1.finishedBy <> ''  			AND t1.id NOT IN ( SELECT DISTINCT root FROM zt_team WHERE type = 'task' ))) t1  	GROUP BY 		t1.project, 		t1.account  	) t2 ON t1.id = t2.project  WHERE 	deleted = '0'
			]]>
    </sql>
    <!--数据查询[View]-->
    <sql id="View" databaseId="mysql">
		<![CDATA[ SELECT t1.`ID`, t1.`NAME`, 0 AS `TOTALCONSUMED`, 0 AS `TOTALESTIMATE`, 0 AS `TOTALLEFT` FROM `zt_task` t1  
			]]>
    </sql>
</mapper>

