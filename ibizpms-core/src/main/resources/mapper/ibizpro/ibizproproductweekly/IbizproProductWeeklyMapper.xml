<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper	namespace="cn.ibizlab.pms.core.ibizpro.mapper.IbizproProductWeeklyMapper">

    <!--该方法用于重写mybatis中selectById方法，以实现查询逻辑属性-->
	<select id="selectById"  resultMap="IbizproProductWeeklyResultMap" databaseId="mysql">
        <![CDATA[select t1.* from (SELECT t1.`CREATEDATE`, t1.`CREATEMAN`, t1.`DATE`, t1.`IBIZPRO_PRODUCTDAILYNAME`, t1.`IBIZPRO_PRODUCTWEEKLYID`, t1.`PO`, t1.`PRODUCT`, t1.`TASKS`, t1.`TOTALESTIMATES`, t1.`UPDATEDATE`, t1.`UPDATEMAN` FROM `T_IBIZPRO_PRODUCTWEEKLY` t1  ) t1 where ibizpro_productweeklyid=#{id}]]>
    </select>

    <!--通过mybatis将查询结果注入到entity中,通过配置autoMapping="true"由mybatis自动处理映射关系 -->
    <resultMap id="IbizproProductWeeklyResultMap" type="cn.ibizlab.pms.core.ibizpro.domain.IbizproProductWeekly" autoMapping="true">
		<id property="ibizproProductweeklyid" column="ibizpro_productweeklyid" /><!--主键字段映射-->
		<result property="ibizproproductweeklyname" column="ibizpro_productdailyname" />
		<result property="product" column="product" />


		<!--通过mybatis自动注入关系属性[主实体]，fetchType="lazy"为懒加载配置 -->
		<association property="productweekly" javaType="cn.ibizlab.pms.core.zentao.domain.Product" column="product" select="cn.ibizlab.pms.core.zentao.mapper.ProductMapper.selectById" fetchType="lazy"></association>
    </resultMap>

	<!--关系实体暴露select方法供主实体通过外键查询关系实体数据[实体关系名称:DER1N_IBIZPRO_PRODUCTWEEKLY_ZT_PRODUCT_PRODUCT] -->
	 <select id="selectByProduct" resultMap="IbizproProductWeeklyResultMap">
         select t1.* from (
                <include refid="Default" />
			 ) t1
			 where  product=#{id}
     </select>

    <!--数据集合[Default]-->
	 <select id="searchDefault"  parameterType="cn.ibizlab.pms.core.ibizpro.filter.IbizproProductWeeklySearchContext"  resultMap="IbizproProductWeeklyResultMap">
         select t1.* from (
                <include refid="Default" />
         )t1
         <where><if test="ew!=null and ew.sqlSegment!=null and !ew.emptyOfWhere">${ew.sqlSegment}</if></where>
         <if test="ew!=null and ew.sqlSegment!=null and ew.emptyOfWhere">${ew.sqlSegment}</if>
     </select>

    <!--数据查询[Default]-->
    <sql id="Default" databaseId="mysql">
		<![CDATA[ SELECT t1.`CREATEDATE`, t1.`CREATEMAN`, t1.`DATE`, t1.`IBIZPRO_PRODUCTDAILYNAME`, t1.`IBIZPRO_PRODUCTWEEKLYID`, t1.`PO`, t1.`PRODUCT`, t1.`TASKS`, t1.`TOTALESTIMATES`, t1.`UPDATEDATE`, t1.`UPDATEMAN` FROM `T_IBIZPRO_PRODUCTWEEKLY` t1  
			]]>
    </sql>
    <!--数据查询[ProductWeeklyQuery]-->
    <sql id="ProductWeeklyQuery" databaseId="mysql">
		<![CDATA[ select t1.*,t11.`name` as taskname, t11.deadline, t11.ESTSTARTED, t11.type as TASKTYPE, (CONCAT_WS('',case when t11.consumed = 0 or t11.consumed is null then '0' when t11.`left` = 0 or t11.`left` is null then '100' else ROUND((ROUND(t11.`consumed`/(t11.`left` + t11.consumed),2)) * 100) end ,'%')) as PROGRESSRATE, ((case when t11.deadline is null or t11.deadline = '0000-00-00' or t11.deadline = '1970-01-01' then '' when t11.`status` in ('wait','doing') and t11.deadline <DATE_FORMAT(now(),'%Y-%m-%d') then CONCAT_WS('','延期',TIMESTAMPDIFF(DAY, t11.deadline, now()),'天') else '' end))as DELAYDAYS  from  (select  t1.DATE, t1.TASK, t1.ACCOUNT, ROUND(sum(t1.CONSUMED),2) as CONSUMED, task as id  from ( SELECT t1.`ACCOUNT`, t1.`CONSUMED`, t1.`DATE`, t1.`ID`, t1.`LEFT`, t1.`TASK` FROM `zt_taskestimate` t1 where YEARWEEK(DATE_FORMAT(DATE_SUB(t1.date, INTERVAL -1 DAY),'%Y-%m-%d')) = YEARWEEK(DATE_FORMAT(DATE_SUB(#{srf.datacontext.date}, INTERVAL -1 DAY),'%Y-%m-%d')) ) t1 GROUP BY t1.DATE,t1.TASK,t1.ACCOUNT) t1 left join zt_task t11 on t1.task = t11.id
					 WHERE 	(find_in_set(t1.id,#{srf.datacontext.tasks}))
			]]>
    </sql>
    <!--数据查询[View]-->
    <sql id="View" databaseId="mysql">
		<![CDATA[ SELECT t1.`CREATEDATE`, t1.`CREATEMAN`, t1.`DATE`, t1.`IBIZPRO_PRODUCTDAILYNAME`, t1.`IBIZPRO_PRODUCTWEEKLYID`, t1.`PO`, t1.`PRODUCT`, t1.`TASKS`, t1.`TOTALESTIMATES`, t1.`UPDATEDATE`, t1.`UPDATEMAN` FROM `T_IBIZPRO_PRODUCTWEEKLY` t1  
			]]>
    </sql>
</mapper>

