<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper	namespace="cn.ibizlab.pms.core.ibizpro.mapper.IbzproProductUserTaskMapper">

    <!--该方法用于重写mybatis中selectById方法，以实现查询逻辑属性-->
	<select id="selectById"  resultMap="IbzproProductUserTaskResultMap" databaseId="mysql">
        <![CDATA[select t1.* from (SELECT t1.`ACCOUNT`, t1.`CONSUMED`, t1.`DATE`, t1.`ID`, t1.`LEFT`, t1.`MAXDATE`, t1.`MINDATE`, t1.`TASK` FROM `zt_taskestimate` t1  ) t1 where id=#{id}]]>
    </select>

    <!--通过mybatis将查询结果注入到entity中,通过配置autoMapping="true"由mybatis自动处理映射关系 -->
    <resultMap id="IbzproProductUserTaskResultMap" type="cn.ibizlab.pms.core.ibizpro.domain.IbzproProductUserTask" autoMapping="true">
		<id property="id" column="id" /><!--主键字段映射-->


    </resultMap>


    <!--数据集合[Default]-->
	 <select id="searchDefault"  parameterType="cn.ibizlab.pms.core.ibizpro.filter.IbzproProductUserTaskSearchContext"  resultMap="IbzproProductUserTaskResultMap">
         select t1.* from (
                <include refid="Default" />
         )t1
         <where><if test="ew!=null and ew.sqlSegment!=null and !ew.emptyOfWhere">${ew.sqlSegment}</if></where>
         <if test="ew!=null and ew.sqlSegment!=null and ew.emptyOfWhere">${ew.sqlSegment}</if>
     </select>

    <!--数据集合[ProductDailyUserTaskStats]-->
	 <select id="searchProductDailyUserTaskStats"  parameterType="cn.ibizlab.pms.core.ibizpro.filter.IbzproProductUserTaskSearchContext"  resultMap="IbzproProductUserTaskResultMap">
         select t1.* from (
                <include refid="ProductDailyUserTaskStats" />
         )t1
         <where><if test="ew!=null and ew.sqlSegment!=null and !ew.emptyOfWhere">${ew.sqlSegment}</if></where>
         <if test="ew!=null and ew.sqlSegment!=null and ew.emptyOfWhere">${ew.sqlSegment}</if>
     </select>

    <!--数据集合[ProductMonthlyUserTaskStats]-->
	 <select id="searchProductMonthlyUserTaskStats"  parameterType="cn.ibizlab.pms.core.ibizpro.filter.IbzproProductUserTaskSearchContext"  resultMap="IbzproProductUserTaskResultMap">
         select t1.* from (
                <include refid="ProductMonthlyUserTaskStats" />
         )t1
         <where><if test="ew!=null and ew.sqlSegment!=null and !ew.emptyOfWhere">${ew.sqlSegment}</if></where>
         <if test="ew!=null and ew.sqlSegment!=null and ew.emptyOfWhere">${ew.sqlSegment}</if>
     </select>

    <!--数据集合[ProductWeeklyUserTaskStats]-->
	 <select id="searchProductWeeklyUserTaskStats"  parameterType="cn.ibizlab.pms.core.ibizpro.filter.IbzproProductUserTaskSearchContext"  resultMap="IbzproProductUserTaskResultMap">
         select t1.* from (
                <include refid="ProductWeeklyUserTaskStats" />
         )t1
         <where><if test="ew!=null and ew.sqlSegment!=null and !ew.emptyOfWhere">${ew.sqlSegment}</if></where>
         <if test="ew!=null and ew.sqlSegment!=null and ew.emptyOfWhere">${ew.sqlSegment}</if>
     </select>

    <!--数据查询[Default]-->
    <sql id="Default" databaseId="mysql">
		<![CDATA[ SELECT t1.`ACCOUNT`, t1.`CONSUMED`, t1.`DATE`, t1.`ID`, t1.`LEFT`, t1.`MAXDATE`, t1.`MINDATE`, t1.`TASK` FROM `zt_taskestimate` t1  
			]]>
    </sql>
    <!--数据查询[ProductDailyUserTaskStats]-->
    <sql id="ProductDailyUserTaskStats" databaseId="mysql">
		<![CDATA[ select  t1.*, t2.`name` AS taskname, t2.deadline, t2.ESTSTARTED, t2.type AS TASKTYPE, (CONCAT_WS('', CASE WHEN t2.consumed = 0 OR t2.consumed IS NULL THEN '0' WHEN t2.`left` = 0 OR t2.`left` IS NULL THEN '100' ELSE ROUND((ROUND(t2.`consumed`/( t2.`left` + t2.consumed ), 2 )) * 100 ) END, '%')) AS PROGRESSRATE,  ((CASE WHEN t2.deadline IS NULL OR t2.deadline = '0000-00-00' OR t2.deadline = '1970-01-01' THEN '' WHEN t2.`status` IN ( 'wait', 'doing' ) AND t2.deadline < DATE_FORMAT(now(), '%Y-%m-%d') THEN CONCAT_WS('', '延期', TIMESTAMPDIFF(DAY, t2.deadline, now()), '天') ELSE '' END)) AS DELAYDAYS  from (SELECT t1.DATE, t1.TASK, t1.ACCOUNT, ROUND(sum(t1.CONSUMED), 2) AS CONSUMED, task AS id  FROM `zt_taskestimate` t1  WHERE t1.date >= DATE_FORMAT(#{srf.datacontext.begin}, '%Y-%m-%d') AND t1.date <= DATE_FORMAT(#{srf.datacontext.end}, '%Y-%m-%d') GROUP BY t1.DATE, t1.TASK, t1.ACCOUNT) t1 left join zt_task t2  on t1.task = t2.id  where  FIND_IN_SET(t1.task, #{srf.datacontext.tasks})
			]]>
    </sql>
    <!--数据查询[ProductMonthlyUserTaskStats]-->
    <sql id="ProductMonthlyUserTaskStats" databaseId="mysql">
		<![CDATA[ SELECT t1.*, t2.`name` AS taskname, t2.deadline, t2.ESTSTARTED, t2.type AS TASKTYPE, (CONCAT_WS('', CASE WHEN t2.consumed = 0 OR t2.consumed IS NULL THEN '0' WHEN t2.`left` = 0 OR t2.`left` IS NULL THEN '100' ELSE ROUND(( ROUND( t2.`consumed` /( t2.`left` + t2.consumed ), 2 )) * 100 ) END, '%')) AS PROGRESSRATE, ((CASE WHEN t2.deadline IS NULL OR t2.deadline = '0000-00-00' OR t2.deadline = '1970-01-01' THEN '' WHEN t2.`status` IN ( 'wait', 'doing' ) AND t2.deadline < DATE_FORMAT( now(), '%Y-%m-%d' ) THEN CONCAT_WS( '', '延期', TIMESTAMPDIFF( DAY, t2.deadline, now()), '天' ) ELSE '' END )) AS DELAYDAYS  FROM (SELECT t1.DATE, t1.TASK, t1.ACCOUNT, ROUND(sum(t1.CONSUMED), 2) AS CONSUMED, task AS id  FROM `zt_taskestimate` t1  WHERE #{srf.datacontext.yearmonth} = DATE_FORMAT(t1.date, '%Y-%m') GROUP BY t1.DATE, t1.TASK, t1.ACCOUNT  ) t1 LEFT JOIN zt_task t2 ON t1.task = t2.id WHERE FIND_IN_SET(t1.task, #{srf.datacontext.tasks})
			]]>
    </sql>
    <!--数据查询[ProductWeeklyUserTaskStats]-->
    <sql id="ProductWeeklyUserTaskStats" databaseId="mysql">
		<![CDATA[ select t1.*,t11.`name` as taskname, t11.deadline, t11.ESTSTARTED, t11.type as TASKTYPE, (CONCAT_WS('',case when t11.consumed = 0 or t11.consumed is null then '0' when t11.`left` = 0 or t11.`left` is null then '100' else ROUND((ROUND(t11.`consumed`/(t11.`left` + t11.consumed),2)) * 100) end ,'%')) as PROGRESSRATE, ((case when t11.deadline is null or t11.deadline = '0000-00-00' or t11.deadline = '1970-01-01' then '' when t11.`status` in ('wait','doing') and t11.deadline <DATE_FORMAT(now(),'%Y-%m-%d') then CONCAT_WS('','延期',TIMESTAMPDIFF(DAY, t11.deadline, now()),'天') else '' end))as DELAYDAYS  from  (select  t1.weekday, t1.TASK, t1.ACCOUNT, t1.DATE, MAX(t1.DATE) as maxdate, min(t1.date) as mindate, ROUND(sum(t1.CONSUMED),2) as CONSUMED, task as id  from ( SELECT t1.`ACCOUNT`, t1.`CONSUMED`, t1.`DATE`,YEARWEEK(DATE_FORMAT(DATE_SUB(t1.date, INTERVAL -1 DAY),'%Y-%m-%d')) as weekday, t1.`ID`, t1.`LEFT`, t1.`TASK` FROM `zt_taskestimate` t1 where YEARWEEK(DATE_FORMAT(DATE_SUB(t1.date, INTERVAL -1 DAY),'%Y-%m-%d')) = YEARWEEK(DATE_FORMAT(DATE_SUB(now(), INTERVAL -1 DAY),'%Y-%m-%d')) ) t1 GROUP BY t1.weekday,t1.TASK,t1.ACCOUNT) t1 left join zt_task t11 on t1.task = t11.id
					 WHERE 	(find_in_set(t1.task,#{srf.datacontext.tasks}))
			]]>
    </sql>
    <!--数据查询[View]-->
    <sql id="View" databaseId="mysql">
		<![CDATA[ SELECT t1.`ACCOUNT`, t1.`CONSUMED`, t1.`DATE`, t1.`ID`, t1.`LEFT`, t1.`MAXDATE`, t1.`MINDATE`, t1.`TASK` FROM `zt_taskestimate` t1  
			]]>
    </sql>
</mapper>

