<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper	namespace="cn.ibizlab.pms.core.ibizpro.mapper.IBIZPRO_INDEXMapper">

    <!--该方法用于重写mybatis中selectById方法，以实现查询逻辑属性-->
	<select id="selectById"  resultMap="IBIZPRO_INDEXResultMap" databaseId="mysql">
        <![CDATA[select t1.* from (SELECT t1.`DELETED`, t1.`INDEXID`, t1.`INDEXNAME`, t1.`INDEX_TYPE` FROM (SELECT 'bug' AS `INDEX_TYPE`,v1.`ID` AS `INDEXID` ,v1.`TITLE` AS `INDEXNAME` ,NULL AS `DELETED` FROM (SELECT t1.`ID`, t1.`TITLE` FROM `zt_bug` t1  ) v1 UNION ALL SELECT 'case' AS `INDEX_TYPE`,v2.`ID` AS `INDEXID` ,v2.`TITLE` AS `INDEXNAME` ,NULL AS `DELETED` FROM (SELECT t1.`ID`, t1.`TITLE` FROM `zt_case` t1  ) v2 UNION ALL SELECT 'product' AS `INDEX_TYPE`,v3.`ID` AS `INDEXID` ,v3.`NAME` AS `INDEXNAME` ,NULL AS `DELETED` FROM (SELECT t1.`ID`, t1.`NAME` FROM `zt_product` t1  ) v3 UNION ALL SELECT 'project' AS `INDEX_TYPE`,v4.`ID` AS `INDEXID` ,v4.`NAME` AS `INDEXNAME` ,NULL AS `DELETED` FROM (SELECT t1.`ID`, t1.`NAME` FROM `zt_project` t1  ) v4 UNION ALL SELECT 'story' AS `INDEX_TYPE`,v5.`ID` AS `INDEXID` ,v5.`TITLE` AS `INDEXNAME` ,NULL AS `DELETED` FROM (SELECT t1.`ID`, t1.`TITLE` FROM `zt_story` t1  ) v5 UNION ALL SELECT 'task' AS `INDEX_TYPE`,v6.`ID` AS `INDEXID` ,v6.`NAME` AS `INDEXNAME` ,NULL AS `DELETED` FROM (SELECT t1.`ID`, t1.`NAME` FROM `zt_task` t1  ) v6 ) t1  ) t1 where indexid=#{id}]]>
    </select>

    <!--通过mybatis将查询结果注入到entity中,通过配置autoMapping="true"由mybatis自动处理映射关系 -->
    <resultMap id="IBIZPRO_INDEXResultMap" type="cn.ibizlab.pms.core.ibizpro.domain.IBIZPRO_INDEX" autoMapping="true">
		<result property="indextype" column="index_type" />


    </resultMap>


    <!--数据集合[Default]-->
	 <select id="searchDefault"  parameterType="cn.ibizlab.pms.core.ibizpro.filter.IBIZPRO_INDEXSearchContext"  resultMap="IBIZPRO_INDEXResultMap">
         select t1.* from (
                <include refid="Default" />
         )t1
         <where><if test="ew!=null and ew.sqlSegment!=null and !ew.emptyOfWhere">${ew.sqlSegment}</if></where>
         <if test="ew!=null and ew.sqlSegment!=null and ew.emptyOfWhere">${ew.sqlSegment}</if>
     </select>

    <!--数据查询[Default]-->
    <sql id="Default" databaseId="mysql">
		<![CDATA[ SELECT t1.`DELETED`, t1.`INDEXID`, t1.`INDEXNAME`, t1.`INDEX_TYPE` FROM (SELECT 'bug' AS `INDEX_TYPE`,v1.`ID` AS `INDEXID` ,v1.`TITLE` AS `INDEXNAME` ,NULL AS `DELETED` FROM (SELECT t1.`ID`, t1.`TITLE` FROM `zt_bug` t1  ) v1 UNION ALL SELECT 'case' AS `INDEX_TYPE`,v2.`ID` AS `INDEXID` ,v2.`TITLE` AS `INDEXNAME` ,NULL AS `DELETED` FROM (SELECT t1.`ID`, t1.`TITLE` FROM `zt_case` t1  ) v2 UNION ALL SELECT 'product' AS `INDEX_TYPE`,v3.`ID` AS `INDEXID` ,v3.`NAME` AS `INDEXNAME` ,NULL AS `DELETED` FROM (SELECT t1.`ID`, t1.`NAME` FROM `zt_product` t1  ) v3 UNION ALL SELECT 'project' AS `INDEX_TYPE`,v4.`ID` AS `INDEXID` ,v4.`NAME` AS `INDEXNAME` ,NULL AS `DELETED` FROM (SELECT t1.`ID`, t1.`NAME` FROM `zt_project` t1  ) v4 UNION ALL SELECT 'story' AS `INDEX_TYPE`,v5.`ID` AS `INDEXID` ,v5.`TITLE` AS `INDEXNAME` ,NULL AS `DELETED` FROM (SELECT t1.`ID`, t1.`TITLE` FROM `zt_story` t1  ) v5 UNION ALL SELECT 'task' AS `INDEX_TYPE`,v6.`ID` AS `INDEXID` ,v6.`NAME` AS `INDEXNAME` ,NULL AS `DELETED` FROM (SELECT t1.`ID`, t1.`NAME` FROM `zt_task` t1  ) v6 ) t1  
			]]>
    </sql>
    <!--数据查询[View]-->
    <sql id="View" databaseId="mysql">
		<![CDATA[ SELECT t1.`DELETED`, t1.`INDEXID`, t1.`INDEXNAME`, t1.`INDEX_TYPE` FROM (SELECT 'bug' AS `INDEX_TYPE`,v1.`ID` AS `INDEXID` ,v1.`TITLE` AS `INDEXNAME` ,NULL AS `DELETED` FROM (SELECT t1.`ID`, t1.`TITLE` FROM `zt_bug` t1  ) v1 UNION ALL SELECT 'case' AS `INDEX_TYPE`,v2.`ID` AS `INDEXID` ,v2.`TITLE` AS `INDEXNAME` ,NULL AS `DELETED` FROM (SELECT t1.`ID`, t1.`TITLE` FROM `zt_case` t1  ) v2 UNION ALL SELECT 'product' AS `INDEX_TYPE`,v3.`ID` AS `INDEXID` ,v3.`NAME` AS `INDEXNAME` ,NULL AS `DELETED` FROM (SELECT t1.`ID`, t1.`NAME` FROM `zt_product` t1  ) v3 UNION ALL SELECT 'project' AS `INDEX_TYPE`,v4.`ID` AS `INDEXID` ,v4.`NAME` AS `INDEXNAME` ,NULL AS `DELETED` FROM (SELECT t1.`ID`, t1.`NAME` FROM `zt_project` t1  ) v4 UNION ALL SELECT 'story' AS `INDEX_TYPE`,v5.`ID` AS `INDEXID` ,v5.`TITLE` AS `INDEXNAME` ,NULL AS `DELETED` FROM (SELECT t1.`ID`, t1.`TITLE` FROM `zt_story` t1  ) v5 UNION ALL SELECT 'task' AS `INDEX_TYPE`,v6.`ID` AS `INDEXID` ,v6.`NAME` AS `INDEXNAME` ,NULL AS `DELETED` FROM (SELECT t1.`ID`, t1.`NAME` FROM `zt_task` t1  ) v6 ) t1  
			]]>
    </sql>
</mapper>

