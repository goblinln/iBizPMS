<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper	namespace="cn.ibizlab.pms.core.zentao.mapper.ModuleMapper">
	
	<!-- 无视图模式 -->
	<sql id="select" databaseId="mysql">
        <![CDATA[ SELECT t1.`BRANCH`, t1.`COLLECTOR`, t1.`CREATEBY`, t1.`DELETED`, t1.`GRADE`, t1.`ID`, t1.`MDEPTID`, t1.`MDEPTNAME`, t1.`MODULESN`, t1.`NAME`, t1.`ORDER`, t1.`ORGID`, t1.`ORGNAME`, t1.`OWNER`, t1.`PARENT`, t11.`NAME` AS `PARENTNAME`, t1.`PATH`, t1.`ROOT`, t1.`SHORT`, t1.`TYPE`, t1.`UPDATEBY` FROM `zt_module` t1  LEFT JOIN `zt_module` t11 ON t1.`PARENT` = t11.`ID`   ]]>
    </sql>

	
	<!-- 搜索条件 -->
	<sql id="searchMode" databaseId="mysql">
		<if test="srf.n_root_eq != null ">
			<![CDATA[ AND  t1.`ROOT` = #{srf.n_root_eq,jdbcType=VARCHAR} ]]>
        </if>
		<if test="srf.n_type_eq != null ">
			<![CDATA[ AND  t1.`TYPE` = #{srf.n_type_eq,jdbcType=VARCHAR} ]]>
        </if>
		<if test="srf.n_name_like != null ">
            <bind name="bind_n_name_like" value="'%' + srf.n_name_like + '%'" />
            <![CDATA[ AND  t1.`NAME` like #{bind_n_name_like,jdbcType=VARCHAR} ]]>
        </if>
		<if test="srf.n_id_eq != null ">
			<![CDATA[ AND  t1.`ID` = #{srf.n_id_eq,jdbcType=BIGINT} ]]>
        </if>
		<if test="srf.n_parentname_eq != null ">
			<![CDATA[ AND  t11.`NAME` = #{srf.n_parentname_eq,jdbcType=VARCHAR} ]]>
        </if>
		<if test="srf.n_parentname_like != null ">
            <bind name="bind_n_parentname_like" value="'%' + srf.n_parentname_like + '%'" />
            <![CDATA[ AND  t11.`NAME` like #{bind_n_parentname_like,jdbcType=VARCHAR} ]]>
        </if>
		<if test="srf.n_branch_eq != null ">
			<![CDATA[ AND  t1.`BRANCH` = #{srf.n_branch_eq,jdbcType=BIGINT} ]]>
        </if>
		<if test="srf.n_parent_eq != null ">
			<![CDATA[ AND  t1.`PARENT` = #{srf.n_parent_eq,jdbcType=BIGINT} ]]>
        </if>
		<if test="ew!=null and ew.sqlSegment!=null and ew.sqlSegment!=''">
		AND ${ew.sqlSegment}
		</if>
	</sql>


    <!--该方法用于重写mybatis中selectById方法，以实现查询逻辑属性-->
	<select id="selectById"  resultMap="ModuleResultMap" databaseId="mysql">
        <include refid="select" />
		<trim prefix="where" prefixOverrides="and">
			<if test="true">
			<![CDATA[ AND t1.DELETED = '0' ]]>
			</if>
			<![CDATA[ AND T1.ID = #{id} ]]>
		</trim>
    </select>


    <!--通过mybatis将查询结果注入到entity中,通过配置autoMapping="true"由mybatis自动处理映射关系 -->
    <resultMap id="ModuleResultMap" type="cn.ibizlab.pms.core.zentao.domain.Module" autoMapping="true">
		<id property="id" column="id" /><!--主键字段映射-->
		<result property="ibizshort" column="short" />
		<result property="branch" column="branch" />
		<result property="parent" column="parent" />
            
		
		<!--通过mybatis自动注入关系属性[主实体]，fetchType="lazy"为懒加载配置 -->
		<association property="ztBranchBranch" javaType="cn.ibizlab.pms.core.zentao.domain.Branch" column="branch" select="cn.ibizlab.pms.core.zentao.mapper.BranchMapper.selectById" fetchType="lazy"></association>
		<!--通过mybatis自动注入关系属性[主实体]，fetchType="lazy"为懒加载配置 -->
		<association property="ibizparent" javaType="cn.ibizlab.pms.core.zentao.domain.Module" column="parent" select="cn.ibizlab.pms.core.zentao.mapper.ModuleMapper.selectById" fetchType="lazy"></association>
    </resultMap>

	<!--关系实体暴露select方法供主实体通过外键查询关系实体数据[实体关系名称:DER1N_ZT_MODULE_ZT_BRANCH_BRANCH] -->
	 <select id="selectByBranch" resultMap="ModuleResultMap"  databaseId="mysql">
		select * from (
        <include refid="select" />
		<trim prefix="where" prefixOverrides="and">
			<if test="true">
			<![CDATA[ AND t1.DELETED = '0' ]]>
			</if>
			<![CDATA[ AND t1.`BRANCH`=#{id} ]]>
		</trim>
		 )t1
     </select>
	<!--关系实体暴露select方法供主实体通过外键查询关系实体数据[实体关系名称:DER1N__ZT_MODULE__ZT_MODULE__PARENT] -->
	 <select id="selectByParent" resultMap="ModuleResultMap"  databaseId="mysql">
		select * from (
        <include refid="select" />
		<trim prefix="where" prefixOverrides="and">
			<if test="true">
			<![CDATA[ AND t1.DELETED = '0' ]]>
			</if>
			<![CDATA[ AND t1.`PARENT`=#{id} ]]>
		</trim>
		 )t1
     </select>

    <!--数据集合[BugModule]-->
	 <select id="searchBugModule"  parameterType="cn.ibizlab.pms.core.zentao.filter.ModuleSearchContext"  resultMap="ModuleResultMap">
	 	select * from (
         select t1.* from (
                <include refid="BugModule" />
         )t1
		 )t1
     </select>

    <!--数据集合[BugModuleCodeList]-->
	 <select id="searchBugModuleCodeList"  parameterType="cn.ibizlab.pms.core.zentao.filter.ModuleSearchContext"  resultMap="ModuleResultMap">
	 	select * from (
         select t1.* from (
                <include refid="BugModuleCodeList" />
         )t1
		 )t1
     </select>

    <!--数据集合[Default]-->
	 <select id="searchDefault"  parameterType="cn.ibizlab.pms.core.zentao.filter.ModuleSearchContext"  resultMap="ModuleResultMap">
	 	select * from (
         select t1.* from (
                <include refid="Default" />
         )t1
		 )t1
     </select>

    <!--数据集合[DocModule]-->
	 <select id="searchDocModule"  parameterType="cn.ibizlab.pms.core.zentao.filter.ModuleSearchContext"  resultMap="ModuleResultMap">
	 	select * from (
         select t1.* from (
                <include refid="DocModule" />
         )t1
		 )t1
     </select>

    <!--数据集合[Line]-->
	 <select id="searchLine"  parameterType="cn.ibizlab.pms.core.zentao.filter.ModuleSearchContext"  resultMap="ModuleResultMap">
	 	select * from (
         select t1.* from (
                <include refid="Line" />
         )t1
		 )t1
     </select>

    <!--数据集合[StoryModule]-->
	 <select id="searchStoryModule"  parameterType="cn.ibizlab.pms.core.zentao.filter.ModuleSearchContext"  resultMap="ModuleResultMap">
         select t1.* from (
                <include refid="StoryModule" />
         )t1
     </select>

    <!--数据集合[TaskModule]-->
	 <select id="searchTaskModule"  parameterType="cn.ibizlab.pms.core.zentao.filter.ModuleSearchContext"  resultMap="ModuleResultMap">
         select t1.* from (
                <include refid="TaskModule" />
         )t1
     </select>

    <!--数据查询[BugModule]-->
    <sql id="BugModule" databaseId="mysql">
		<![CDATA[ SELECT 	t1.`BRANCH`, 	t1.`DELETED`, 	t1.`GRADE`, 	t1.`ID`, 	CONCAT( 		'/', 	CASE 			 			WHEN t1.parent > 0 THEN 			( 			SELECT 				GROUP_CONCAT( tt.NAME SEPARATOR '/' )  			FROM 				zt_module tt  			WHERE 				tt.type = 'story'  				AND FIND_IN_SET( tt.id, t1.path )  			) ELSE t1.`name`  		END  		) AS `NAME`, 		( 			CONCAT_ws( 				'', 			CASE 					 					WHEN t1.parent > 0 THEN 					( 					SELECT 						GROUP_CONCAT( tt.`ORDER` SEPARATOR '-' )  					FROM 						zt_module tt  					WHERE 						tt.type = 'story'  					AND FIND_IN_SET( tt.id, t1.path )) ELSE t1.`ORDER`  				END  				)) AS ORDERPK, 			t1.`ORDER`, 			t1.`OWNER`, 		CASE 				 				WHEN t1.`PARENT` = 0 THEN 				NULL ELSE t1.parent  			END AS parent, 			t11.`NAME` AS `PARENTNAME`, 			t1.`PATH`, 			t1.`ROOT`, 			t1.`SHORT`, 			t1.`TYPE`  		FROM 			`zt_module` t1 			LEFT JOIN zt_module t11 ON t1.PARENT = t11.ID ]]>
		<trim prefix="where" prefixOverrides="and">
			<if test="true">
                <![CDATA[ AND t1.DELETED = '0' ]]>
            </if>
			<if test="true">
                <![CDATA[ AND t1.type = 'story' ]]>
            </if>
			<include refid="searchMode" />
		</trim>
    </sql>
	
	<select id="selectBugModule"  parameterType="cn.ibizlab.pms.core.zentao.filter.ModuleSearchContext" resultMap="ModuleResultMap">
		<include refid="BugModule" />
	</select>

    <!--数据查询[BugModuleCodeList]-->
    <sql id="BugModuleCodeList" databaseId="mysql">
		<![CDATA[ SELECT 	t1.`BRANCH`, 	t1.`DELETED`, 	t1.`GRADE`, 	t1.`ID`, 	CONCAT( '/', t1.`name` ) AS `NAME`, 	t1.`ORDER`, 	t1.`OWNER`, 	case when t1.`PARENT` = 0 then null else t1.parent end as parent , 	t11.`NAME` AS `PARENTNAME`, 	t1.`PATH`, 	t1.`ROOT`, 	t1.`SHORT`, 	t1.`TYPE` FROM 	`zt_module` t1 	LEFT JOIN zt_module t11 ON t1.PARENT = t11.ID ]]>
		<trim prefix="where" prefixOverrides="and">
			<if test="true">
                <![CDATA[ AND t1.DELETED = '0' ]]>
            </if>
			<if test="true">
                <![CDATA[ AND t1.type = 'story' ]]>
            </if>
			<include refid="searchMode" />
		</trim>
    </sql>
	
	<select id="selectBugModuleCodeList"  parameterType="cn.ibizlab.pms.core.zentao.filter.ModuleSearchContext" resultMap="ModuleResultMap">
		<include refid="BugModuleCodeList" />
	</select>

    <!--数据查询[Default]-->
    <sql id="Default" databaseId="mysql">
		<![CDATA[ SELECT t1.`BRANCH`, t1.`CREATEBY`, t1.`DELETED`, t1.`GRADE`, t1.`ID`, t1.`MDEPTID`, t1.`MDEPTNAME`, t1.`MODULESN`, t1.`NAME`, t1.`ORDER`, t1.`ORGID`, t1.`ORGNAME`, t1.`OWNER`, t1.`PARENT`, t11.`NAME` AS `PARENTNAME`, t1.`PATH`, t1.`ROOT`, t1.`SHORT`, t1.`TYPE`, t1.`UPDATEBY` FROM `zt_module` t1  LEFT JOIN `zt_module` t11 ON t1.`PARENT` = t11.`ID`   ]]>
		<trim prefix="where" prefixOverrides="and">
			<if test="true">
                <![CDATA[ AND t1.DELETED = '0' ]]>
            </if>
			<include refid="searchMode" />
		</trim>
    </sql>
	
	<select id="selectDefault"  parameterType="cn.ibizlab.pms.core.zentao.filter.ModuleSearchContext" resultMap="ModuleResultMap">
		<include refid="Default" />
	</select>

    <!--数据查询[DocModule]-->
    <sql id="DocModule" databaseId="mysql">
		<![CDATA[ SELECT 	t1.*  FROM 	( 	SELECT 		'0' AS DELETED, 		0 AS ID, 		'/' AS NAME, 		0 AS PARENT, 		',0,' AS path, 		$ { srfdatacontext ( 'doclib', '{\"defname\":\"ROOT\",\"dename\":\"ZT_MODULE\"}' )} AS root, 		'doc' AS type UNION 	SELECT 		t1.`DELETED`, 		t1.`ID`, 		CONCAT( 			'/', 		CASE 				 				WHEN ( 				SELECT 					GROUP_CONCAT( tt.NAME SEPARATOR '/' )  				FROM 					zt_module tt  				WHERE 					FIND_IN_SET( tt.id, t1.path )  					AND tt.type = 'doc'  				GROUP BY 					tt.root  					LIMIT 0, 					1  					) IS NOT NULL THEN 					( 					SELECT 						GROUP_CONCAT( tt.NAME SEPARATOR '/' )  					FROM 						zt_module tt  					WHERE 						FIND_IN_SET( tt.id, t1.path )  						AND tt.type = 'doc'  					GROUP BY 						tt.root  						LIMIT 0, 						1  					) ELSE t1.`name`  				END  				) AS `NAME`, 				t1.`PARENT`, 				t1.`PATH`, 				t1.`ROOT`, 				t1.`TYPE`  			FROM 				`zt_module` t1 			LEFT JOIN zt_module t11 ON t1.PARENT = t11.ID  	) t1 ]]>
		<trim prefix="where" prefixOverrides="and">
			<if test="true">
                <![CDATA[ AND t1.DELETED = '0' ]]>
            </if>
			<if test="true">
                <![CDATA[ AND ( t1.`TYPE` = 'doc'  AND  t1.`ROOT` =  #{srf.datacontext.doclib} ) ]]>
            </if>
			<include refid="searchMode" />
		</trim>
    </sql>
	
	<select id="selectDocModule"  parameterType="cn.ibizlab.pms.core.zentao.filter.ModuleSearchContext" resultMap="ModuleResultMap">
		<include refid="DocModule" />
	</select>

    <!--数据查询[Line]-->
    <sql id="Line" databaseId="mysql">
		<![CDATA[ SELECT t1.`BRANCH`, t1.`CREATEBY`, t1.`DELETED`, t1.`GRADE`, t1.`ID`, t1.`MDEPTID`, t1.`MDEPTNAME`, t1.`MODULESN`, t1.`NAME`, t1.`ORDER`, t1.`ORGID`, t1.`ORGNAME`, t1.`OWNER`, t1.`PARENT`, t11.`NAME` AS `PARENTNAME`, t1.`PATH`, t1.`ROOT`, t1.`SHORT`, t1.`TYPE`, t1.`UPDATEBY` FROM `zt_module` t1  LEFT JOIN `zt_module` t11 ON t1.`PARENT` = t11.`ID`   ]]>
		<trim prefix="where" prefixOverrides="and">
			<if test="true">
                <![CDATA[ AND t1.DELETED = '0' ]]>
            </if>
			<if test="true">
                <![CDATA[ AND ( t1.`TYPE` = 'line'  AND  t1.`ORGID` =  #{srf.sessioncontext.srforgid} ) ]]>
            </if>
			<include refid="searchMode" />
		</trim>
    </sql>
	
	<select id="selectLine"  parameterType="cn.ibizlab.pms.core.zentao.filter.ModuleSearchContext" resultMap="ModuleResultMap">
		<include refid="Line" />
	</select>

    <!--数据查询[StoryModule]-->
    <sql id="StoryModule" databaseId="mysql">
		<![CDATA[ SELECT t1.`BRANCH`, t1.`CREATEBY`, t1.`DELETED`, t1.`GRADE`, t1.`ID`, t1.`MDEPTID`, t1.`MDEPTNAME`, t1.`MODULESN`, t1.`NAME`, t1.`ORDER`, t1.`ORGID`, t1.`ORGNAME`, t1.`OWNER`, t1.`PARENT`, t11.`NAME` AS `PARENTNAME`, t1.`PATH`, t1.`ROOT`, t1.`SHORT`, t1.`TYPE`, t1.`UPDATEBY` FROM `zt_module` t1  LEFT JOIN `zt_module` t11 ON t1.`PARENT` = t11.`ID`   ]]>
		<trim prefix="where" prefixOverrides="and">
			<if test="true">
                AND t1.DELETED = '0'
            </if>
			<if test="true">
                AND ( t1.`ROOT` =  #{srf.webcontext.product}  AND  t1.`TYPE` = 'story'  AND  <choose><when test="srf.datacontext.branch != null"> <![CDATA[ t1.`BRANCH` = #{srf.datacontext.branch}  ]]> </when><otherwise>1=1</otherwise></choose> )
            </if>
			<include refid="searchMode" />
		</trim>
    </sql>
	
	<select id="selectStoryModule"  parameterType="cn.ibizlab.pms.core.zentao.filter.ModuleSearchContext" resultMap="ModuleResultMap">
		<include refid="StoryModule" />
	</select>

    <!--数据查询[TaskModule]-->
    <sql id="TaskModule" databaseId="mysql">
		<![CDATA[ SELECT t1.`BRANCH`, t1.`CREATEBY`, t1.`DELETED`, t1.`GRADE`, t1.`ID`, t1.`MDEPTID`, t1.`MDEPTNAME`, t1.`MODULESN`, t1.`NAME`, t1.`ORDER`, t1.`ORGID`, t1.`ORGNAME`, t1.`OWNER`, t1.`PARENT`, t11.`NAME` AS `PARENTNAME`, t1.`PATH`, t1.`ROOT`, t1.`SHORT`, t1.`TYPE`, t1.`UPDATEBY` FROM `zt_module` t1  LEFT JOIN `zt_module` t11 ON t1.`PARENT` = t11.`ID`   ]]>
		<trim prefix="where" prefixOverrides="and">
			<if test="true">
                <![CDATA[ AND t1.DELETED = '0' ]]>
            </if>
			<if test="true">
                <![CDATA[ AND ( t1.`ROOT` =  #{srf.datacontext.project}  AND  t1.`TYPE` = 'task' ) ]]>
            </if>
			<include refid="searchMode" />
		</trim>
    </sql>
	
	<select id="selectTaskModule"  parameterType="cn.ibizlab.pms.core.zentao.filter.ModuleSearchContext" resultMap="ModuleResultMap">
		<include refid="TaskModule" />
	</select>

    <!--数据查询[View]-->
    <sql id="View" databaseId="mysql">
		<![CDATA[ SELECT t1.`BRANCH`, t1.`COLLECTOR`, t1.`CREATEBY`, t1.`DELETED`, t1.`GRADE`, t1.`ID`, t1.`MDEPTID`, t1.`MDEPTNAME`, t1.`MODULESN`, t1.`NAME`, t1.`ORDER`, t1.`ORGID`, t1.`ORGNAME`, t1.`OWNER`, t1.`PARENT`, t11.`NAME` AS `PARENTNAME`, t1.`PATH`, t1.`ROOT`, t1.`SHORT`, t1.`TYPE`, t1.`UPDATEBY` FROM `zt_module` t1  LEFT JOIN `zt_module` t11 ON t1.`PARENT` = t11.`ID`   ]]>
		<trim prefix="where" prefixOverrides="and">
			<if test="true">
                <![CDATA[ AND t1.DELETED = '0' ]]>
            </if>
			<include refid="searchMode" />
		</trim>
    </sql>
	
	<select id="selectView"  parameterType="cn.ibizlab.pms.core.zentao.filter.ModuleSearchContext" resultMap="ModuleResultMap">
		<include refid="View" />
	</select>

</mapper>

