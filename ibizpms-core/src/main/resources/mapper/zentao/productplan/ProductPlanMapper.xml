<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper	namespace="cn.ibizlab.pms.core.zentao.mapper.ProductPlanMapper">

    <!--该方法用于重写mybatis中selectById方法，以实现查询逻辑属性-->
	<select id="selectById"  resultMap="ProductPlanResultMap" databaseId="mysql">
        <![CDATA[select t1.* from (SELECT t1.`BEGIN`, (case when t1.`begin` = '2030-01-01' then '待定' else t1.`begin` end) AS `BEGINSTR`, t1.`BRANCH`, ((select count(t.id) FROM zt_bug t where (t.plan = t1.id or (t.plan in (select t2.id from zt_productplan t2 where t2.parent = t1.id and t2.deleted = '0')) )  and t.deleted = '0')) AS `BUGCNT`, t1.`DELETED`, t1.`DESC`, t1.`END`, (case when t1.`end` = '2030-01-01' then '待定' else t1.`end` end) AS `ENDSTR`, (select sum(t.estimate) from zt_story t where (t.plan = t1.id or (t.plan in (select t2.id from zt_productplan t2 where t2.parent = t1.id and t2.deleted = '0')) )  and t.deleted = '0' ) AS `ESTIMATECNT`, (case when t1.`begin` = '2030-01-01' or t1.`end` = '2030-01-01' then 'on' else '' end) AS `FUTURE`, t1.`ID`, (case when t1.`end` > now() then '0' else '1' end) AS `ISEXPIRED`, t1.`ORDER`, t1.`PARENT`, t11.`TITLE` AS `PARENTNAME`, t1.`PRODUCT`, (case when t1.parent = -1 then 'parent' when t1.parent > 0 then  'chlid' else 'normal' end) AS `STATUSS`, ((select COUNT(t.id) from zt_story t where (t.plan = t1.id or (t.plan in (select t2.id from zt_productplan t2 where t2.parent = t1.id and t2.deleted = '0')) )  and t.deleted = '0' )) AS `STORYCNT`, t1.`TITLE` FROM `zt_productplan` t1  LEFT JOIN `zt_productplan` t11 ON t1.`PARENT` = t11.`ID`  ) t1 where id=#{id}]]>
    </select>

    <!--通过mybatis将查询结果注入到entity中,通过配置autoMapping="true"由mybatis自动处理映射关系 -->
    <resultMap id="ProductPlanResultMap" type="cn.ibizlab.pms.core.zentao.domain.ProductPlan" autoMapping="true">
		<id property="id" column="id" /><!--主键字段映射-->
		<result property="branch" column="branch" />
		<result property="parent" column="parent" />
		<result property="product" column="product" />


		<!--通过mybatis自动注入关系属性[主实体]，fetchType="lazy"为懒加载配置 -->
		<association property="ztbranch" javaType="cn.ibizlab.pms.core.zentao.domain.Branch" column="branch" select="cn.ibizlab.pms.core.zentao.mapper.BranchMapper.selectById" fetchType="lazy"></association>
		<!--通过mybatis自动注入关系属性[主实体]，fetchType="lazy"为懒加载配置 -->
		<association property="ztproduct" javaType="cn.ibizlab.pms.core.zentao.domain.Product" column="product" select="cn.ibizlab.pms.core.zentao.mapper.ProductMapper.selectById" fetchType="lazy"></association>
		<!--通过mybatis自动注入关系属性[主实体]，fetchType="lazy"为懒加载配置 -->
		<association property="ibizparent" javaType="cn.ibizlab.pms.core.zentao.domain.ProductPlan" column="parent" select="cn.ibizlab.pms.core.zentao.mapper.ProductPlanMapper.selectById" fetchType="lazy"></association>
    </resultMap>

	<!--关系实体暴露select方法供主实体通过外键查询关系实体数据[实体关系名称:DER1N_ZT_PRODUCTPLAN_ZT_BRANCH_BRANCH] -->
	 <select id="selectByBranch" resultMap="ProductPlanResultMap">
	select * from (
         select t1.* from (
                <include refid="Default" />
			 ) t1
			 where  branch=#{id}
		 )t1
		 order by `begin`  desc  
     </select>
	<!--关系实体暴露select方法供主实体通过外键查询关系实体数据[实体关系名称:DER1N_ZT_PRODUCTPLAN_ZT_PRODUCT_PRODUCT] -->
	 <select id="selectByProduct" resultMap="ProductPlanResultMap">
	select * from (
         select t1.* from (
                <include refid="Default" />
			 ) t1
			 where  product=#{id}
		 )t1
		 order by `begin`  desc  
     </select>
	<!--关系实体暴露select方法供主实体通过外键查询关系实体数据[实体关系名称:DER1N__ZT_PRODUCTPLAN__ZT_PRODUCTPLAN__PARENT] -->
	 <select id="selectByParent" resultMap="ProductPlanResultMap">
	select * from (
         select t1.* from (
                <include refid="Default" />
			 ) t1
			 where  parent=#{id}
		 )t1
		 order by `begin`  desc  
     </select>

    <!--数据集合[CurProductPlan]-->
	 <select id="searchCurProductPlan"  parameterType="cn.ibizlab.pms.core.zentao.filter.ProductPlanSearchContext"  resultMap="ProductPlanResultMap">
         select t1.* from (
                <include refid="GetList" />
         )t1
         <where><if test="ew!=null and ew.sqlSegment!=null and !ew.emptyOfWhere">${ew.sqlSegment}</if></where>
         <if test="ew!=null and ew.sqlSegment!=null and ew.emptyOfWhere">${ew.sqlSegment}</if>
     </select>

    <!--数据集合[Default]-->
	 <select id="searchDefault"  parameterType="cn.ibizlab.pms.core.zentao.filter.ProductPlanSearchContext"  resultMap="ProductPlanResultMap">
	 	select * from (
         select t1.* from (
                <include refid="Default" />
         )t1
         <where><if test="ew!=null and ew.sqlSegment!=null and !ew.emptyOfWhere">${ew.sqlSegment}</if></where>
         <if test="ew!=null and ew.sqlSegment!=null and ew.emptyOfWhere">${ew.sqlSegment}</if>
		 )t1
		 order by `begin`  desc  
     </select>

    <!--数据集合[DefaultParent]-->
	 <select id="searchDefaultParent"  parameterType="cn.ibizlab.pms.core.zentao.filter.ProductPlanSearchContext"  resultMap="ProductPlanResultMap">
         select t1.* from (
                <include refid="DefaultParent" />
         )t1
         <where><if test="ew!=null and ew.sqlSegment!=null and !ew.emptyOfWhere">${ew.sqlSegment}</if></where>
         <if test="ew!=null and ew.sqlSegment!=null and ew.emptyOfWhere">${ew.sqlSegment}</if>
     </select>

    <!--数据集合[PlanCodeList]-->
	 <select id="searchPlanCodeList"  parameterType="cn.ibizlab.pms.core.zentao.filter.ProductPlanSearchContext"  resultMap="ProductPlanResultMap">
         select t1.* from (
                <include refid="PlanCodeList" />
         )t1
         <where><if test="ew!=null and ew.sqlSegment!=null and !ew.emptyOfWhere">${ew.sqlSegment}</if></where>
         <if test="ew!=null and ew.sqlSegment!=null and ew.emptyOfWhere">${ew.sqlSegment}</if>
     </select>

    <!--数据集合[ProjectPlan]-->
	 <select id="searchProjectPlan"  parameterType="cn.ibizlab.pms.core.zentao.filter.ProductPlanSearchContext"  resultMap="ProductPlanResultMap">
         select t1.* from (
                <include refid="ProjectPlan" />
         )t1
         <where><if test="ew!=null and ew.sqlSegment!=null and !ew.emptyOfWhere">${ew.sqlSegment}</if></where>
         <if test="ew!=null and ew.sqlSegment!=null and ew.emptyOfWhere">${ew.sqlSegment}</if>
     </select>

    <!--数据查询[Default]-->
    <sql id="Default" databaseId="mysql">
		<![CDATA[ SELECT t1.`BEGIN`, (case when t1.`begin` = '2030-01-01' then '待定' else t1.`begin` end) AS `BEGINSTR`, t1.`BRANCH`, ((select count(t.id) FROM zt_bug t where (t.plan = t1.id or (t.plan in (select t2.id from zt_productplan t2 where t2.parent = t1.id and t2.deleted = '0')) )  and t.deleted = '0')) AS `BUGCNT`, t1.`DELETED`, t1.`END`, (case when t1.`end` = '2030-01-01' then '待定' else t1.`end` end) AS `ENDSTR`, (select sum(t.estimate) from zt_story t where (t.plan = t1.id or (t.plan in (select t2.id from zt_productplan t2 where t2.parent = t1.id and t2.deleted = '0')) )  and t.deleted = '0' ) AS `ESTIMATECNT`, (case when t1.`begin` = '2030-01-01' or t1.`end` = '2030-01-01' then 'on' else '' end) AS `FUTURE`, t1.`ID`, (case when t1.`end` > now() then '0' else '1' end) AS `ISEXPIRED`, t1.`PARENT`, t11.`TITLE` AS `PARENTNAME`, t1.`PRODUCT`, (case when t1.parent = -1 then 'parent' when t1.parent > 0 then  'chlid' else 'normal' end) AS `STATUSS`, ((select COUNT(t.id) from zt_story t where (t.plan = t1.id or (t.plan in (select t2.id from zt_productplan t2 where t2.parent = t1.id and t2.deleted = '0')) )  and t.deleted = '0' )) AS `STORYCNT`, t1.`TITLE` FROM `zt_productplan` t1  LEFT JOIN `zt_productplan` t11 ON t1.`PARENT` = t11.`ID`  
					 WHERE 	t1.DELETED = '0'
			]]>
    </sql>
    <!--数据查询[DefaultParent]-->
    <sql id="DefaultParent" databaseId="mysql">
		<![CDATA[ SELECT t1.`BEGIN`, (case when t1.`begin` = '2030-01-01' then '待定' else t1.`begin` end) AS `BEGINSTR`, t1.`BRANCH`, ((select count(t.id) FROM zt_bug t where (t.plan = t1.id or (t.plan in (select t2.id from zt_productplan t2 where t2.parent = t1.id and t2.deleted = '0')) )  and t.deleted = '0')) AS `BUGCNT`, t1.`DELETED`, t1.`END`, (case when t1.`end` = '2030-01-01' then '待定' else t1.`end` end) AS `ENDSTR`, (select sum(t.estimate) from zt_story t where (t.plan = t1.id or (t.plan in (select t2.id from zt_productplan t2 where t2.parent = t1.id and t2.deleted = '0')) )  and t.deleted = '0' ) AS `ESTIMATECNT`, (case when t1.`begin` = '2030-01-01' or t1.`end` = '2030-01-01' then 'on' else '' end) AS `FUTURE`, t1.`ID`, (case when t1.`end` > now() then '0' else '1' end) AS `ISEXPIRED`, t1.`PARENT`, t11.`TITLE` AS `PARENTNAME`, t1.`PRODUCT`, (case when t1.parent = -1 then 'parent' when t1.parent > 0 then  'chlid' else 'normal' end) AS `STATUSS`, ((select COUNT(t.id) from zt_story t where (t.plan = t1.id or (t.plan in (select t2.id from zt_productplan t2 where t2.parent = t1.id and t2.deleted = '0')) )  and t.deleted = '0' )) AS `STORYCNT`, t1.`TITLE` FROM `zt_productplan` t1  LEFT JOIN `zt_productplan` t11 ON t1.`PARENT` = t11.`ID`  
					 WHERE 	t1.DELETED = '0'
						 AND ( ( t1.`PARENT` <= 0 ) )
			]]>
    </sql>
    <!--数据查询[GetList]-->
    <sql id="GetList" databaseId="mysql">
		<![CDATA[ SELECT t1.`BEGIN`, (case when t1.`begin` = '2030-01-01' then '待定' else t1.`begin` end) AS `BEGINSTR`, t1.`BRANCH`, ((select count(t.id) FROM zt_bug t where (t.plan = t1.id or (t.plan in (select t2.id from zt_productplan t2 where t2.parent = t1.id and t2.deleted = '0')) )  and t.deleted = '0')) AS `BUGCNT`, t1.`DELETED`, t1.`END`, (case when t1.`end` = '2030-01-01' then '待定' else t1.`end` end) AS `ENDSTR`, (select sum(t.estimate) from zt_story t where (t.plan = t1.id or (t.plan in (select t2.id from zt_productplan t2 where t2.parent = t1.id and t2.deleted = '0')) )  and t.deleted = '0' ) AS `ESTIMATECNT`, (case when t1.`begin` = '2030-01-01' or t1.`end` = '2030-01-01' then 'on' else '' end) AS `FUTURE`, t1.`ID`, (case when t1.`end` > now() then '0' else '1' end) AS `ISEXPIRED`, t1.`PARENT`, t11.`TITLE` AS `PARENTNAME`, t1.`PRODUCT`, (case when t1.parent = -1 then 'parent' when t1.parent > 0 then  'chlid' else 'normal' end) AS `STATUSS`, ((select COUNT(t.id) from zt_story t where (t.plan = t1.id or (t.plan in (select t2.id from zt_productplan t2 where t2.parent = t1.id and t2.deleted = '0')) )  and t.deleted = '0' )) AS `STORYCNT`, t1.`TITLE` FROM `zt_productplan` t1  LEFT JOIN `zt_productplan` t11 ON t1.`PARENT` = t11.`ID`  
					 WHERE 	t1.DELETED = '0'
						 AND ( ( t1.`PRODUCT` = #{srf.datacontext.product}  OR  t1.`PRODUCT` = #{srf.datacontext.products} ) )
			]]>
    </sql>
    <!--数据查询[PlanCodeList]-->
    <sql id="PlanCodeList" databaseId="mysql">
		<![CDATA[ select t1.* from ( SELECT t1.`ID`, t1.`TITLE`, t1.product, t1.parent FROM `zt_productplan` t1  UNION SELECT 0 as `ID`, '未计划' as `TITLE`, 0 as product, 0 as parent FROM dual  ) t1
			]]>
    </sql>
    <!--数据查询[ProjectPlan]-->
    <sql id="ProjectPlan" databaseId="mysql">
		<![CDATA[ SELECT 	t1.`BEGIN`, (case when t1.`begin` = '2030-01-01' then '待定' else t1.`begin` end) AS `BEGINSTR`, 	t1.`BRANCH`, 	t1.`DELETED`, 	t1.`END`, (case when t1.`end` = '2030-01-01' then '待定' else t1.`end` end) AS `ENDSTR`, 	t1.`ID`, 	t1.`PARENT`, 	t11.`TITLE` AS `PARENTNAME`, 	t1.`PRODUCT`, 	(CONCAT(t31.`name`,'/',t1.title,'[',case when t1.`begin` is not null then t1.`begin` else '' end,'~',case when t1.`end` is not null then t1.`end` else '' end,']')) as `TITLE`  FROM 	`zt_productplan` t1 	LEFT JOIN zt_productplan t11 ON t1.PARENT = t11.ID 	LEFT JOIN zt_product t31 ON t1.product = t31.id  	LEFT JOIN zt_projectproduct t21 ON t31.id = t21.product and t1.id = t21.plan
					 WHERE 	( t21.`PROJECT` = 	#{srf.datacontext.srfparentkey}  or t1.parent in (	SELECT GROUP_CONCAT(t1.id) FROM 	`zt_productplan` t1 	LEFT JOIN zt_productplan t11 ON t1.PARENT = t11.ID 	LEFT JOIN zt_product t31 ON t1.product = t31.id  	LEFT JOIN zt_projectproduct t21 ON t31.id = t21.product and t1.id = t21.plan 	 	where t1.deleted = '0' and ( t21.`PROJECT` =  #{srf.datacontext.srfparentkey}  ) ) )
						 AND t1.DELETED = '0'
			]]>
    </sql>
    <!--数据查询[View]-->
    <sql id="View" databaseId="mysql">
		<![CDATA[ SELECT t1.`BEGIN`, (case when t1.`begin` = '2030-01-01' then '待定' else t1.`begin` end) AS `BEGINSTR`, t1.`BRANCH`, ((select count(t.id) FROM zt_bug t where (t.plan = t1.id or (t.plan in (select t2.id from zt_productplan t2 where t2.parent = t1.id and t2.deleted = '0')) )  and t.deleted = '0')) AS `BUGCNT`, t1.`DELETED`, t1.`DESC`, t1.`END`, (case when t1.`end` = '2030-01-01' then '待定' else t1.`end` end) AS `ENDSTR`, (select sum(t.estimate) from zt_story t where (t.plan = t1.id or (t.plan in (select t2.id from zt_productplan t2 where t2.parent = t1.id and t2.deleted = '0')) )  and t.deleted = '0' ) AS `ESTIMATECNT`, (case when t1.`begin` = '2030-01-01' or t1.`end` = '2030-01-01' then 'on' else '' end) AS `FUTURE`, t1.`ID`, (case when t1.`end` > now() then '0' else '1' end) AS `ISEXPIRED`, t1.`ORDER`, t1.`PARENT`, t11.`TITLE` AS `PARENTNAME`, t1.`PRODUCT`, (case when t1.parent = -1 then 'parent' when t1.parent > 0 then  'chlid' else 'normal' end) AS `STATUSS`, ((select COUNT(t.id) from zt_story t where (t.plan = t1.id or (t.plan in (select t2.id from zt_productplan t2 where t2.parent = t1.id and t2.deleted = '0')) )  and t.deleted = '0' )) AS `STORYCNT`, t1.`TITLE` FROM `zt_productplan` t1  LEFT JOIN `zt_productplan` t11 ON t1.`PARENT` = t11.`ID`  
					 WHERE 	t1.DELETED = '0'
			]]>
    </sql>
</mapper>

