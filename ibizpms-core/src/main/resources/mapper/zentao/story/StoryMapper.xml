<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper	namespace="cn.ibizlab.pms.core.zentao.mapper.StoryMapper">

    <!--该方法用于重写mybatis中selectById方法，以实现查询逻辑属性-->
	<select id="selectById"  resultMap="StoryResultMap" databaseId="mysql">
        <![CDATA[select t1.* from (SELECT t1.`ASSIGNEDDATE`, t1.`ASSIGNEDTO`, t1.`BRANCH`, t1.`CHILDSTORIES`, t1.`CLOSEDBY`, t1.`CLOSEDDATE`, t1.`CLOSEDREASON`, t1.`COLOR`, t1.`DELETED`, t1.`DUPLICATESTORY`, t1.`ESTIMATE`, t1.`FROMBUG`, t1.`ID`, t1.`KEYWORDS`, t1.`LASTEDITEDBY`, t1.`LASTEDITEDDATE`, t1.`LINKSTORIES`, t1.`MAILTO`, t1.`MODULE`, t11.`NAME` AS `MODULENAME`, t1.`OPENEDBY`, t1.`OPENEDDATE`, t1.`PARENT`, t21.`TITLE` AS `PARENTNAME`, t11.`PATH`, t1.`PLAN`, t1.`PRI`, t31.`NAME` AS `PRODOCTNAME`, t1.`PRODUCT`, t1.`REVIEWEDBY`, t1.`REVIEWEDDATE`, t1.`SOURCE`, t1.`SOURCENOTE`, (select spec from zt_storyspec where story = t1.`ID` and version= t1.`VERSION`) AS `SPEC`, t1.`STAGE`, t1.`STAGEDBY`, t1.`STATUS`, t1.`SUBSTATUS`, t1.`TITLE`, t1.`TOBUG`, t1.`TYPE`, (select verify from zt_storyspec where story = t1.`ID` and version= t1.`VERSION`) AS `VERIFY`, t1.`VERSION` FROM `zt_story` t1  LEFT JOIN zt_module t11 ON t1.MODULE = t11.ID  LEFT JOIN zt_story t21 ON t1.PARENT = t21.ID  LEFT JOIN zt_product t31 ON t1.PRODUCT = t31.ID  ) t1 where id=#{id}]]>
    </select>

    <!--通过mybatis将查询结果注入到entity中,通过配置autoMapping="true"由mybatis自动处理映射关系 -->
    <resultMap id="StoryResultMap" type="cn.ibizlab.pms.core.zentao.domain.Story" autoMapping="true">
        <id property="id" column="id" /><!--主键字段映射-->
		<result property="productname" column="prodoctname" />
		<result property="frombug" column="frombug" />
		<result property="parent" column="parent" />
		<result property="module" column="module" />
		<result property="product" column="product" />
		<result property="duplicatestory" column="duplicatestory" />
		<result property="branch" column="branch" />
		<result property="tobug" column="tobug" />
            
		
		<!--通过mybatis自动注入关系属性[主实体]，fetchType="lazy"为懒加载配置 -->
		<association property="ibzproductmodule" javaType="cn.ibizlab.pms.core.ibiz.domain.ProductModule" column="module" select="cn.ibizlab.pms.core.ibiz.mapper.ProductModuleMapper.selectById" fetchType="lazy"></association>
		<!--通过mybatis自动注入关系属性[主实体]，fetchType="lazy"为懒加载配置 -->
		<association property="ztbranch" javaType="cn.ibizlab.pms.core.zentao.domain.Branch" column="branch" select="cn.ibizlab.pms.core.zentao.mapper.BranchMapper.selectById" fetchType="lazy"></association>
		<!--通过mybatis自动注入关系属性[主实体]，fetchType="lazy"为懒加载配置 -->
		<association property="ztfrombug" javaType="cn.ibizlab.pms.core.zentao.domain.Bug" column="frombug" select="cn.ibizlab.pms.core.zentao.mapper.BugMapper.selectById" fetchType="lazy"></association>
		<!--通过mybatis自动注入关系属性[主实体]，fetchType="lazy"为懒加载配置 -->
		<association property="zttobug" javaType="cn.ibizlab.pms.core.zentao.domain.Bug" column="tobug" select="cn.ibizlab.pms.core.zentao.mapper.BugMapper.selectById" fetchType="lazy"></association>
		<!--通过mybatis自动注入关系属性[主实体]，fetchType="lazy"为懒加载配置 -->
		<association property="ztproduct" javaType="cn.ibizlab.pms.core.zentao.domain.Product" column="product" select="cn.ibizlab.pms.core.zentao.mapper.ProductMapper.selectById" fetchType="lazy"></association>
		<!--通过mybatis自动注入关系属性[主实体]，fetchType="lazy"为懒加载配置 -->
		<association property="ztstoryduplicatestory" javaType="cn.ibizlab.pms.core.zentao.domain.Story" column="duplicatestory" select="cn.ibizlab.pms.core.zentao.mapper.StoryMapper.selectById" fetchType="lazy"></association>
		<!--通过mybatis自动注入关系属性[主实体]，fetchType="lazy"为懒加载配置 -->
		<association property="ztparent" javaType="cn.ibizlab.pms.core.zentao.domain.Story" column="parent" select="cn.ibizlab.pms.core.zentao.mapper.StoryMapper.selectById" fetchType="lazy"></association>
    </resultMap>

	<!--关系实体暴露select方法供主实体通过外键查询关系实体数据[实体关系名称:DER1N_ZT_STORY_IBZ_PRODUCTMODULE_MODULE] -->
	 <select id="selectByModule" resultMap="StoryResultMap">
         select t1.* from (
                <include refid="Default" />
         ) t1
         where  module=#{id}
     </select>
	<!--关系实体暴露select方法供主实体通过外键查询关系实体数据[实体关系名称:DER1N_ZT_STORY_ZT_BRANCH_BRANCH] -->
	 <select id="selectByBranch" resultMap="StoryResultMap">
         select t1.* from (
                <include refid="Default" />
         ) t1
         where  branch=#{id}
     </select>
	<!--关系实体暴露select方法供主实体通过外键查询关系实体数据[实体关系名称:DER1N_ZT_STORY_ZT_BUG_FROMBUGID] -->
	 <select id="selectByFrombug" resultMap="StoryResultMap">
         select t1.* from (
                <include refid="Default" />
         ) t1
         where  frombug=#{id}
     </select>
	<!--关系实体暴露select方法供主实体通过外键查询关系实体数据[实体关系名称:DER1N_ZT_STORY_ZT_BUG_TOBUGID] -->
	 <select id="selectByTobug" resultMap="StoryResultMap">
         select t1.* from (
                <include refid="Default" />
         ) t1
         where  tobug=#{id}
     </select>
	<!--关系实体暴露select方法供主实体通过外键查询关系实体数据[实体关系名称:DER1N_ZT_STORY_ZT_PRODUCT_PRODUCT] -->
	 <select id="selectByProduct" resultMap="StoryResultMap">
         select t1.* from (
                <include refid="Default" />
         ) t1
         where  product=#{id}
     </select>
	<!--关系实体暴露select方法供主实体通过外键查询关系实体数据[实体关系名称:DER1N_ZT_STORY_ZT_STORY_DUPLICATESTORY] -->
	 <select id="selectByDuplicatestory" resultMap="StoryResultMap">
         select t1.* from (
                <include refid="Default" />
         ) t1
         where  duplicatestory=#{id}
     </select>
	<!--关系实体暴露select方法供主实体通过外键查询关系实体数据[实体关系名称:DER1N__ZT_STORY__ZT_STORY__PARENT] -->
	 <select id="selectByParent" resultMap="StoryResultMap">
         select t1.* from (
                <include refid="Default" />
         ) t1
         where  parent=#{id}
     </select>

    <!--数据集合[Default]-->
	 <select id="searchDefault"  parameterType="cn.ibizlab.pms.core.zentao.filter.StorySearchContext"  resultMap="StoryResultMap">
         select t1.* from (
                <include refid="Default" />
         )t1
         <where><if test="ew!=null and ew.sqlSegment!=null and !ew.emptyOfWhere">${ew.sqlSegment}</if></where>
         <if test="ew!=null and ew.sqlSegment!=null and ew.emptyOfWhere">${ew.sqlSegment}</if>
     </select>

    <!--数据查询[Default]-->
    <sql id="Default" databaseId="mysql">
       <![CDATA[	SELECT t1.`ASSIGNEDDATE`, t1.`ASSIGNEDTO`, t1.`BRANCH`, t1.`CHILDSTORIES`, t1.`CLOSEDBY`, t1.`CLOSEDDATE`, t1.`CLOSEDREASON`, t1.`COLOR`, t1.`DELETED`, t1.`DUPLICATESTORY`, t1.`ESTIMATE`, t1.`FROMBUG`, t1.`ID`, t1.`KEYWORDS`, t1.`LASTEDITEDBY`, t1.`LASTEDITEDDATE`, t1.`LINKSTORIES`, t1.`MODULE`, t11.`NAME` AS `MODULENAME`, t1.`OPENEDBY`, t1.`OPENEDDATE`, t1.`PARENT`, t21.`TITLE` AS `PARENTNAME`, t11.`PATH`, t1.`PLAN`, t1.`PRI`, t31.`NAME` AS `PRODOCTNAME`, t1.`PRODUCT`, t1.`REVIEWEDBY`, t1.`REVIEWEDDATE`, t1.`SOURCE`, t1.`SOURCENOTE`, (select spec from zt_storyspec where story = t1.`ID` and version= t1.`VERSION`) AS `SPEC`, t1.`STAGE`, t1.`STAGEDBY`, t1.`STATUS`, t1.`SUBSTATUS`, t1.`TITLE`, t1.`TOBUG`, t1.`TYPE`, (select verify from zt_storyspec where story = t1.`ID` and version= t1.`VERSION`) AS `VERIFY`, t1.`VERSION` FROM `zt_story` t1  LEFT JOIN zt_module t11 ON t1.MODULE = t11.ID  LEFT JOIN zt_story t21 ON t1.PARENT = t21.ID  LEFT JOIN zt_product t31 ON t1.PRODUCT = t31.ID  
				 WHERE 	t1.deleted = '0'
			]]>
    </sql>

    <!--数据查询[GetProductStories]-->
    <sql id="GetProductStories" databaseId="mysql">
       <![CDATA[	SELECT t1.`ASSIGNEDDATE`, t1.`ASSIGNEDTO`, t1.`BRANCH`, t1.`CHILDSTORIES`, t1.`CLOSEDBY`, t1.`CLOSEDDATE`, t1.`CLOSEDREASON`, t1.`COLOR`, t1.`DELETED`, t1.`DUPLICATESTORY`, t1.`ESTIMATE`, t1.`FROMBUG`, t1.`ID`, t1.`KEYWORDS`, t1.`LASTEDITEDBY`, t1.`LASTEDITEDDATE`, t1.`LINKSTORIES`, t1.`MODULE`, t11.`NAME` AS `MODULENAME`, t1.`OPENEDBY`, t1.`OPENEDDATE`, t1.`PARENT`, t21.`TITLE` AS `PARENTNAME`, t11.`PATH`, t1.`PLAN`, t1.`PRI`, t31.`NAME` AS `PRODOCTNAME`, t1.`PRODUCT`, t1.`REVIEWEDBY`, t1.`REVIEWEDDATE`, t1.`SOURCE`, t1.`SOURCENOTE`, (select spec from zt_storyspec where story = t1.`ID` and version= t1.`VERSION`) AS `SPEC`, t1.`STAGE`, t1.`STAGEDBY`, t1.`STATUS`, t1.`SUBSTATUS`, t1.`TITLE`, t1.`TOBUG`, t1.`TYPE`, (select verify from zt_storyspec where story = t1.`ID` and version= t1.`VERSION`) AS `VERIFY`, t1.`VERSION` FROM `zt_story` t1  LEFT JOIN zt_module t11 ON t1.MODULE = t11.ID  LEFT JOIN zt_story t21 ON t1.PARENT = t21.ID  LEFT JOIN zt_product t31 ON t1.PRODUCT = t31.ID  
				 WHERE 	t1.deleted = '0'
					 AND ( t1.`product` = #{srf.datacontext.product}  and  <#assign _value=srfdatacontext('branch','{\"ignoreempty\":true,\"defname\":\"branch\",\"dename\":\"zt_story\"}')><#if _value?length gt 0>t1.`branch` = ${_value}<#else>1=1</#if>  and  <#assign _value=srfdatacontext('nodeid','{\"ignoreempty\":true,\"defname\":\"module\",\"dename\":\"zt_story\"}')><#if _value?length gt 0>t1.`module` = ${_value}<#else>1=1</#if> )
			]]>
    </sql>

    <!--数据查询[View]-->
    <sql id="View" databaseId="mysql">
       <![CDATA[	SELECT t1.`ASSIGNEDDATE`, t1.`ASSIGNEDTO`, t1.`BRANCH`, t1.`CHILDSTORIES`, t1.`CLOSEDBY`, t1.`CLOSEDDATE`, t1.`CLOSEDREASON`, t1.`COLOR`, t1.`DELETED`, t1.`DUPLICATESTORY`, t1.`ESTIMATE`, t1.`FROMBUG`, t1.`ID`, t1.`KEYWORDS`, t1.`LASTEDITEDBY`, t1.`LASTEDITEDDATE`, t1.`LINKSTORIES`, t1.`MAILTO`, t1.`MODULE`, t11.`NAME` AS `MODULENAME`, t1.`OPENEDBY`, t1.`OPENEDDATE`, t1.`PARENT`, t21.`TITLE` AS `PARENTNAME`, t11.`PATH`, t1.`PLAN`, t1.`PRI`, t31.`NAME` AS `PRODOCTNAME`, t1.`PRODUCT`, t1.`REVIEWEDBY`, t1.`REVIEWEDDATE`, t1.`SOURCE`, t1.`SOURCENOTE`, (select spec from zt_storyspec where story = t1.`ID` and version= t1.`VERSION`) AS `SPEC`, t1.`STAGE`, t1.`STAGEDBY`, t1.`STATUS`, t1.`SUBSTATUS`, t1.`TITLE`, t1.`TOBUG`, t1.`TYPE`, (select verify from zt_storyspec where story = t1.`ID` and version= t1.`VERSION`) AS `VERIFY`, t1.`VERSION` FROM `zt_story` t1  LEFT JOIN zt_module t11 ON t1.MODULE = t11.ID  LEFT JOIN zt_story t21 ON t1.PARENT = t21.ID  LEFT JOIN zt_product t31 ON t1.PRODUCT = t31.ID  
				 WHERE 	t1.deleted = '0'
			]]>
    </sql>

</mapper>

