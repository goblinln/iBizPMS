<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper	namespace="cn.ibizlab.pms.core.zentao.mapper.DocLibMapper">

    <!--该方法用于重写mybatis中selectById方法，以实现查询逻辑属性-->
	<select id="selectById"  resultMap="DocLibResultMap" databaseId="mysql">
        <![CDATA[select t1.* from (SELECT t1.`ACL`, t1.`COLLECTOR`, t1.`DELETED`, 'doc' AS `DOCLIBTYPE`, t1.`GROUPS`, t1.`ID`, t1.`MAIN`, t1.`NAME`, t1.`ORDER`, t1.`PRODUCT`, t21.`NAME` AS `PRODUCTNAME`, t1.`PROJECT`, t11.`NAME` AS `PROJECTNAME`, t1.`TYPE`, t1.`USERS` FROM `zt_doclib` t1  LEFT JOIN zt_project t11 ON t1.PROJECT = t11.ID  LEFT JOIN zt_product t21 ON t1.PRODUCT = t21.ID  ) t1 where id=#{id}]]>
    </select>

    <!--通过mybatis将查询结果注入到entity中,通过配置autoMapping="true"由mybatis自动处理映射关系 -->
    <resultMap id="DocLibResultMap" type="cn.ibizlab.pms.core.zentao.domain.DocLib" autoMapping="true">
		<id property="id" column="id" /><!--主键字段映射-->
		<result property="project" column="project" />
		<result property="product" column="product" />
            
		
		<!--通过mybatis自动注入关系属性[主实体]，fetchType="lazy"为懒加载配置 -->
		<association property="ztProduct" javaType="cn.ibizlab.pms.core.zentao.domain.Product" column="product" select="cn.ibizlab.pms.core.zentao.mapper.ProductMapper.selectById" fetchType="lazy"></association>
		<!--通过mybatis自动注入关系属性[主实体]，fetchType="lazy"为懒加载配置 -->
		<association property="ztProject" javaType="cn.ibizlab.pms.core.zentao.domain.Project" column="project" select="cn.ibizlab.pms.core.zentao.mapper.ProjectMapper.selectById" fetchType="lazy"></association>
    </resultMap>

	<!--关系实体暴露select方法供主实体通过外键查询关系实体数据[实体关系名称:DER1N_ZT_DOCLIB_ZT_PRODUCT_PRODUCT] -->
	 <select id="selectByProduct" resultMap="DocLibResultMap">
         select t1.* from (
                <include refid="Default" />
			 ) t1
			 where  product=#{id}
     </select>
	<!--关系实体暴露select方法供主实体通过外键查询关系实体数据[实体关系名称:DER1N_ZT_DOCLIB_ZT_PROJECT_PROJECT] -->
	 <select id="selectByProject" resultMap="DocLibResultMap">
         select t1.* from (
                <include refid="Default" />
			 ) t1
			 where  project=#{id}
     </select>

    <!--数据集合[ByCustom]-->
	 <select id="searchByCustom"  parameterType="cn.ibizlab.pms.core.zentao.filter.DocLibSearchContext"  resultMap="DocLibResultMap">
         select t1.* from (
                <include refid="ByCustom" />
         )t1
         <where><if test="ew!=null and ew.sqlSegment!=null and !ew.emptyOfWhere">${ew.sqlSegment}</if></where>
         <if test="ew!=null and ew.sqlSegment!=null and ew.emptyOfWhere">${ew.sqlSegment}</if>
     </select>

    <!--数据集合[ByProduct]-->
	 <select id="searchByProduct"  parameterType="cn.ibizlab.pms.core.zentao.filter.DocLibSearchContext"  resultMap="DocLibResultMap">
         select t1.* from (
                <include refid="ByProduct" />
         )t1
         <where><if test="ew!=null and ew.sqlSegment!=null and !ew.emptyOfWhere">${ew.sqlSegment}</if></where>
         <if test="ew!=null and ew.sqlSegment!=null and ew.emptyOfWhere">${ew.sqlSegment}</if>
     </select>

    <!--数据集合[ByProject]-->
	 <select id="searchByProject"  parameterType="cn.ibizlab.pms.core.zentao.filter.DocLibSearchContext"  resultMap="DocLibResultMap">
         select t1.* from (
                <include refid="ByProject" />
         )t1
         <where><if test="ew!=null and ew.sqlSegment!=null and !ew.emptyOfWhere">${ew.sqlSegment}</if></where>
         <if test="ew!=null and ew.sqlSegment!=null and ew.emptyOfWhere">${ew.sqlSegment}</if>
     </select>

    <!--数据集合[CurDocLib]-->
	 <select id="searchCurDocLib"  parameterType="cn.ibizlab.pms.core.zentao.filter.DocLibSearchContext"  resultMap="DocLibResultMap">
         select t1.* from (
                <include refid="CurDocLib" />
         )t1
         <where><if test="ew!=null and ew.sqlSegment!=null and !ew.emptyOfWhere">${ew.sqlSegment}</if></where>
         <if test="ew!=null and ew.sqlSegment!=null and ew.emptyOfWhere">${ew.sqlSegment}</if>
     </select>

    <!--数据集合[Default]-->
	 <select id="searchDefault"  parameterType="cn.ibizlab.pms.core.zentao.filter.DocLibSearchContext"  resultMap="DocLibResultMap">
         select t1.* from (
                <include refid="Default" />
         )t1
         <where><if test="ew!=null and ew.sqlSegment!=null and !ew.emptyOfWhere">${ew.sqlSegment}</if></where>
         <if test="ew!=null and ew.sqlSegment!=null and ew.emptyOfWhere">${ew.sqlSegment}</if>
     </select>

    <!--数据查询[ByCustom]-->
    <sql id="ByCustom" databaseId="mysql">
		<![CDATA[ SELECT t1.`ACL`, t1.`DELETED`, 'doc' AS `DOCLIBTYPE`, t1.`GROUPS`, t1.`ID`, t1.`MAIN`, t1.`NAME`, t1.`ORDER`, t1.`PRODUCT`, t21.`NAME` AS `PRODUCTNAME`, t1.`PROJECT`, t11.`NAME` AS `PROJECTNAME`, t1.`TYPE` FROM `zt_doclib` t1  LEFT JOIN zt_project t11 ON t1.PROJECT = t11.ID  LEFT JOIN zt_product t21 ON t1.PRODUCT = t21.ID  
					 WHERE 	t1.DELETED = '0'
						 AND ( t1.`TYPE` = 'custom' )
			]]>
    </sql>
    <!--数据查询[ByProduct]-->
    <sql id="ByProduct" databaseId="mysql">
		<![CDATA[ select t1.* from (SELECT 	t1.`ACL`, 	t1.`DELETED`, 	t1.`GROUPS`, 	t1.`ID`, 	t1.`MAIN`, 	t1.`NAME`, 	t1.`ORDER`, 	t1.`PRODUCT`, 	t1.`PROJECT`, 	t1.`TYPE` ,         'doc' as DOCLIBTYPE, 	(select count(1) from zt_doc t where t.lib = t1.id and t.product = t1.product and t.deleted = '0') as DOCCNT FROM 	`zt_doclib` t1  	 	UNION 	SELECT 	'default' as `ACL`, 	'0' as `DELETED`, 	'' as `GROUPS`, 	0 as `ID`, 	0 as `MAIN`, 	'附件库' as `NAME`, 	0 as `ORDER`, 	#{srf.datacontext.product} as `PRODUCT`,  	0 as `PROJECT`, 	'product' as `TYPE` ,         'file' as DOCLIBTYPE, 	(select count(1) from zt_file t where ((t.objectType ='product' and t.objectID =  #{srf.datacontext.product} 	) or (t.objectType = 'story' and exists(select 1 from zt_story tt where tt.id = t.objectID and tt.product =  #{srf.datacontext.product}  	and tt.deleted = '0')) or (t.objectType = 'bug' and exists(select 1 from zt_bug tt where tt.id = t.objectID and tt.product =  #{srf.datacontext.product}  	and tt.deleted = '0')) or (t.objectType = 'doc' and EXISTS(select 1 from zt_doc tt where tt.id = t.objectID and tt.product = #{srf.datacontext.product} 	and tt.deleted = '0'))) and t.deleted = '0') as DOCCNT FROM 	dual  ) t1
					 WHERE 	t1.type = 'product'  AND t1.deleted = '0'
						 AND  t1.`PRODUCT` = #{srf.datacontext.product}
			]]>
    </sql>
    <!--数据查询[ByProject]-->
    <sql id="ByProject" databaseId="mysql">
		<![CDATA[ select t1.* from (SELECT 	t1.`ACL`, 	t1.`DELETED`, 	t1.`GROUPS`, 	t1.`ID`, 	t1.`MAIN`, 	t1.`NAME`, 	t1.`ORDER`, 	t1.`PRODUCT`, 	t1.`PROJECT`, 	t1.`TYPE` ,         'doc' as DOCLIBTYPE, 	(select count(1) from zt_doc t where t.lib = t1.id and t.project = t1.project and t.deleted = '0') as DOCCNT FROM 	`zt_doclib` t1  	 	UNION 	SELECT 	'default' as `ACL`, 	'0' as `DELETED`, 	'' as `GROUPS`, 	0 as `ID`, 	0 as `MAIN`, 	'附件库' as `NAME`, 	0 as `ORDER`, 	0 as `PRODUCT`, 	#{srf.datacontext.project} as `PROJECT`, 	'project' as `TYPE` ,         'file' as DOCLIBTYPE, 	(select count(1) from zt_file t where ((t.objectType ='project' and t.objectID = #{srf.datacontext.project}) or (t.objectType = 'task' and exists(select 1 from zt_task tt where tt.id = t.objectID and tt.project = #{srf.datacontext.project} and tt.deleted = '0')) or (t.objectType = 'build' and exists(select 1 from zt_build tt where tt.id = t.objectID and tt.project = #{srf.datacontext.project} and tt.deleted = '0')) or (t.objectType = 'doc' and EXISTS(select 1 from zt_doc tt where tt.id = t.objectID and tt.project = #{srf.datacontext.project} and tt.deleted = '0'))) and t.deleted = '0') as DOCCNT FROM 	dual  ) t1
					 WHERE 	t1.type = 'project'  AND t1.deleted = '0'
						 AND t1.project = #{srf.datacontext.project}
			]]>
    </sql>
    <!--数据查询[CurDocLib]-->
    <sql id="CurDocLib" databaseId="mysql">
		<![CDATA[ SELECT t1.`ACL`, t1.`DELETED`, 'doc' AS `DOCLIBTYPE`, t1.`GROUPS`, t1.`ID`, t1.`MAIN`,  CONCAT_WS('',case when t1.type = 'product' then '/[产品]/' when t1.type = 'project' then '/[项目]/' else '/' end,case when t1.type = 'product' then t21.`name` when t1.type = 'project' then t11.`name` else '' end,case when t1.type = 'product' then '/' when t1.type = 'project' then '/' else '' end,t1.`name`)  as `NAME`, t1.`ORDER`, t1.`PRODUCT`, t21.`NAME` AS `PRODUCTNAME`, t1.`PROJECT`, t11.`NAME` AS `PROJECTNAME`, t1.`TYPE` FROM `zt_doclib` t1  LEFT JOIN zt_project t11 ON t1.PROJECT = t11.ID  LEFT JOIN zt_product t21 ON t1.PRODUCT = t21.ID
			]]>
    </sql>
    <!--数据查询[Default]-->
    <sql id="Default" databaseId="mysql">
		<![CDATA[ SELECT t1.`ACL`, t1.`DELETED`, 'doc' AS `DOCLIBTYPE`, t1.`GROUPS`, t1.`ID`, t1.`MAIN`, t1.`NAME`, t1.`ORDER`, t1.`PRODUCT`, t21.`NAME` AS `PRODUCTNAME`, t1.`PROJECT`, t11.`NAME` AS `PROJECTNAME`, t1.`TYPE` FROM `zt_doclib` t1  LEFT JOIN zt_project t11 ON t1.PROJECT = t11.ID  LEFT JOIN zt_product t21 ON t1.PRODUCT = t21.ID  
					 WHERE 	t1.DELETED = '0'
			]]>
    </sql>
    <!--数据查询[View]-->
    <sql id="View" databaseId="mysql">
		<![CDATA[ SELECT t1.`ACL`, t1.`COLLECTOR`, t1.`DELETED`, 'doc' AS `DOCLIBTYPE`, t1.`GROUPS`, t1.`ID`, t1.`MAIN`, t1.`NAME`, t1.`ORDER`, t1.`PRODUCT`, t21.`NAME` AS `PRODUCTNAME`, t1.`PROJECT`, t11.`NAME` AS `PROJECTNAME`, t1.`TYPE`, t1.`USERS` FROM `zt_doclib` t1  LEFT JOIN zt_project t11 ON t1.PROJECT = t11.ID  LEFT JOIN zt_product t21 ON t1.PRODUCT = t21.ID  
					 WHERE 	t1.DELETED = '0'
			]]>
    </sql>
</mapper>

