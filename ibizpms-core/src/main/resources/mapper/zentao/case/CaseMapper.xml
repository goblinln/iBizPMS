<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper	namespace="cn.ibizlab.pms.core.zentao.mapper.CaseMapper">

    <!--该方法用于重写mybatis中selectById方法，以实现查询逻辑属性-->
	<select id="selectById"  resultMap="CaseResultMap" databaseId="mysql">
        <![CDATA[select t1.* from (SELECT t1.`AUTO`, t1.`BRANCH`, t1.`COLOR`, t1.`DELETED`, t1.`FRAME`, t1.`FREQUENCY`, t1.`FROMBUG`, t1.`FROMCASEID`, t1.`FROMCASEVERSION`, t1.`HOWRUN`, t1.`ID`, t1.`KEYWORDS`, t1.`LASTEDITEDBY`, t1.`LASTEDITEDDATE`, t1.`LASTRUNDATE`, t1.`LASTRUNNER`, t1.`LASTRUNRESULT`, t1.`LIB`, t41.`NAME` AS `LIBNAME`, t1.`LINKCASE`, t1.`MODULE`, t11.`NAME` AS `MODULENAME`, t1.`OPENEDBY`, t1.`OPENEDDATE`, t1.`ORDER`, t1.`PATH`, t1.`PRECONDITION`, t1.`PRI`, t1.`PRODUCT`, t31.`NAME` AS `PRODUCTNAME`, (SELECT COUNT(1) FROM zt_testresult WHERE `case` = t1.`ID` ) AS `RESULTCNT`, (SELECT COUNT(1) FROM zt_testresult WHERE `case` = t1.`ID`  and caseResult in('fail','blocked') ) AS `RESULTFALICNT`, t1.`REVIEWEDBY`, t1.`REVIEWEDDATE`, t1.`SCRIPTEDBY`, t1.`SCRIPTEDDATE`, t1.`SCRIPTLOCATION`, t1.`SCRIPTSTATUS`, t1.`STAGE`, t1.`STATUS`, (case when t1.storyVersion < t21.version and t21.`status` <> 'changed' then 'storychange'  else t1.`status` end ) AS `STATUS1`, (SELECT COUNT(1) FROM zt_casestep WHERE `case` = t1.`ID` AND version = t1.`VERSION` ) AS `STEPCNT`, t1.`STORY`, t21.`TITLE` AS `STORYNAME`, t1.`STORYVERSION`, t1.`SUBSTATUS`, t1.`TITLE`, (SELECT COUNT(1) FROM zt_bug WHERE `case` = t1.`ID` ) AS `TOBUGCNT`, t1.`TYPE`, t1.`VERSION` FROM `zt_case` t1  LEFT JOIN zt_module t11 ON t1.MODULE = t11.ID  LEFT JOIN zt_story t21 ON t1.STORY = t21.ID  LEFT JOIN zt_product t31 ON t1.PRODUCT = t31.ID  LEFT JOIN zt_testsuite t41 ON t1.LIB = t41.ID  ) t1 where id=#{id}]]>
    </select>

    <!--通过mybatis将查询结果注入到entity中,通过配置autoMapping="true"由mybatis自动处理映射关系 -->
    <resultMap id="CaseResultMap" type="cn.ibizlab.pms.core.zentao.domain.Case" autoMapping="true">
        <id property="id" column="id" /><!--主键字段映射-->
		<result property="fromcaseid" column="fromcaseid" />
		<result property="branch" column="branch" />
		<result property="frombug" column="frombug" />
		<result property="story" column="story" />
		<result property="product" column="product" />
		<result property="lib" column="lib" />
		<result property="module" column="module" />
            
		
		<!--通过mybatis自动注入关系属性[主实体]，fetchType="lazy"为懒加载配置 -->
		<association property="ztbranch" javaType="cn.ibizlab.pms.core.zentao.domain.Branch" column="branch" select="cn.ibizlab.pms.core.zentao.mapper.BranchMapper.selectById" fetchType="lazy"></association>
		<!--通过mybatis自动注入关系属性[主实体]，fetchType="lazy"为懒加载配置 -->
		<association property="ztfrombug" javaType="cn.ibizlab.pms.core.zentao.domain.Bug" column="frombug" select="cn.ibizlab.pms.core.zentao.mapper.BugMapper.selectById" fetchType="lazy"></association>
		<!--通过mybatis自动注入关系属性[主实体]，fetchType="lazy"为懒加载配置 -->
		<association property="ztfromcase" javaType="cn.ibizlab.pms.core.zentao.domain.Case" column="fromcaseid" select="cn.ibizlab.pms.core.zentao.mapper.CaseMapper.selectById" fetchType="lazy"></association>
		<!--通过mybatis自动注入关系属性[主实体]，fetchType="lazy"为懒加载配置 -->
		<association property="ztmodule" javaType="cn.ibizlab.pms.core.zentao.domain.Module" column="module" select="cn.ibizlab.pms.core.zentao.mapper.ModuleMapper.selectById" fetchType="lazy"></association>
		<!--通过mybatis自动注入关系属性[主实体]，fetchType="lazy"为懒加载配置 -->
		<association property="ztproduct" javaType="cn.ibizlab.pms.core.zentao.domain.Product" column="product" select="cn.ibizlab.pms.core.zentao.mapper.ProductMapper.selectById" fetchType="lazy"></association>
		<!--通过mybatis自动注入关系属性[主实体]，fetchType="lazy"为懒加载配置 -->
		<association property="ztstory" javaType="cn.ibizlab.pms.core.zentao.domain.Story" column="story" select="cn.ibizlab.pms.core.zentao.mapper.StoryMapper.selectById" fetchType="lazy"></association>
		<!--通过mybatis自动注入关系属性[主实体]，fetchType="lazy"为懒加载配置 -->
		<association property="zttestsuite" javaType="cn.ibizlab.pms.core.zentao.domain.TestSuite" column="lib" select="cn.ibizlab.pms.core.zentao.mapper.TestSuiteMapper.selectById" fetchType="lazy"></association>
    </resultMap>

	<!--关系实体暴露select方法供主实体通过外键查询关系实体数据[实体关系名称:DER1N_ZT_CASE_ZT_BRANCH_BRANCH] -->
	 <select id="selectByBranch" resultMap="CaseResultMap">
         select t1.* from (
                <include refid="Default" />
			 ) t1
			 where  branch=#{id}
     </select>
	<!--关系实体暴露select方法供主实体通过外键查询关系实体数据[实体关系名称:DER1N_ZT_CASE_ZT_BUG_FROMBUG] -->
	 <select id="selectByFrombug" resultMap="CaseResultMap">
         select t1.* from (
                <include refid="Default" />
			 ) t1
			 where  frombug=#{id}
     </select>
	<!--关系实体暴露select方法供主实体通过外键查询关系实体数据[实体关系名称:DER1N_ZT_CASE_ZT_CASE_FROMCAEID] -->
	 <select id="selectByFromcaseid" resultMap="CaseResultMap">
         select t1.* from (
                <include refid="Default" />
			 ) t1
			 where  fromcaseid=#{id}
     </select>
	<!--关系实体暴露select方法供主实体通过外键查询关系实体数据[实体关系名称:DER1N_ZT_CASE_ZT_MODULE_MODULE] -->
	 <select id="selectByModule" resultMap="CaseResultMap">
         select t1.* from (
                <include refid="Default" />
			 ) t1
			 where  module=#{id}
     </select>
	<!--关系实体暴露select方法供主实体通过外键查询关系实体数据[实体关系名称:DER1N_ZT_CASE_ZT_PRODUCT_PRODUCT] -->
	 <select id="selectByProduct" resultMap="CaseResultMap">
         select t1.* from (
                <include refid="Default" />
			 ) t1
			 where  product=#{id}
     </select>
	<!--关系实体暴露select方法供主实体通过外键查询关系实体数据[实体关系名称:DER1N_ZT_CASE_ZT_STORY_STORY] -->
	 <select id="selectByStory" resultMap="CaseResultMap">
         select t1.* from (
                <include refid="Default" />
			 ) t1
			 where  story=#{id}
     </select>
	<!--关系实体暴露select方法供主实体通过外键查询关系实体数据[实体关系名称:DER1N_ZT_CASE_ZT_TESTSUITE_LIB] -->
	 <select id="selectByLib" resultMap="CaseResultMap">
         select t1.* from (
                <include refid="Default" />
			 ) t1
			 where  lib=#{id}
     </select>

    <!--数据集合[BatchNew]-->
	 <select id="searchBatchNew"  parameterType="cn.ibizlab.pms.core.zentao.filter.CaseSearchContext"  resultMap="CaseResultMap">
         select t1.* from (
                <include refid="BatchNew" />
         )t1
         <where><if test="ew!=null and ew.sqlSegment!=null and !ew.emptyOfWhere">${ew.sqlSegment}</if></where>
         <if test="ew!=null and ew.sqlSegment!=null and ew.emptyOfWhere">${ew.sqlSegment}</if>
     </select>

    <!--数据集合[CurSuite]-->
	 <select id="searchCurSuite"  parameterType="cn.ibizlab.pms.core.zentao.filter.CaseSearchContext"  resultMap="CaseResultMap">
         select t1.* from (
                <include refid="CurSuite" />
         )t1
         <where><if test="ew!=null and ew.sqlSegment!=null and !ew.emptyOfWhere">${ew.sqlSegment}</if></where>
         <if test="ew!=null and ew.sqlSegment!=null and ew.emptyOfWhere">${ew.sqlSegment}</if>
     </select>

    <!--数据集合[CurTestTask]-->
	 <select id="searchCurTestTask"  parameterType="cn.ibizlab.pms.core.zentao.filter.CaseSearchContext"  resultMap="CaseResultMap">
         select t1.* from (
                <include refid="CurTestTask" />
         )t1
         <where><if test="ew!=null and ew.sqlSegment!=null and !ew.emptyOfWhere">${ew.sqlSegment}</if></where>
         <if test="ew!=null and ew.sqlSegment!=null and ew.emptyOfWhere">${ew.sqlSegment}</if>
     </select>

    <!--数据集合[Default]-->
	 <select id="searchDefault"  parameterType="cn.ibizlab.pms.core.zentao.filter.CaseSearchContext"  resultMap="CaseResultMap">
         select t1.* from (
                <include refid="Default" />
         )t1
         <where><if test="ew!=null and ew.sqlSegment!=null and !ew.emptyOfWhere">${ew.sqlSegment}</if></where>
         <if test="ew!=null and ew.sqlSegment!=null and ew.emptyOfWhere">${ew.sqlSegment}</if>
     </select>

    <!--数据集合[NotCurTestSuite]-->
	 <select id="searchNotCurTestSuite"  parameterType="cn.ibizlab.pms.core.zentao.filter.CaseSearchContext"  resultMap="CaseResultMap">
         select t1.* from (
                <include refid="NotCurTestSuite" />
         )t1
         <where><if test="ew!=null and ew.sqlSegment!=null and !ew.emptyOfWhere">${ew.sqlSegment}</if></where>
         <if test="ew!=null and ew.sqlSegment!=null and ew.emptyOfWhere">${ew.sqlSegment}</if>
     </select>

    <!--数据集合[NotCurTestTask]-->
	 <select id="searchNotCurTestTask"  parameterType="cn.ibizlab.pms.core.zentao.filter.CaseSearchContext"  resultMap="CaseResultMap">
         select t1.* from (
                <include refid="NotCurTestTask" />
         )t1
         <where><if test="ew!=null and ew.sqlSegment!=null and !ew.emptyOfWhere">${ew.sqlSegment}</if></where>
         <if test="ew!=null and ew.sqlSegment!=null and ew.emptyOfWhere">${ew.sqlSegment}</if>
     </select>

    <!--数据查询[BatchNew]-->
    <sql id="BatchNew" databaseId="mysql">
		<![CDATA[ SELECT t1.`AUTO`, t1.`BRANCH`, t1.`COLOR`, t1.`DELETED`, t1.`FRAME`, t1.`FREQUENCY`, t1.`FROMBUG`, t1.`FROMCASEID`, t1.`FROMCASEVERSION`, t1.`HOWRUN`, t1.`ID`, t1.`KEYWORDS`, t1.`LASTEDITEDBY`, t1.`LASTEDITEDDATE`, t1.`LASTRUNDATE`, t1.`LASTRUNNER`, t1.`LASTRUNRESULT`, t1.`LIB`, t41.`NAME` AS `LIBNAME`, t1.`LINKCASE`, t1.`MODULE`, t11.`NAME` AS `MODULENAME`, t1.`OPENEDBY`, t1.`OPENEDDATE`, t1.`ORDER`, t1.`PATH`, t1.`PRI`, t1.`PRODUCT`, t31.`NAME` AS `PRODUCTNAME`, (SELECT COUNT(1) FROM zt_testresult WHERE `case` = t1.`ID` ) AS `RESULTCNT`, (SELECT COUNT(1) FROM zt_testresult WHERE `case` = t1.`ID`  and caseResult in('fail','blocked') ) AS `RESULTFALICNT`, t1.`REVIEWEDBY`, t1.`REVIEWEDDATE`, t1.`SCRIPTEDBY`, t1.`SCRIPTEDDATE`, t1.`SCRIPTLOCATION`, t1.`SCRIPTSTATUS`, t1.`STAGE`, t1.`STATUS`, (case when t1.storyVersion < t21.version and t21.`status` <> 'changed' then 'storychange'  else t1.`status` end ) AS `STATUS1`, (SELECT COUNT(1) FROM zt_casestep WHERE `case` = t1.`ID` AND version = t1.`VERSION` ) AS `STEPCNT`, t1.`STORY`, t21.`TITLE` AS `STORYNAME`, t1.`STORYVERSION`, t1.`SUBSTATUS`, t1.`TITLE`, (SELECT COUNT(1) FROM zt_bug WHERE `case` = t1.`ID` ) AS `TOBUGCNT`, t1.`TYPE`, t1.`VERSION` FROM `zt_case` t1  LEFT JOIN zt_module t11 ON t1.MODULE = t11.ID  LEFT JOIN zt_story t21 ON t1.STORY = t21.ID  LEFT JOIN zt_product t31 ON t1.PRODUCT = t31.ID  LEFT JOIN zt_testsuite t41 ON t1.LIB = t41.ID  
					 WHERE 	t1.DELETED = '0'
						 AND ( 1<>1 )
			]]>
    </sql>
    <!--数据查询[CurSuite]-->
    <sql id="CurSuite" databaseId="mysql">
		<![CDATA[ SELECT t1.`AUTO`, t1.`BRANCH`, t1.`COLOR`, t1.`DELETED`, t1.`FRAME`, t1.`FREQUENCY`, t1.`FROMBUG`, t1.`FROMCASEID`, t1.`FROMCASEVERSION`, t1.`HOWRUN`, t1.`ID`, t1.`KEYWORDS`, t1.`LASTEDITEDBY`, t1.`LASTEDITEDDATE`, t1.`LASTRUNDATE`, t1.`LASTRUNNER`, t1.`LASTRUNRESULT`, t1.`LIB`, t41.`NAME` AS `LIBNAME`, t1.`LINKCASE`, t1.`MODULE`, t11.`NAME` AS `MODULENAME`, t1.`OPENEDBY`, t1.`OPENEDDATE`, t1.`ORDER`, t1.`PATH`, t1.`PRI`, t1.`PRODUCT`, t31.`NAME` AS `PRODUCTNAME`, (SELECT COUNT(1) FROM zt_testresult WHERE `case` = t1.`ID` ) AS `RESULTCNT`, (SELECT COUNT(1) FROM zt_testresult WHERE `case` = t1.`ID`  and caseResult in('fail','blocked') ) AS `RESULTFALICNT`, t1.`REVIEWEDBY`, t1.`REVIEWEDDATE`, t1.`SCRIPTEDBY`, t1.`SCRIPTEDDATE`, t1.`SCRIPTLOCATION`, t1.`SCRIPTSTATUS`, t1.`STAGE`, t1.`STATUS`, (case when t1.storyVersion < t21.version and t21.`status` <> 'changed' then 'storychange'  else t1.`status` end ) AS `STATUS1`, (SELECT COUNT(1) FROM zt_casestep WHERE `case` = t1.`ID` AND version = t1.`VERSION` ) AS `STEPCNT`, t1.`STORY`, t21.`TITLE` AS `STORYNAME`, t1.`STORYVERSION`, t1.`SUBSTATUS`, t1.`TITLE`, (SELECT COUNT(1) FROM zt_bug WHERE `case` = t1.`ID` ) AS `TOBUGCNT`, t1.`TYPE`, t1.`VERSION` FROM `zt_case` t1  LEFT JOIN zt_module t11 ON t1.MODULE = t11.ID  LEFT JOIN zt_story t21 ON t1.STORY = t21.ID  LEFT JOIN zt_product t31 ON t1.PRODUCT = t31.ID  LEFT JOIN zt_testsuite t41 ON t1.LIB = t41.ID  
					 WHERE 	EXISTS(SELECT * FROM zt_suitecase t51   WHERE   t1.ID = t51.CASE  AND  ( t51.`SUITE` = #{srf.datacontext.srfparentkey} ) )
						 AND t1.DELETED = '0'
			]]>
    </sql>
    <!--数据查询[CurTestTask]-->
    <sql id="CurTestTask" databaseId="mysql">
		<![CDATA[ SELECT t1.`AUTO`, t1.`BRANCH`, t1.`COLOR`, t1.`DELETED`, t1.`FRAME`, t1.`FREQUENCY`, t1.`FROMBUG`, t1.`FROMCASEID`, t1.`FROMCASEVERSION`, t1.`HOWRUN`, t1.`ID`, t1.`KEYWORDS`, t1.`LASTEDITEDBY`, t1.`LASTEDITEDDATE`, t41.`LASTRUNDATE`, t41.`LASTRUNNER`, t41.`LASTRUNRESULT`, t1.`LIB`, t1.`LINKCASE`, t1.`MODULE`, t11.`NAME` AS `MODULENAME`, t1.`OPENEDBY`, t1.`OPENEDDATE`, t1.`ORDER`, t1.`PATH`, t1.`PRI`, t1.`PRODUCT`, t31.`NAME` AS `PRODUCTNAME`, t1.`REVIEWEDBY`, t1.`REVIEWEDDATE`, t1.`SCRIPTEDBY`, t1.`SCRIPTEDDATE`, t1.`SCRIPTLOCATION`, t1.`SCRIPTSTATUS`, t1.`STAGE`, t1.`STATUS`, t1.`STORY`, t21.`TITLE` AS `STORYNAME`, t1.`STORYVERSION`, t1.`SUBSTATUS`, t1.`TITLE`, t1.`TYPE`, t1.`VERSION`, t41.assignedTo as assignedTo, (case when t1.version > t41.version then 'casechange' else t41.`status` end) as `status1` FROM `zt_case` t1  LEFT JOIN zt_module t11 ON t1.MODULE = t11.ID  LEFT JOIN zt_story t21 ON t1.STORY = t21.ID  LEFT JOIN zt_product t31 ON t1.PRODUCT = t31.ID  LEFT JOIN zt_testrun t41 ON t1.id = t41.`case`
					 WHERE 	t41.`TASK` = #{srf.datacontext.srfparentkey}
						 AND t1.DELETED = '0'
			]]>
    </sql>
    <!--数据查询[Default]-->
    <sql id="Default" databaseId="mysql">
		<![CDATA[ SELECT t1.`AUTO`, t1.`BRANCH`, t1.`COLOR`, t1.`DELETED`, t1.`FRAME`, t1.`FREQUENCY`, t1.`FROMBUG`, t1.`FROMCASEID`, t1.`FROMCASEVERSION`, t1.`HOWRUN`, t1.`ID`, t1.`KEYWORDS`, t1.`LASTEDITEDBY`, t1.`LASTEDITEDDATE`, t1.`LASTRUNDATE`, t1.`LASTRUNNER`, t1.`LASTRUNRESULT`, t1.`LIB`, t41.`NAME` AS `LIBNAME`, t1.`LINKCASE`, t1.`MODULE`, t11.`NAME` AS `MODULENAME`, t1.`OPENEDBY`, t1.`OPENEDDATE`, t1.`ORDER`, t1.`PATH`, t1.`PRI`, t1.`PRODUCT`, t31.`NAME` AS `PRODUCTNAME`, (SELECT COUNT(1) FROM zt_testresult WHERE `case` = t1.`ID` ) AS `RESULTCNT`, (SELECT COUNT(1) FROM zt_testresult WHERE `case` = t1.`ID`  and caseResult in('fail','blocked') ) AS `RESULTFALICNT`, t1.`REVIEWEDBY`, t1.`REVIEWEDDATE`, t1.`SCRIPTEDBY`, t1.`SCRIPTEDDATE`, t1.`SCRIPTLOCATION`, t1.`SCRIPTSTATUS`, t1.`STAGE`, t1.`STATUS`, (case when t1.storyVersion < t21.version and t21.`status` <> 'changed' then 'storychange'  else t1.`status` end ) AS `STATUS1`, (SELECT COUNT(1) FROM zt_casestep WHERE `case` = t1.`ID` AND version = t1.`VERSION` ) AS `STEPCNT`, t1.`STORY`, t21.`TITLE` AS `STORYNAME`, t1.`STORYVERSION`, t1.`SUBSTATUS`, t1.`TITLE`, (SELECT COUNT(1) FROM zt_bug WHERE `case` = t1.`ID` ) AS `TOBUGCNT`, t1.`TYPE`, t1.`VERSION` FROM `zt_case` t1  LEFT JOIN zt_module t11 ON t1.MODULE = t11.ID  LEFT JOIN zt_story t21 ON t1.STORY = t21.ID  LEFT JOIN zt_product t31 ON t1.PRODUCT = t31.ID  LEFT JOIN zt_testsuite t41 ON t1.LIB = t41.ID  
					 WHERE 	t1.DELETED = '0'
			]]>
    </sql>
    <!--数据查询[NotCurTestSuite]-->
    <sql id="NotCurTestSuite" databaseId="mysql">
		<![CDATA[ SELECT 	t1.`AUTO`, 	t1.`BRANCH`, 	t1.`COLOR`, 	t1.`DELETED`, 	t1.`FRAME`, 	t1.`FREQUENCY`, 	t1.`FROMBUG`, 	t1.`FROMCASEID`, 	t1.`FROMCASEVERSION`, 	t1.`HOWRUN`, 	t1.`ID`, 	t1.`KEYWORDS`, 	t1.`LASTEDITEDBY`, 	t1.`LASTEDITEDDATE`, 	t1.`LASTRUNDATE`, 	t1.`LASTRUNNER`, 	t1.`LASTRUNRESULT`, 	t1.`LIB`, 	t1.`LINKCASE`, 	t1.`MODULE`, 	t11.`NAME` AS `MODULENAME`, 	t1.`OPENEDBY`, 	t1.`OPENEDDATE`, 	t1.`ORDER`, 	t1.`PATH`, 	t1.`PRI`, 	t1.`PRODUCT`, 	t31.`NAME` AS `PRODUCTNAME`, 	( SELECT COUNT( 1 ) FROM zt_testresult WHERE `case` = t1.`ID` ) AS `RESULTCNT`, 	( SELECT COUNT( 1 ) FROM zt_testresult WHERE `case` = t1.`ID` AND caseResult IN ( 'fail', 'blocked' ) ) AS `RESULTFALICNT`, 	t1.`REVIEWEDBY`, 	t1.`REVIEWEDDATE`, 	t1.`SCRIPTEDBY`, 	t1.`SCRIPTEDDATE`, 	t1.`SCRIPTLOCATION`, 	t1.`SCRIPTSTATUS`, 	t1.`STAGE`, 	t1.`STATUS`, 	( CASE WHEN t1.storyVersion < t21.version AND t21.`status` <> 'changed' THEN 'storychange' ELSE t1.`status` END ) AS `STATUS1`, 	( SELECT COUNT( 1 ) FROM zt_casestep WHERE `case` = t1.`ID` AND version = t1.`VERSION` ) AS `STEPCNT`, 	t1.`STORY`, 	t21.`TITLE` AS `STORYNAME`, 	t1.`STORYVERSION`, 	t1.`SUBSTATUS`, 	t1.`TITLE`, 	( SELECT COUNT( 1 ) FROM zt_bug WHERE `case` = t1.`ID` ) AS `TOBUGCNT`, 	t1.`TYPE`, 	t1.`VERSION`  FROM 	`zt_case` t1 	LEFT JOIN zt_module t11 ON t1.MODULE = t11.ID 	LEFT JOIN zt_story t21 ON t1.STORY = t21.ID 	LEFT JOIN zt_product t31 ON t1.PRODUCT = t31.ID
					 WHERE 	NOT(EXISTS(SELECT * FROM zt_suitecase t41   WHERE   t1.ID = t41.`CASE`  AND  ( t41.`suite` = #{srf.webcontext.suite} ) ))
						 AND t1.`deleted` = '0'
			]]>
    </sql>
    <!--数据查询[NotCurTestTask]-->
    <sql id="NotCurTestTask" databaseId="mysql">
		<![CDATA[ SELECT t1.`AUTO`, t1.`BRANCH`, t1.`COLOR`, t1.`DELETED`, t1.`FRAME`, t1.`FREQUENCY`, t1.`FROMBUG`, t1.`FROMCASEID`, t1.`FROMCASEVERSION`, t1.`HOWRUN`, t1.`ID`, t1.`KEYWORDS`, t1.`LASTEDITEDBY`, t1.`LASTEDITEDDATE`, t1.`LASTRUNDATE`, t1.`LASTRUNNER`, t1.`LASTRUNRESULT`, t1.`LIB`, t1.`LINKCASE`, t1.`MODULE`, t11.`NAME` AS `MODULENAME`, t1.`OPENEDBY`, t1.`OPENEDDATE`, t1.`ORDER`, t1.`PATH`, t1.`PRI`, t1.`PRODUCT`, t31.`NAME` AS `PRODUCTNAME`, (SELECT COUNT(1) FROM zt_testresult WHERE `case` = t1.`ID` ) AS `RESULTCNT`, (SELECT COUNT(1) FROM zt_testresult WHERE `case` = t1.`ID`  and caseResult in('fail','blocked') ) AS `RESULTFALICNT`, t1.`REVIEWEDBY`, t1.`REVIEWEDDATE`, t1.`SCRIPTEDBY`, t1.`SCRIPTEDDATE`, t1.`SCRIPTLOCATION`, t1.`SCRIPTSTATUS`, t1.`STAGE`, t1.`STATUS`, (case when t1.storyVersion < t21.version and t21.`status` <> 'changed' then 'storychange'  else t1.`status` end ) AS `STATUS1`, (SELECT COUNT(1) FROM zt_casestep WHERE `case` = t1.`ID` AND version = t1.`VERSION` ) AS `STEPCNT`, t1.`STORY`, t21.`TITLE` AS `STORYNAME`, t1.`STORYVERSION`, t1.`SUBSTATUS`, t1.`TITLE`, (SELECT COUNT(1) FROM zt_bug WHERE `case` = t1.`ID` ) AS `TOBUGCNT`, t1.`TYPE`, t1.`VERSION` FROM `zt_case` t1  LEFT JOIN zt_module t11 ON t1.MODULE = t11.ID  LEFT JOIN zt_story t21 ON t1.STORY = t21.ID  LEFT JOIN zt_product t31 ON t1.PRODUCT = t31.ID  
					 WHERE 	NOT(EXISTS(SELECT * FROM zt_testrun t41   WHERE   t1.ID = t41.`CASE`  AND  ( t41.`task` = #{srf.webcontext.task} ) ))
						 AND t1.DELETED = '0'
			]]>
    </sql>
    <!--数据查询[View]-->
    <sql id="View" databaseId="mysql">
		<![CDATA[ SELECT t1.`AUTO`, t1.`BRANCH`, t1.`COLOR`, t1.`DELETED`, t1.`FRAME`, t1.`FREQUENCY`, t1.`FROMBUG`, t1.`FROMCASEID`, t1.`FROMCASEVERSION`, t1.`HOWRUN`, t1.`ID`, t1.`KEYWORDS`, t1.`LASTEDITEDBY`, t1.`LASTEDITEDDATE`, t1.`LASTRUNDATE`, t1.`LASTRUNNER`, t1.`LASTRUNRESULT`, t1.`LIB`, t41.`NAME` AS `LIBNAME`, t1.`LINKCASE`, t1.`MODULE`, t11.`NAME` AS `MODULENAME`, t1.`OPENEDBY`, t1.`OPENEDDATE`, t1.`ORDER`, t1.`PATH`, t1.`PRECONDITION`, t1.`PRI`, t1.`PRODUCT`, t31.`NAME` AS `PRODUCTNAME`, (SELECT COUNT(1) FROM zt_testresult WHERE `case` = t1.`ID` ) AS `RESULTCNT`, (SELECT COUNT(1) FROM zt_testresult WHERE `case` = t1.`ID`  and caseResult in('fail','blocked') ) AS `RESULTFALICNT`, t1.`REVIEWEDBY`, t1.`REVIEWEDDATE`, t1.`SCRIPTEDBY`, t1.`SCRIPTEDDATE`, t1.`SCRIPTLOCATION`, t1.`SCRIPTSTATUS`, t1.`STAGE`, t1.`STATUS`, (case when t1.storyVersion < t21.version and t21.`status` <> 'changed' then 'storychange'  else t1.`status` end ) AS `STATUS1`, (SELECT COUNT(1) FROM zt_casestep WHERE `case` = t1.`ID` AND version = t1.`VERSION` ) AS `STEPCNT`, t1.`STORY`, t21.`TITLE` AS `STORYNAME`, t1.`STORYVERSION`, t1.`SUBSTATUS`, t1.`TITLE`, (SELECT COUNT(1) FROM zt_bug WHERE `case` = t1.`ID` ) AS `TOBUGCNT`, t1.`TYPE`, t1.`VERSION` FROM `zt_case` t1  LEFT JOIN zt_module t11 ON t1.MODULE = t11.ID  LEFT JOIN zt_story t21 ON t1.STORY = t21.ID  LEFT JOIN zt_product t31 ON t1.PRODUCT = t31.ID  LEFT JOIN zt_testsuite t41 ON t1.LIB = t41.ID  
					 WHERE 	t1.DELETED = '0'
			]]>
    </sql>
</mapper>

