<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper	namespace="cn.ibizlab.pms.core.zentao.mapper.BugMapper">
	
	<!-- 无视图模式 -->
	<sql id="select" databaseId="mysql">
        <![CDATA[ SELECT t1.`ACTIVATEDCOUNT`, t1.`ACTIVATEDDATE`, t1.`ASSIGNEDDATE`, t1.`ASSIGNEDTO`, t1.`BRANCH`, t21.`NAME` AS `BRANCHNAME`, t1.`BROWSER`, t1.`BUGSN`, t1.`CASE`, t41.`TITLE` AS `CASENAME`, t1.`CASEVERSION`, t1.`CLOSEDBY`, t1.`CLOSEDDATE`, t1.`COLOR`, t1.`CONFIRMED`, t1.`DEADLINE`, (case when t1.deadline is null or t1.deadline = '0000-00-00' or t1.deadline = '1970-01-01' then '' when t1.`status` ='active' and t1.deadline <DATE_FORMAT(now(),'%y-%m-%d')  then CONCAT_WS('','延期',TIMESTAMPDIFF(DAY, t1.deadline, now()),'天') else '' end) AS `DELAY`, ( CASE WHEN t1.deadline IS NULL  OR t1.deadline = '0000-00-00'  OR t1.deadline = '1970-01-01' THEN ''  WHEN t1.`status` = 'resolved'  AND t1.deadline < DATE_FORMAT( t1.resolvedDate, '%y-%m-%d' ) THEN CONCAT_WS( '', '延期', TIMESTAMPDIFF( DAY, t1.deadline, t1.resolvedDate ), '天' ) ELSE ''  END ) AS `DELAYRESOLVE`, t1.`DELETED`, t1.`DEPT`, t1.`DEPTNAME`, t1.`DUPLICATEBUG`, t1.`ENTRY`, t1.`FOUND`, t1.`HARDWARE`, t1.`ID`, 0 AS `ISFAVORITES`, t1.`KEYWORDS`, t1.`LASTEDITEDBY`, t1.`LASTEDITEDDATE`, t1.`LINES`, t1.`LINKBUG`, t1.`MAILTO`, '' AS `MAILTOPK`, t1.`MODULE`, t71.`NAME` AS `MODULENAME`, (case when t1.module = '0' then '/' else (SELECT GROUP_CONCAT( tt.NAME SEPARATOR '>' )  FROM zt_module tt WHERE FIND_IN_SET( tt.id, t71.path ) AND tt.type = 'story'  GROUP BY tt.root limit 0,1) end) AS `MODULENAME1`, t1.`OPENEDBUILD`, t1.`OPENEDBY`, t1.`OPENEDDATE`, t1.`ORG`, t1.`ORGNAME`, t1.`OS`, (case when t1.DEADLINE = '0000-00-00' then 0 else datediff(t1.deadline, now() ) end) AS `OVERDUEBUGS`, t1.`PLAN`, t1.`PRI`, t1.`PRODUCT`, t11.`name` AS `PRODUCTNAME`, t1.`PROJECT`, t51.`NAME` AS `PROJECTNAME`, t1.`REPO`, t1.`REPOTYPE`, t1.`RESOLUTION`, t1.`RESOLVEDBUILD`, t1.`RESOLVEDBY`, t1.`RESOLVEDDATE`, t1.`RESULT`, t1.`SEVERITY`, t1.`STATUS`, t1.`STEPS`, t1.`STORY`, t61.`TITLE` AS `STORYNAME`, t1.`STORYVERSION`, t1.`SUBSTATUS`, t1.`TASK`, t31.`NAME` AS `TASKNAME`, t1.`TESTTASK`, t1.`TITLE`, t1.`TOSTORY`, t1.`TOTASK`, t1.`TYPE`, t1.`V1`, t1.`V2` FROM `zt_bug` t1  LEFT JOIN `zt_product` t11 ON t1.`PRODUCT` = t11.`id`  LEFT JOIN `zt_branch` t21 ON t1.`BRANCH` = t21.`ID`  LEFT JOIN `zt_task` t31 ON t1.`TASK` = t31.`ID`  LEFT JOIN `zt_case` t41 ON t1.`CASE` = t41.`ID`  LEFT JOIN `zt_project` t51 ON t1.`PROJECT` = t51.`ID`  LEFT JOIN `zt_story` t61 ON t1.`STORY` = t61.`ID`  LEFT JOIN `zt_module` t71 ON t1.`MODULE` = t71.`ID`   ]]>
    </sql>

	
	<!-- 搜索条件 -->
	<sql id="searchMode" databaseId="mysql">
		<if test="srf.n_severity_eq != null ">
			<![CDATA[ AND  t1.`SEVERITY` = #{srf.n_severity_eq,jdbcType=INTEGER} ]]>
        </if>
		<if test="srf.n_overduebugs_lt != null ">
			<![CDATA[ AND  (case when t1.DEADLINE = '0000-00-00' then 0 else datediff(t1.deadline, now() ) end) < #{srf.n_overduebugs_lt,jdbcType=INTEGER} ]]>
        </if>
		<if test="srf.n_assignedto_eq != null ">
			<![CDATA[ AND  t1.`ASSIGNEDTO` = #{srf.n_assignedto_eq,jdbcType=VARCHAR} ]]>
        </if>
		<if test="srf.n_resolution_eq != null ">
			<![CDATA[ AND  t1.`RESOLUTION` = #{srf.n_resolution_eq,jdbcType=VARCHAR} ]]>
        </if>
		<if test="srf.n_isfavorites_eq != null ">
			<![CDATA[ AND  0 = #{srf.n_isfavorites_eq,jdbcType=VARCHAR} ]]>
        </if>
		<if test="srf.n_closedby_eq != null ">
			<![CDATA[ AND  t1.`CLOSEDBY` = #{srf.n_closedby_eq,jdbcType=VARCHAR} ]]>
        </if>
		<if test="srf.n_browser_eq != null ">
			<![CDATA[ AND  t1.`BROWSER` = #{srf.n_browser_eq,jdbcType=VARCHAR} ]]>
        </if>
		<if test="srf.n_confirmed_eq != null ">
			<![CDATA[ AND  t1.`CONFIRMED` = #{srf.n_confirmed_eq,jdbcType=INTEGER} ]]>
        </if>
		<if test="srf.n_openedby_eq != null ">
			<![CDATA[ AND  t1.`OPENEDBY` = #{srf.n_openedby_eq,jdbcType=VARCHAR} ]]>
        </if>
		<if test="srf.n_assigneddate_gtandeq != null ">
			<![CDATA[ AND  t1.`ASSIGNEDDATE` >= #{srf.n_assigneddate_gtandeq,jdbcType=TIMESTAMP} ]]>
        </if>
		<if test="srf.n_deadline_gtandeq != null ">
			<![CDATA[ AND  t1.`DEADLINE` >= #{srf.n_deadline_gtandeq,jdbcType=TIMESTAMP} ]]>
        </if>
		<if test="srf.n_deadline_lt != null ">
			<![CDATA[ AND  t1.`DEADLINE` < #{srf.n_deadline_lt,jdbcType=TIMESTAMP} ]]>
        </if>
		<if test="srf.n_deadline_ltandeq != null ">
			<![CDATA[ AND  t1.`DEADLINE` <= #{srf.n_deadline_ltandeq,jdbcType=TIMESTAMP} ]]>
        </if>
		<if test="srf.n_color_eq != null ">
			<![CDATA[ AND  t1.`COLOR` = #{srf.n_color_eq,jdbcType=VARCHAR} ]]>
        </if>
		<if test="srf.n_resolveddate_ltandeq != null ">
			<![CDATA[ AND  t1.`RESOLVEDDATE` <= #{srf.n_resolveddate_ltandeq,jdbcType=TIMESTAMP} ]]>
        </if>
		<if test="srf.n_type_eq != null ">
			<![CDATA[ AND  t1.`TYPE` = #{srf.n_type_eq,jdbcType=VARCHAR} ]]>
        </if>
		<if test="srf.n_status_eq != null ">
			<![CDATA[ AND  t1.`STATUS` = #{srf.n_status_eq,jdbcType=VARCHAR} ]]>
        </if>
		<if test="srf.n_status_noteq != null ">
			<![CDATA[ AND  t1.`STATUS` <> #{srf.n_status_noteq,jdbcType=VARCHAR} ]]>
        </if>
		<if test="srf.n_id_eq != null ">
			<![CDATA[ AND  t1.`ID` = #{srf.n_id_eq,jdbcType=BIGINT} ]]>
        </if>
		<if test="srf.n_resolvedby_eq != null ">
			<![CDATA[ AND  t1.`RESOLVEDBY` = #{srf.n_resolvedby_eq,jdbcType=VARCHAR} ]]>
        </if>
		<if test="srf.n_resolvedbuild_eq != null ">
			<![CDATA[ AND  t1.`RESOLVEDBUILD` = #{srf.n_resolvedbuild_eq,jdbcType=VARCHAR} ]]>
        </if>
		<if test="srf.n_pri_eq != null ">
			<![CDATA[ AND  t1.`PRI` = #{srf.n_pri_eq,jdbcType=INTEGER} ]]>
        </if>
		<if test="srf.n_os_eq != null ">
			<![CDATA[ AND  t1.`OS` = #{srf.n_os_eq,jdbcType=VARCHAR} ]]>
        </if>
		<if test="srf.n_lasteditedby_eq != null ">
			<![CDATA[ AND  t1.`LASTEDITEDBY` = #{srf.n_lasteditedby_eq,jdbcType=VARCHAR} ]]>
        </if>
		<if test="srf.n_title_like != null ">
            <bind name="bind_n_title_like" value="'%' + srf.n_title_like + '%'" />
            <![CDATA[ AND  t1.`TITLE` like #{bind_n_title_like,jdbcType=VARCHAR} ]]>
        </if>
		<if test="srf.n_productname_eq != null ">
			<![CDATA[ AND  t11.`NAME` = #{srf.n_productname_eq,jdbcType=VARCHAR} ]]>
        </if>
		<if test="srf.n_productname_like != null ">
            <bind name="bind_n_productname_like" value="'%' + srf.n_productname_like + '%'" />
            <![CDATA[ AND  t11.`NAME` like #{bind_n_productname_like,jdbcType=VARCHAR} ]]>
        </if>
		<if test="srf.n_branchname_eq != null ">
			<![CDATA[ AND  t61.`NAME` = #{srf.n_branchname_eq,jdbcType=VARCHAR} ]]>
        </if>
		<if test="srf.n_branchname_like != null ">
            <bind name="bind_n_branchname_like" value="'%' + srf.n_branchname_like + '%'" />
            <![CDATA[ AND  t61.`NAME` like #{bind_n_branchname_like,jdbcType=VARCHAR} ]]>
        </if>
		<if test="srf.n_taskname_eq != null ">
			<![CDATA[ AND  t41.`NAME` = #{srf.n_taskname_eq,jdbcType=VARCHAR} ]]>
        </if>
		<if test="srf.n_taskname_like != null ">
            <bind name="bind_n_taskname_like" value="'%' + srf.n_taskname_like + '%'" />
            <![CDATA[ AND  t41.`NAME` like #{bind_n_taskname_like,jdbcType=VARCHAR} ]]>
        </if>
		<if test="srf.n_projectname_eq != null ">
			<![CDATA[ AND  t21.`NAME` = #{srf.n_projectname_eq,jdbcType=VARCHAR} ]]>
        </if>
		<if test="srf.n_projectname_like != null ">
            <bind name="bind_n_projectname_like" value="'%' + srf.n_projectname_like + '%'" />
            <![CDATA[ AND  t21.`NAME` like #{bind_n_projectname_like,jdbcType=VARCHAR} ]]>
        </if>
		<if test="srf.n_storyname_eq != null ">
			<![CDATA[ AND  t31.`TITLE` = #{srf.n_storyname_eq,jdbcType=VARCHAR} ]]>
        </if>
		<if test="srf.n_storyname_like != null ">
            <bind name="bind_n_storyname_like" value="'%' + srf.n_storyname_like + '%'" />
            <![CDATA[ AND  t31.`TITLE` like #{bind_n_storyname_like,jdbcType=VARCHAR} ]]>
        </if>
		<if test="srf.n_modulename_eq != null ">
			<![CDATA[ AND  t51.`NAME` = #{srf.n_modulename_eq,jdbcType=VARCHAR} ]]>
        </if>
		<if test="srf.n_modulename_like != null ">
            <bind name="bind_n_modulename_like" value="'%' + srf.n_modulename_like + '%'" />
            <![CDATA[ AND  t51.`NAME` like #{bind_n_modulename_like,jdbcType=VARCHAR} ]]>
        </if>
		<if test="srf.n_tostory_eq != null ">
			<![CDATA[ AND  t1.`TOSTORY` = #{srf.n_tostory_eq,jdbcType=BIGINT} ]]>
        </if>
		<if test="srf.n_entry_eq != null ">
			<![CDATA[ AND  t1.`ENTRY` = #{srf.n_entry_eq,jdbcType=BIGINT} ]]>
        </if>
		<if test="srf.n_product_eq != null ">
			<![CDATA[ AND  t1.`PRODUCT` = #{srf.n_product_eq,jdbcType=BIGINT} ]]>
        </if>
		<if test="srf.n_totask_eq != null ">
			<![CDATA[ AND  t1.`TOTASK` = #{srf.n_totask_eq,jdbcType=BIGINT} ]]>
        </if>
		<if test="srf.n_plan_eq != null ">
			<![CDATA[ AND  t1.`PLAN` = #{srf.n_plan_eq,jdbcType=BIGINT} ]]>
        </if>
		<if test="srf.n_module_eq != null ">
			<![CDATA[ AND  t1.`MODULE` = #{srf.n_module_eq,jdbcType=BIGINT} ]]>
        </if>
		<if test="srf.n_branch_eq != null ">
			<![CDATA[ AND  t1.`BRANCH` = #{srf.n_branch_eq,jdbcType=BIGINT} ]]>
        </if>
		<if test="srf.n_duplicatebug_eq != null ">
			<![CDATA[ AND  t1.`DUPLICATEBUG` = #{srf.n_duplicatebug_eq,jdbcType=BIGINT} ]]>
        </if>
		<if test="srf.n_repo_eq != null ">
			<![CDATA[ AND  t1.`REPO` = #{srf.n_repo_eq,jdbcType=BIGINT} ]]>
        </if>
		<if test="srf.n_story_eq != null ">
			<![CDATA[ AND  t1.`STORY` = #{srf.n_story_eq,jdbcType=BIGINT} ]]>
        </if>
		<if test="srf.n_case_eq != null ">
			<![CDATA[ AND  t1.`CASE` = #{srf.n_case_eq,jdbcType=BIGINT} ]]>
        </if>
		<if test="srf.n_project_eq != null ">
			<![CDATA[ AND  t1.`PROJECT` = #{srf.n_project_eq,jdbcType=BIGINT} ]]>
        </if>
		<if test="srf.n_task_eq != null ">
			<![CDATA[ AND  t1.`TASK` = #{srf.n_task_eq,jdbcType=BIGINT} ]]>
        </if>
		<if test="srf.n_testtask_eq != null ">
			<![CDATA[ AND  t1.`TESTTASK` = #{srf.n_testtask_eq,jdbcType=BIGINT} ]]>
        </if>
		<if test="ew!=null and ew.sqlSegment!=null and ew.sqlSegment!=''">
		AND ${ew.sqlSegment}
		</if>
	</sql>


    <!--该方法用于重写mybatis中selectById方法，以实现查询逻辑属性-->
	<select id="selectById"  resultMap="BugResultMap" databaseId="mysql">
        <include refid="select" />
		<trim prefix="where" prefixOverrides="and">
			<if test="true">
			<![CDATA[ AND t1.DELETED = '0' ]]>
			</if>
			<![CDATA[ AND T1.ID = #{id} ]]>
		</trim>
    </select>


    <!--通过mybatis将查询结果注入到entity中,通过配置autoMapping="true"由mybatis自动处理映射关系 -->
    <resultMap id="BugResultMap" type="cn.ibizlab.pms.core.zentao.domain.Bug" autoMapping="true">
		<id property="id" column="id" /><!--主键字段映射-->
		<result property="tostory" column="tostory" />
		<result property="entry" column="entry" />
		<result property="product" column="product" />
		<result property="totask" column="totask" />
		<result property="plan" column="plan" />
		<result property="module" column="module" />
		<result property="branch" column="branch" />
		<result property="duplicatebug" column="duplicatebug" />
		<result property="repo" column="repo" />
		<result property="story" column="story" />
		<result property="ibizcase" column="case" />
		<result property="project" column="project" />
		<result property="task" column="task" />
		<result property="testtask" column="testtask" />
            
		
		<!--通过mybatis自动注入关系属性[主实体]，fetchType="lazy"为懒加载配置 -->
		<association property="ztrranch" javaType="cn.ibizlab.pms.core.zentao.domain.Branch" column="branch" select="cn.ibizlab.pms.core.zentao.mapper.BranchMapper.selectById" fetchType="lazy"></association>
		<!--通过mybatis自动注入关系属性[主实体]，fetchType="lazy"为懒加载配置 -->
		<association property="ztduplicatebug" javaType="cn.ibizlab.pms.core.zentao.domain.Bug" column="duplicatebug" select="cn.ibizlab.pms.core.zentao.mapper.BugMapper.selectById" fetchType="lazy"></association>
		<!--通过mybatis自动注入关系属性[主实体]，fetchType="lazy"为懒加载配置 -->
		<association property="ztcase" javaType="cn.ibizlab.pms.core.zentao.domain.Case" column="case" select="cn.ibizlab.pms.core.zentao.mapper.CaseMapper.selectById" fetchType="lazy"></association>
		<!--通过mybatis自动注入关系属性[主实体]，fetchType="lazy"为懒加载配置 -->
		<association property="ztentry" javaType="cn.ibizlab.pms.core.zentao.domain.Entry" column="entry" select="cn.ibizlab.pms.core.zentao.mapper.EntryMapper.selectById" fetchType="lazy"></association>
		<!--通过mybatis自动注入关系属性[主实体]，fetchType="lazy"为懒加载配置 -->
		<association property="ztmodule" javaType="cn.ibizlab.pms.core.zentao.domain.Module" column="module" select="cn.ibizlab.pms.core.zentao.mapper.ModuleMapper.selectById" fetchType="lazy"></association>
		<!--通过mybatis自动注入关系属性[主实体]，fetchType="lazy"为懒加载配置 -->
		<association property="ztproductplan" javaType="cn.ibizlab.pms.core.zentao.domain.ProductPlan" column="plan" select="cn.ibizlab.pms.core.zentao.mapper.ProductPlanMapper.selectById" fetchType="lazy"></association>
		<!--通过mybatis自动注入关系属性[主实体]，fetchType="lazy"为懒加载配置 -->
		<association property="ztproduct" javaType="cn.ibizlab.pms.core.zentao.domain.Product" column="product" select="cn.ibizlab.pms.core.zentao.mapper.ProductMapper.selectById" fetchType="lazy"></association>
		<!--通过mybatis自动注入关系属性[主实体]，fetchType="lazy"为懒加载配置 -->
		<association property="ztproject" javaType="cn.ibizlab.pms.core.zentao.domain.Project" column="project" select="cn.ibizlab.pms.core.zentao.mapper.ProjectMapper.selectById" fetchType="lazy"></association>
		<!--通过mybatis自动注入关系属性[主实体]，fetchType="lazy"为懒加载配置 -->
		<association property="ztrepo" javaType="cn.ibizlab.pms.core.zentao.domain.Repo" column="repo" select="cn.ibizlab.pms.core.zentao.mapper.RepoMapper.selectById" fetchType="lazy"></association>
		<!--通过mybatis自动注入关系属性[主实体]，fetchType="lazy"为懒加载配置 -->
		<association property="ztstory" javaType="cn.ibizlab.pms.core.zentao.domain.Story" column="story" select="cn.ibizlab.pms.core.zentao.mapper.StoryMapper.selectById" fetchType="lazy"></association>
		<!--通过mybatis自动注入关系属性[主实体]，fetchType="lazy"为懒加载配置 -->
		<association property="zttostory" javaType="cn.ibizlab.pms.core.zentao.domain.Story" column="tostory" select="cn.ibizlab.pms.core.zentao.mapper.StoryMapper.selectById" fetchType="lazy"></association>
		<!--通过mybatis自动注入关系属性[主实体]，fetchType="lazy"为懒加载配置 -->
		<association property="zttask" javaType="cn.ibizlab.pms.core.zentao.domain.Task" column="task" select="cn.ibizlab.pms.core.zentao.mapper.TaskMapper.selectById" fetchType="lazy"></association>
		<!--通过mybatis自动注入关系属性[主实体]，fetchType="lazy"为懒加载配置 -->
		<association property="zttotask" javaType="cn.ibizlab.pms.core.zentao.domain.Task" column="totask" select="cn.ibizlab.pms.core.zentao.mapper.TaskMapper.selectById" fetchType="lazy"></association>
		<!--通过mybatis自动注入关系属性[主实体]，fetchType="lazy"为懒加载配置 -->
		<association property="zttesttask" javaType="cn.ibizlab.pms.core.zentao.domain.TestTask" column="testtask" select="cn.ibizlab.pms.core.zentao.mapper.TestTaskMapper.selectById" fetchType="lazy"></association>
    </resultMap>

	<!--关系实体暴露select方法供主实体通过外键查询关系实体数据[实体关系名称:DER1N_ZT_BUG_ZT_BRANCH_BRANCH] -->
	 <select id="selectByBranch" resultMap="BugResultMap"  databaseId="mysql">
        <include refid="select" />
		<trim prefix="where" prefixOverrides="and">
			<if test="true">
			<![CDATA[ AND t1.DELETED = '0' ]]>
			</if>
			<![CDATA[ AND t1.`BRANCH`=#{id} ]]>
		</trim>
     </select>
	<!--关系实体暴露select方法供主实体通过外键查询关系实体数据[实体关系名称:DER1N_ZT_BUG_ZT_BUG_DUPLICATEBUG] -->
	 <select id="selectByDuplicatebug" resultMap="BugResultMap"  databaseId="mysql">
        <include refid="select" />
		<trim prefix="where" prefixOverrides="and">
			<if test="true">
			<![CDATA[ AND t1.DELETED = '0' ]]>
			</if>
			<![CDATA[ AND t1.`DUPLICATEBUG`=#{id} ]]>
		</trim>
     </select>
	<!--关系实体暴露select方法供主实体通过外键查询关系实体数据[实体关系名称:DER1N_ZT_BUG_ZT_CASE_CASEID] -->
	 <select id="selectByIbizcase" resultMap="BugResultMap"  databaseId="mysql">
        <include refid="select" />
		<trim prefix="where" prefixOverrides="and">
			<if test="true">
			<![CDATA[ AND t1.DELETED = '0' ]]>
			</if>
			<![CDATA[ AND t1.`CASE`=#{id} ]]>
		</trim>
     </select>
	<!--关系实体暴露select方法供主实体通过外键查询关系实体数据[实体关系名称:DER1N_ZT_BUG_ZT_ENTRY_ENTRYID] -->
	 <select id="selectByEntry" resultMap="BugResultMap"  databaseId="mysql">
        <include refid="select" />
		<trim prefix="where" prefixOverrides="and">
			<if test="true">
			<![CDATA[ AND t1.DELETED = '0' ]]>
			</if>
			<![CDATA[ AND t1.`ENTRY`=#{id} ]]>
		</trim>
     </select>
	<!--关系实体暴露select方法供主实体通过外键查询关系实体数据[实体关系名称:DER1N_ZT_BUG_ZT_MODULE_MODULE] -->
	 <select id="selectByModule" resultMap="BugResultMap"  databaseId="mysql">
        <include refid="select" />
		<trim prefix="where" prefixOverrides="and">
			<if test="true">
			<![CDATA[ AND t1.DELETED = '0' ]]>
			</if>
			<![CDATA[ AND t1.`MODULE`=#{id} ]]>
		</trim>
     </select>
	<!--关系实体暴露select方法供主实体通过外键查询关系实体数据[实体关系名称:DER1N_ZT_BUG_ZT_PRODUCTPLAN_PLAN] -->
	 <select id="selectByPlan" resultMap="BugResultMap"  databaseId="mysql">
        <include refid="select" />
		<trim prefix="where" prefixOverrides="and">
			<if test="true">
			<![CDATA[ AND t1.DELETED = '0' ]]>
			</if>
			<![CDATA[ AND t1.`PLAN`=#{id} ]]>
		</trim>
     </select>
	<!--关系实体暴露select方法供主实体通过外键查询关系实体数据[实体关系名称:DER1N_ZT_BUG_ZT_PRODUCT_PRODUCT] -->
	 <select id="selectByProduct" resultMap="BugResultMap"  databaseId="mysql">
        <include refid="select" />
		<trim prefix="where" prefixOverrides="and">
			<if test="true">
			<![CDATA[ AND t1.DELETED = '0' ]]>
			</if>
			<![CDATA[ AND t1.`PRODUCT`=#{id} ]]>
		</trim>
     </select>
	<!--关系实体暴露select方法供主实体通过外键查询关系实体数据[实体关系名称:DER1N_ZT_BUG_ZT_PROJECT_PROJECT] -->
	 <select id="selectByProject" resultMap="BugResultMap"  databaseId="mysql">
        <include refid="select" />
		<trim prefix="where" prefixOverrides="and">
			<if test="true">
			<![CDATA[ AND t1.DELETED = '0' ]]>
			</if>
			<![CDATA[ AND t1.`PROJECT`=#{id} ]]>
		</trim>
     </select>
	<!--关系实体暴露select方法供主实体通过外键查询关系实体数据[实体关系名称:DER1N_ZT_BUG_ZT_REPO_REPO] -->
	 <select id="selectByRepo" resultMap="BugResultMap"  databaseId="mysql">
        <include refid="select" />
		<trim prefix="where" prefixOverrides="and">
			<if test="true">
			<![CDATA[ AND t1.DELETED = '0' ]]>
			</if>
			<![CDATA[ AND t1.`REPO`=#{id} ]]>
		</trim>
     </select>
	<!--关系实体暴露select方法供主实体通过外键查询关系实体数据[实体关系名称:DER1N_ZT_BUG_ZT_STORY_STORY] -->
	 <select id="selectByStory" resultMap="BugResultMap"  databaseId="mysql">
        <include refid="select" />
		<trim prefix="where" prefixOverrides="and">
			<if test="true">
			<![CDATA[ AND t1.DELETED = '0' ]]>
			</if>
			<![CDATA[ AND t1.`STORY`=#{id} ]]>
		</trim>
     </select>
	<!--关系实体暴露select方法供主实体通过外键查询关系实体数据[实体关系名称:DER1N_ZT_BUG_ZT_STORY_TOSTORY] -->
	 <select id="selectByTostory" resultMap="BugResultMap"  databaseId="mysql">
        <include refid="select" />
		<trim prefix="where" prefixOverrides="and">
			<if test="true">
			<![CDATA[ AND t1.DELETED = '0' ]]>
			</if>
			<![CDATA[ AND t1.`TOSTORY`=#{id} ]]>
		</trim>
     </select>
	<!--关系实体暴露select方法供主实体通过外键查询关系实体数据[实体关系名称:DER1N_ZT_BUG_ZT_TASK_TASK] -->
	 <select id="selectByTask" resultMap="BugResultMap"  databaseId="mysql">
        <include refid="select" />
		<trim prefix="where" prefixOverrides="and">
			<if test="true">
			<![CDATA[ AND t1.DELETED = '0' ]]>
			</if>
			<![CDATA[ AND t1.`TASK`=#{id} ]]>
		</trim>
     </select>
	<!--关系实体暴露select方法供主实体通过外键查询关系实体数据[实体关系名称:DER1N_ZT_BUG_ZT_TASK_TOTASK] -->
	 <select id="selectByTotask" resultMap="BugResultMap"  databaseId="mysql">
        <include refid="select" />
		<trim prefix="where" prefixOverrides="and">
			<if test="true">
			<![CDATA[ AND t1.DELETED = '0' ]]>
			</if>
			<![CDATA[ AND t1.`TOTASK`=#{id} ]]>
		</trim>
     </select>
	<!--关系实体暴露select方法供主实体通过外键查询关系实体数据[实体关系名称:DER1N_ZT_BUG_ZT_TESTTASK_TESTTASK] -->
	 <select id="selectByTesttask" resultMap="BugResultMap"  databaseId="mysql">
        <include refid="select" />
		<trim prefix="where" prefixOverrides="and">
			<if test="true">
			<![CDATA[ AND t1.DELETED = '0' ]]>
			</if>
			<![CDATA[ AND t1.`TESTTASK`=#{id} ]]>
		</trim>
     </select>

    <!--数据集合[AssignedToMyBug]-->
	 <select id="searchAssignedToMyBug"  parameterType="cn.ibizlab.pms.core.zentao.filter.BugSearchContext"  resultMap="BugResultMap">
         select t1.* from (
                <include refid="AssignedToMyBug" />
         )t1
     </select>

    <!--数据集合[AssignedToMyBugPc]-->
	 <select id="searchAssignedToMyBugPc"  parameterType="cn.ibizlab.pms.core.zentao.filter.BugSearchContext"  resultMap="BugResultMap">
         select t1.* from (
                <include refid="AssignedToMyBugPc" />
         )t1
     </select>

    <!--数据集合[BugsByBuild]-->
	 <select id="searchBugsByBuild"  parameterType="cn.ibizlab.pms.core.zentao.filter.BugSearchContext"  resultMap="BugResultMap">
         select t1.* from (
                <include refid="SelectBugByBuild" />
         )t1
     </select>

    <!--数据集合[BuildBugs]-->
	 <select id="searchBuildBugs"  parameterType="cn.ibizlab.pms.core.zentao.filter.BugSearchContext"  resultMap="BugResultMap">
         select t1.* from (
                <include refid="BuildBugs" />
         )t1
     </select>

    <!--数据集合[BuildLinkResolvedBugs]-->
	 <select id="searchBuildLinkResolvedBugs"  parameterType="cn.ibizlab.pms.core.zentao.filter.BugSearchContext"  resultMap="BugResultMap">
	 	select * from (
         select t1.* from (
                <include refid="BuildLinkResolvedBugs" />
         )t1
		 )t1
     </select>

    <!--数据集合[BuildOpenBugs]-->
	 <select id="searchBuildOpenBugs"  parameterType="cn.ibizlab.pms.core.zentao.filter.BugSearchContext"  resultMap="BugResultMap">
         select t1.* from (
                <include refid="BuildOpenBugs" />
         )t1
     </select>

    <!--数据集合[BuildProduceBug]-->
	 <select id="searchBuildProduceBug"  parameterType="cn.ibizlab.pms.core.zentao.filter.BugSearchContext"  resultMap="BugResultMap">
         select t1.* from (
                <include refid="BuildProduceBug" />
         )t1
     </select>

    <!--数据集合[BuildProduceBugModule]-->
	 <select id="searchBuildProduceBugModule"  parameterType="cn.ibizlab.pms.core.zentao.filter.BugSearchContext"  resultMap="BugResultMap">
         select t1.* from (
                <include refid="BuildProduceBugModule" />
         )t1
     </select>

    <!--数据集合[BuildProduceBugModule_Project]-->
	 <select id="searchBuildProduceBugModule_Project"  parameterType="cn.ibizlab.pms.core.zentao.filter.BugSearchContext"  resultMap="BugResultMap">
         select t1.* from (
                <include refid="BuildProduceBugModule_Project" />
         )t1
     </select>

    <!--数据集合[BuildProduceBugOpenedBy]-->
	 <select id="searchBuildProduceBugOpenedBy"  parameterType="cn.ibizlab.pms.core.zentao.filter.BugSearchContext"  resultMap="BugResultMap">
         select t1.* from (
                <include refid="BuildProduceBugOpenedBy" />
         )t1
     </select>

    <!--数据集合[BuildProduceBugOpenedBy_Project]-->
	 <select id="searchBuildProduceBugOpenedBy_Project"  parameterType="cn.ibizlab.pms.core.zentao.filter.BugSearchContext"  resultMap="BugResultMap">
         select t1.* from (
                <include refid="BuildProduceBugOpenedBy_Project" />
         )t1
     </select>

    <!--数据集合[BuildProduceBugRES]-->
	 <select id="searchBuildProduceBugRES"  parameterType="cn.ibizlab.pms.core.zentao.filter.BugSearchContext"  resultMap="BugResultMap">
         select t1.* from (
                <include refid="BuildProduceBugRES" />
         )t1
     </select>

    <!--数据集合[BuildProduceBugRESOLVEDBY]-->
	 <select id="searchBuildProduceBugRESOLVEDBY"  parameterType="cn.ibizlab.pms.core.zentao.filter.BugSearchContext"  resultMap="BugResultMap">
         select t1.* from (
                <include refid="BuildProduceBugRESOLVEDBY" />
         )t1
     </select>

    <!--数据集合[BuildProduceBugRESOLVEDBY_Project]-->
	 <select id="searchBuildProduceBugRESOLVEDBY_Project"  parameterType="cn.ibizlab.pms.core.zentao.filter.BugSearchContext"  resultMap="BugResultMap">
         select t1.* from (
                <include refid="BuildProduceBugRESOLVEDBY_Project" />
         )t1
     </select>

    <!--数据集合[BuildProduceBugResolution_Project]-->
	 <select id="searchBuildProduceBugResolution_Project"  parameterType="cn.ibizlab.pms.core.zentao.filter.BugSearchContext"  resultMap="BugResultMap">
         select t1.* from (
                <include refid="BuildProduceBugResolution_Project" />
         )t1
     </select>

    <!--数据集合[BuildProduceBugSeverity_Project]-->
	 <select id="searchBuildProduceBugSeverity_Project"  parameterType="cn.ibizlab.pms.core.zentao.filter.BugSearchContext"  resultMap="BugResultMap">
         select t1.* from (
                <include refid="BuildProduceBugSeverity_Project" />
         )t1
     </select>

    <!--数据集合[BuildProduceBugStatus_Project]-->
	 <select id="searchBuildProduceBugStatus_Project"  parameterType="cn.ibizlab.pms.core.zentao.filter.BugSearchContext"  resultMap="BugResultMap">
         select t1.* from (
                <include refid="BuildProduceBugStatus_Project" />
         )t1
     </select>

    <!--数据集合[BuildProduceBugType_Project]-->
	 <select id="searchBuildProduceBugType_Project"  parameterType="cn.ibizlab.pms.core.zentao.filter.BugSearchContext"  resultMap="BugResultMap">
         select t1.* from (
                <include refid="BuildProduceBugType_Project" />
         )t1
     </select>

    <!--数据集合[CurUserResolve]-->
	 <select id="searchCurUserResolve"  parameterType="cn.ibizlab.pms.core.zentao.filter.BugSearchContext"  resultMap="BugResultMap">
         select t1.* from (
                <include refid="CurUserResolve" />
         )t1
     </select>

    <!--数据集合[Default]-->
	 <select id="searchDefault"  parameterType="cn.ibizlab.pms.core.zentao.filter.BugSearchContext"  resultMap="BugResultMap">
         select t1.* from (
                <include refid="Default" />
         )t1
     </select>

    <!--数据集合[ESBulk]-->
	 <select id="searchESBulk"  parameterType="cn.ibizlab.pms.core.zentao.filter.BugSearchContext"  resultMap="BugResultMap">
         select t1.* from (
                <include refid="ESBulk" />
         )t1
     </select>

    <!--数据集合[MyAgentBug]-->
	 <select id="searchMyAgentBug"  parameterType="cn.ibizlab.pms.core.zentao.filter.BugSearchContext"  resultMap="BugResultMap">
         select t1.* from (
                <include refid="MyAgentBug" />
         )t1
     </select>

    <!--数据集合[MyCurOpenedBug]-->
	 <select id="searchMyCurOpenedBug"  parameterType="cn.ibizlab.pms.core.zentao.filter.BugSearchContext"  resultMap="BugResultMap">
         select t1.* from (
                <include refid="MyCurOpenedBug" />
         )t1
     </select>

    <!--数据集合[MyFavorites]-->
	 <select id="searchMyFavorites"  parameterType="cn.ibizlab.pms.core.zentao.filter.BugSearchContext"  resultMap="BugResultMap">
         select t1.* from (
                <include refid="MyFavorites" />
         )t1
     </select>

    <!--数据集合[NotCurPlanLinkBug]-->
	 <select id="searchNotCurPlanLinkBug"  parameterType="cn.ibizlab.pms.core.zentao.filter.BugSearchContext"  resultMap="BugResultMap">
	 	select * from (
         select t1.* from (
                <include refid="NotCurPlanLinkBug" />
         )t1
		 )t1
     </select>

    <!--数据集合[ProjectBugs]-->
	 <select id="searchProjectBugs"  parameterType="cn.ibizlab.pms.core.zentao.filter.BugSearchContext"  resultMap="BugResultMap">
         select t1.* from (
                <include refid="SelectBugsByProject" />
         )t1
     </select>

    <!--数据集合[ReleaseBugs]-->
	 <select id="searchReleaseBugs"  parameterType="cn.ibizlab.pms.core.zentao.filter.BugSearchContext"  resultMap="BugResultMap">
         select t1.* from (
                <include refid="ReleaseBugs" />
         )t1
     </select>

    <!--数据集合[ReleaseLeftBugs]-->
	 <select id="searchReleaseLeftBugs"  parameterType="cn.ibizlab.pms.core.zentao.filter.BugSearchContext"  resultMap="BugResultMap">
         select t1.* from (
                <include refid="ReleaseLeftBugs" />
         )t1
     </select>

    <!--数据集合[ReleaseLinkableLeftBug]-->
	 <select id="searchReleaseLinkableLeftBug"  parameterType="cn.ibizlab.pms.core.zentao.filter.BugSearchContext"  resultMap="BugResultMap">
         select t1.* from (
                <include refid="ReleaseLinkableLeftBug" />
         )t1
     </select>

    <!--数据集合[ReleaseLinkableResolvedBug]-->
	 <select id="searchReleaseLinkableResolvedBug"  parameterType="cn.ibizlab.pms.core.zentao.filter.BugSearchContext"  resultMap="BugResultMap">
         select t1.* from (
                <include refid="ReleaseLinkableResolvedBug" />
         )t1
     </select>

    <!--数据集合[ReportBugs]-->
	 <select id="searchReportBugs"  parameterType="cn.ibizlab.pms.core.zentao.filter.BugSearchContext"  resultMap="BugResultMap">
         select t1.* from (
                <include refid="ReportBugs" />
         )t1
     </select>

    <!--数据集合[TaskRelatedBug]-->
	 <select id="searchTaskRelatedBug"  parameterType="cn.ibizlab.pms.core.zentao.filter.BugSearchContext"  resultMap="BugResultMap">
         select t1.* from (
                <include refid="TaskBug" />
         )t1
     </select>

    <!--数据查询[AssignedToMyBug]-->
    <sql id="AssignedToMyBug" databaseId="mysql">
		<![CDATA[ SELECT t1.`ACTIVATEDCOUNT`, t1.`ACTIVATEDDATE`, t1.`ASSIGNEDDATE`, t1.`ASSIGNEDTO`, t1.`BRANCH`, t61.`NAME` AS `BRANCHNAME`, t1.`BROWSER`, t1.`CASE`, t1.`CASEVERSION`, t1.`CLOSEDBY`, t1.`CLOSEDDATE`, t1.`COLOR`, t1.`CONFIRMED`, t1.`DEADLINE`, t1.`DELETED`, t1.`DUPLICATEBUG`, t1.`ENTRY`, t1.`FOUND`, t1.`HARDWARE`, t1.`ID`, (select (case when COUNT(t.IBZ_FAVORITESID) > 0 then 1 else 0 end ) as ISFAVORITES from T_IBZ_FAVORITES t where t.TYPE = 'bug' and t.ACCOUNT = #{srf.sessioncontext.srfloginname} and t.OBJECTID = t1.id) AS `ISFAVORITES`, t1.`KEYWORDS`, t1.`LASTEDITEDBY`, t1.`LASTEDITEDDATE`, t1.`LINES`, t1.`LINKBUG`, t1.`MAILTO`, t1.`MODULE`, t51.`NAME` AS `MODULENAME`, (SELECT GROUP_CONCAT( tt.NAME SEPARATOR '>' )  FROM zt_module tt WHERE FIND_IN_SET( tt.id, t51.path ) AND tt.type = 'story'  GROUP BY tt.root ) AS `MODULENAME1`, t1.`OPENEDBUILD`, t1.`OPENEDBY`, t1.`OPENEDDATE`, t1.`OS`, t1.`PLAN`, t1.`PRI`, t1.`PRODUCT`, t11.`NAME` AS `PRODUCTNAME`, t1.`PROJECT`, t21.`NAME` AS `PROJECTNAME`, t1.`REPO`, t1.`REPOTYPE`, t1.`RESOLUTION`, t1.`RESOLVEDBUILD`, t1.`RESOLVEDBY`, t1.`RESOLVEDDATE`, t1.`RESULT`, t1.`SEVERITY`, t1.`STATUS`, t1.`STORY`, t31.`TITLE` AS `STORYNAME`, t1.`STORYVERSION`, t1.`SUBSTATUS`, t1.`TASK`, t41.`NAME` AS `TASKNAME`, t1.`TESTTASK`, t1.`TITLE`, t1.`TOSTORY`, t1.`TOTASK`, t1.`TYPE`, t1.`V1`, t1.`V2`, (case when t1.DEADLINE = '0000-00-00' then 0 else datediff(t1.deadline, now() ) end) as overduebugs , 	t1.BUGSN FROM 	`zt_bug` t1 	LEFT JOIN zt_product t11 ON t1.PRODUCT = t11.productsn  	LEFT JOIN zt_project t21 ON t1.PROJECT = t21.PROJECTSN  	LEFT JOIN zt_story t31 ON t1.STORY = t31.STORYSN  	LEFT JOIN zt_task t41 ON t1.TASK = t41.TASKSN  	LEFT JOIN zt_module t51 ON t1.MODULE = t51.MODULESN  	LEFT JOIN zt_branch t61 ON t1.BRANCH = t61.BRANCHSN ]]>
		<trim prefix="where" prefixOverrides="and">
			<if test="true">
                <![CDATA[ AND t1.DELETED = '0' ]]>
            </if>
			<if test="true">
                <![CDATA[ AND ( t1.`ASSIGNEDTO` =  #{srf.sessioncontext.srfloginname} ) ]]>
            </if>
			<include refid="searchMode" />
		</trim>
    </sql>
	
	<select id="selectAssignedToMyBug"  parameterType="cn.ibizlab.pms.core.zentao.filter.BugSearchContext" resultMap="BugResultMap">
		<include refid="AssignedToMyBug" />
	</select>

    <!--数据查询[AssignedToMyBugPc]-->
    <sql id="AssignedToMyBugPc" databaseId="mysql">
		<![CDATA[ SELECT t1.`ACTIVATEDCOUNT`, t1.`ACTIVATEDDATE`, t1.`ASSIGNEDDATE`, t1.`ASSIGNEDTO`, t1.`BRANCH`, t61.`NAME` AS `BRANCHNAME`, t1.`BROWSER`, t1.`CASE`, t1.`CASEVERSION`, t1.`CLOSEDBY`, t1.`CLOSEDDATE`, t1.`COLOR`, t1.`CONFIRMED`, t1.`DEADLINE`, t1.`DELETED`, t1.`DUPLICATEBUG`, t1.`ENTRY`, t1.`FOUND`, t1.`HARDWARE`, t1.`ID`, (select (case when COUNT(t.IBZ_FAVORITESID) > 0 then 1 else 0 end ) as ISFAVORITES from T_IBZ_FAVORITES t where t.TYPE = 'bug' and t.ACCOUNT = #{srf.sessioncontext.srfloginname} and t.OBJECTID = t1.id) AS `ISFAVORITES`, t1.`KEYWORDS`, t1.`LASTEDITEDBY`, t1.`LASTEDITEDDATE`, t1.`LINES`, t1.`LINKBUG`, t1.`MAILTO`, t1.`MODULE`, t51.`NAME` AS `MODULENAME`, (SELECT GROUP_CONCAT( tt.NAME SEPARATOR '>' )  FROM zt_module tt WHERE FIND_IN_SET( tt.id, t51.path ) AND tt.type = 'story'  GROUP BY tt.root ) AS `MODULENAME1`, t1.`OPENEDBUILD`, t1.`OPENEDBY`, t1.`OPENEDDATE`, t1.`OS`, t1.`PLAN`, t1.`PRI`, t1.`PRODUCT`, t11.`NAME` AS `PRODUCTNAME`, t1.`PROJECT`, t21.`NAME` AS `PROJECTNAME`, t1.`REPO`, t1.`REPOTYPE`, t1.`RESOLUTION`, t1.`RESOLVEDBUILD`, t1.`RESOLVEDBY`, t1.`RESOLVEDDATE`, t1.`RESULT`, t1.`SEVERITY`, t1.`STATUS`, t1.`STORY`, t31.`TITLE` AS `STORYNAME`, t1.`STORYVERSION`, t1.`SUBSTATUS`, t1.`TASK`, t41.`NAME` AS `TASKNAME`, t1.`TESTTASK`, t1.`TITLE`, t1.`TOSTORY`, t1.`TOTASK`, t1.`TYPE`, t1.`V1`, t1.`V2`, (case when t1.DEADLINE = '0000-00-00' then 0 else datediff(t1.deadline, now() ) end) as overduebugs , 	t1.BUGSN FROM 	`zt_bug` t1 	LEFT JOIN zt_product t11 ON t1.PRODUCT = t11.id 	LEFT JOIN zt_project t21 ON t1.PROJECT = t21.id 	LEFT JOIN zt_story t31 ON t1.STORY = t31.id 	LEFT JOIN zt_task t41 ON t1.TASK = t41.id 	LEFT JOIN zt_module t51 ON t1.MODULE = t51.id 	LEFT JOIN zt_branch t61 ON t1.BRANCH = t61.id ]]>
		<trim prefix="where" prefixOverrides="and">
			<if test="true">
                <![CDATA[ AND t1.DELETED = '0' ]]>
            </if>
			<if test="true">
                <![CDATA[ AND ( t1.`ASSIGNEDTO` =  #{srf.sessioncontext.srfloginname} ) ]]>
            </if>
			<if test="true">
                <![CDATA[ AND t1.deadline is not null and t1.deadline <> '0000-00-00' ]]>
            </if>
			<if test="true">
                <![CDATA[ AND t1.assigneddate is not null and t1.assigneddate <> '0000-00-00 00:00:00' ]]>
            </if>
			<include refid="searchMode" />
		</trim>
    </sql>
	
	<select id="selectAssignedToMyBugPc"  parameterType="cn.ibizlab.pms.core.zentao.filter.BugSearchContext" resultMap="BugResultMap">
		<include refid="AssignedToMyBugPc" />
	</select>

    <!--数据查询[BuildBugs]-->
    <sql id="BuildBugs" databaseId="mysql">
		<![CDATA[ SELECT 	t1.`CONFIRMED`, 	t1.`ID`, 	( SELECT 	( CASE WHEN COUNT( t.IBZ_FAVORITESID ) > 0 THEN 1 ELSE 0 END ) AS ISFAVORITES  FROM 	T_IBZ_FAVORITES t  WHERE 	t.TYPE = 'bug'  	AND t.ACCOUNT = #{srf.sessioncontext.srfloginname}  	AND t.OBJECTID = t1.id  	) AS `ISFAVORITES`,	 	t1.`OPENEDBY`, 	t1.`OPENEDDATE`, 	t1.`PRI`, 	t1.`RESOLVEDBY`,	 	t1.`STATUS`, 	t1.`TITLE`	, 	t1.BUGSN FROM 	`zt_bug` t1 	LEFT JOIN zt_product t11 ON t1.PRODUCT = t11.ID 	LEFT JOIN zt_project t21 ON t1.PROJECT = t21.ID 	LEFT JOIN zt_story t31 ON t1.STORY = t31.ID ]]>
		<trim prefix="where" prefixOverrides="and">
			<if test="true">
                <![CDATA[ AND t1.`DELETED` ='0' AND FIND_IN_SET ( t1.ID, (SELECT BUGS FROM ZT_BUILD WHERE ID= #{srf.datacontext.srfparentkey})) ]]>
            </if>
			<include refid="searchMode" />
		</trim>
    </sql>
	
	<select id="selectBuildBugs"  parameterType="cn.ibizlab.pms.core.zentao.filter.BugSearchContext" resultMap="BugResultMap">
		<include refid="BuildBugs" />
	</select>

    <!--数据查询[BuildLinkResolvedBugs]-->
    <sql id="BuildLinkResolvedBugs" databaseId="mysql">
		<![CDATA[ SELECT 	t1.`ASSIGNEDTO`, 	t1.`CONFIRMED`, 	t1.`ID`, 	0 AS `ISFAVORITES`, 	t1.`OPENEDBY`, 	t1.`PRI`, 	t1.`PROJECT`, 	t1.`RESOLUTION`, 	( CASE WHEN t1.`RESOLVEDBY` IS NULL OR t1.`RESOLVEDBY` = '' THEN #{srf.sessioncontext.srfloginname} ELSE t1.`RESOLVEDBY` END ) AS `RESOLVEDBY`,	 	t1.`STATUS`,	 	t1.`TITLE`, 	t1.BUGSN FROM `zt_bug` t1 ]]>
		<trim prefix="where" prefixOverrides="and">
			<if test="true">
                <![CDATA[ AND t1.DELETED = '0' ]]>
            </if>
			<if test="true">
                <![CDATA[ AND t1.product = ( SELECT product FROM zt_build WHERE project =  (select ttt.project from zt_build ttt where ttt.id = #{srf.datacontext.project}) 		AND id = #{srf.datacontext.build} )  	AND t1.project = (select ttt.project from zt_build ttt where ttt.id = #{srf.datacontext.project})  	AND t1.`status` <> 'closed'  	AND t1.id NOT IN ( SELECT t3.id FROM zt_bug t3, zt_build t4  WHERE 		t4.id = #{srf.datacontext.build} AND FIND_IN_SET( t3.id, t4.bugs ) ) ]]>
            </if>
			<include refid="searchMode" />
		</trim>
    </sql>
	
	<select id="selectBuildLinkResolvedBugs"  parameterType="cn.ibizlab.pms.core.zentao.filter.BugSearchContext" resultMap="BugResultMap">
		<include refid="BuildLinkResolvedBugs" />
	</select>

    <!--数据查询[BuildOpenBugs]-->
    <sql id="BuildOpenBugs" databaseId="mysql">
		<![CDATA[ SELECT	 	t1.`ASSIGNEDTO`,	 	t1.`CONFIRMED`,	 	t1.`ID`, 	( SELECT 	( CASE WHEN COUNT( t.IBZ_FAVORITESID ) > 0 THEN 1 ELSE 0 END ) AS ISFAVORITES  FROM 	T_IBZ_FAVORITES t  WHERE 	t.TYPE = 'bug'  	AND t.ACCOUNT = #{srf.sessioncontext.srfloginname}  	AND t.OBJECTID = t1.id  	) AS `ISFAVORITES`,	 	t1.`OPENEDBY`,	 	t1.`PRI`,	 	t1.`RESOLUTION`,	 	t1.`RESOLVEDBY`, 	t1.`STATUS`, 	t1.`TITLE`, 	t1.BUGSN FROM 	`zt_bug` t1 ]]>
		<trim prefix="where" prefixOverrides="and">
			<if test="true">
                <![CDATA[ AND t1.DELETED = '0'   	AND FIND_IN_SET(  #{srf.datacontext.srfparentkey},(SELECT OPENEDBUILD FROM `zt_bug` WHERE ID=t1.ID)) ]]>
            </if>
			<include refid="searchMode" />
		</trim>
    </sql>
	
	<select id="selectBuildOpenBugs"  parameterType="cn.ibizlab.pms.core.zentao.filter.BugSearchContext" resultMap="BugResultMap">
		<include refid="BuildOpenBugs" />
	</select>

    <!--数据查询[BuildProduceBug]-->
    <sql id="BuildProduceBug" databaseId="mysql">
		<![CDATA[ SELECT t1.`ACTIVATEDCOUNT`, t1.`ACTIVATEDDATE`, t1.`ASSIGNEDDATE`, t1.`ASSIGNEDTO`, t1.`BRANCH`, t61.`NAME` AS `BRANCHNAME`, t1.`BROWSER`, t1.`CASE`, t71.`TITLE` AS `CASENAME`, t1.`CASEVERSION`, t1.`CLOSEDBY`, t1.`CLOSEDDATE`, t1.`COLOR`, t1.`CONFIRMED`, t1.`DEADLINE`, (case when t1.deadline is null or t1.deadline = '0000-00-00' or t1.deadline = '1970-01-01' then '' when t1.`status` ='active' and t1.deadline <DATE_FORMAT(now(),'%y-%m-%d')  then CONCAT_WS('','延期',TIMESTAMPDIFF(DAY, t1.deadline, now()),'天') else '' end) AS `DELAY`, ( CASE WHEN t1.deadline IS NULL  OR t1.deadline = '0000-00-00'  OR t1.deadline = '1970-01-01' THEN ''  WHEN t1.`status` = 'resolved'  AND t1.deadline < DATE_FORMAT( t1.resolvedDate, '%y-%m-%d' ) THEN CONCAT_WS( '', '延期', TIMESTAMPDIFF( DAY, t1.deadline, t1.resolvedDate ), '天' ) ELSE ''  END ) AS `DELAYRESOLVE`, t1.`DELETED`, t1.`DUPLICATEBUG`, t1.`ENTRY`, t1.`FOUND`, t1.`HARDWARE`, t1.`ID`, 0 AS `ISFAVORITES`, t1.`KEYWORDS`, t1.`LASTEDITEDBY`, t1.`LASTEDITEDDATE`, t1.`LINES`, t1.`LINKBUG`, t1.`MAILTO`, '' AS `MAILTOPK`, t1.`MODULE`, t51.`NAME` AS `MODULENAME`, (case when t1.module = '0' then '/' else (SELECT GROUP_CONCAT( tt.NAME SEPARATOR '>' )  FROM zt_module tt WHERE FIND_IN_SET( tt.id, t51.path ) AND tt.type = 'story'  GROUP BY tt.root limit 0,1) end) AS `MODULENAME1`, t1.`OPENEDBUILD`, t1.`OPENEDBY`, t1.`OPENEDDATE`, t1.`OS`, (case when t1.DEADLINE = '0000-00-00' then 0 else datediff(t1.deadline, now() ) end) AS `OVERDUEBUGS`, t1.`PLAN`, t1.`PRI`, t1.`PRODUCT`, t11.`NAME` AS `PRODUCTNAME`, t1.`PROJECT`, t21.`NAME` AS `PROJECTNAME`, t1.`REPO`, t1.`REPOTYPE`, t1.`RESOLUTION`, t1.`RESOLVEDBUILD`, t1.`RESOLVEDBY`, t1.`RESOLVEDDATE`, t1.`RESULT`, t1.`SEVERITY`, t1.`STATUS`, t1.`STORY`, t31.`TITLE` AS `STORYNAME`, t1.`STORYVERSION`, t1.`SUBSTATUS`, t1.`TASK`, t41.`NAME` AS `TASKNAME`, t1.`TESTTASK`, t1.`TITLE`, t1.`TOSTORY`, t1.`TOTASK`, t1.`TYPE`, t1.`V1`, t1.`V2`, 	t1.BUGSN FROM 	`zt_bug` t1 	LEFT JOIN zt_product t11 ON t1.PRODUCT = t11.productsn  	LEFT JOIN zt_project t21 ON t1.PROJECT = t21.PROJECTSN  	LEFT JOIN zt_story t31 ON t1.STORY = t31.STORYSN  	LEFT JOIN zt_task t41 ON t1.TASK = t41.TASKSN  	LEFT JOIN zt_module t51 ON t1.MODULE = t51.MODULESN  	LEFT JOIN zt_branch t61 ON t1.BRANCH = t61.BRANCHSN LEFT JOIN zt_case t71 ON t1.`CASE` = t71.casesn  ]]>
		<trim prefix="where" prefixOverrides="and">
			<if test="true">
                <![CDATA[ AND t1.DELETED = '0' ]]>
            </if>
			<if test="true">
                <![CDATA[ AND ( FIND_IN_SET((select t.build from zt_testtask t inner join zt_testreport tt on t.id = tt.tasks where tt.id = #{srf.datacontext.srfparentkey}  ),t1.OPENEDBUILD)  and t1.openedDate > (select tt.`begin` from  zt_testreport tt  where tt.id = #{srf.datacontext.srfparentkey}  ) and t1.openedDate < (select tt.`end` from  zt_testreport tt  where tt.id = #{srf.datacontext.srfparentkey}  ) ) ]]>
            </if>
			<include refid="searchMode" />
		</trim>
    </sql>
	
	<select id="selectBuildProduceBug"  parameterType="cn.ibizlab.pms.core.zentao.filter.BugSearchContext" resultMap="BugResultMap">
		<include refid="BuildProduceBug" />
	</select>

    <!--数据查询[BuildProduceBugModule]-->
    <sql id="BuildProduceBugModule" databaseId="mysql">
		<![CDATA[ SELECT t1.`ACTIVATEDCOUNT`, t1.`ACTIVATEDDATE`, t1.`ASSIGNEDDATE`, t1.`ASSIGNEDTO`, t1.`BRANCH`, t61.`NAME` AS `BRANCHNAME`, t1.`BROWSER`, t1.`CASE`, t1.`CASEVERSION`, t1.`CLOSEDBY`, t1.`CLOSEDDATE`, t1.`COLOR`, t1.`CONFIRMED`, t1.`DEADLINE`, t1.`DELETED`, t1.`DUPLICATEBUG`, t1.`ENTRY`, t1.`FOUND`, t1.`HARDWARE`, t1.`ID`, 0 AS `ISFAVORITES`, t1.`KEYWORDS`, t1.`LASTEDITEDBY`, t1.`LASTEDITEDDATE`, t1.`LINES`, t1.`LINKBUG`, t1.`MAILTO`, t1.`MODULE`, CONCAT( 	'/',  case when	( SELECT 	GROUP_CONCAT( tt.NAME SEPARATOR '/' )  FROM 	zt_module tt  WHERE 	FIND_IN_SET( tt.id, t51.path )  	AND tt.type = 'story'  GROUP BY 	tt.root  	LIMIT 0,1 	) is not null then ( SELECT 	GROUP_CONCAT( tt.NAME SEPARATOR '/' )  FROM 	zt_module tt  WHERE 	FIND_IN_SET( tt.id, t51.path )  	AND tt.type = 'story'  GROUP BY 	tt.root  	LIMIT 0,1 	) when t51.`name` is null then '' else t51.`name` end 	)  AS `MODULENAME`, (SELECT GROUP_CONCAT( tt.NAME SEPARATOR '>' )  FROM zt_module tt WHERE FIND_IN_SET( tt.id, t51.path ) AND tt.type = 'story'  GROUP BY tt.root ) AS `MODULENAME1`, t1.`OPENEDBUILD`, t1.`OPENEDBY`, t1.`OPENEDDATE`, t1.`OS`, (case when t1.DEADLINE = '0000-00-00' then 0 else datediff(t1.deadline, now() ) end) AS `OVERDUEBUGS`, t1.`PLAN`, t1.`PRI`, t1.`PRODUCT`, t11.`NAME` AS `PRODUCTNAME`, t1.`PROJECT`, t21.`NAME` AS `PROJECTNAME`, t1.`REPO`, t1.`REPOTYPE`, t1.`RESOLUTION`, t1.`RESOLVEDBUILD`, t1.`RESOLVEDBY`, t1.`RESOLVEDDATE`, t1.`RESULT`, t1.`SEVERITY`, t1.`STATUS`, t1.`STORY`, t31.`TITLE` AS `STORYNAME`, t1.`STORYVERSION`, t1.`SUBSTATUS`, t1.`TASK`, t41.`NAME` AS `TASKNAME`, t1.`TESTTASK`, t1.`TITLE`, t1.`TOSTORY`, t1.`TOTASK`, t1.`TYPE`, t1.`V1`, t1.`V2`, 	t1.BUGSN FROM 	`zt_bug` t1 	LEFT JOIN zt_product t11 ON t1.PRODUCT = t11.ID 	LEFT JOIN zt_project t21 ON t1.PROJECT = t21.ID 	LEFT JOIN zt_story t31 ON t1.STORY = t31.ID 	LEFT JOIN zt_task t41 ON t1.TASK = t41.ID 	LEFT JOIN zt_module t51 ON t1.MODULE = t51.ID 	LEFT JOIN zt_branch t61 ON t1.BRANCH = t61.ID ]]>
		<trim prefix="where" prefixOverrides="and">
			<if test="true">
                <![CDATA[ AND t1.DELETED = '0' ]]>
            </if>
			<if test="true">
                <![CDATA[ AND FIND_IN_SET((select t.build from zt_testtask t inner join zt_testreport tt on t.id = tt.tasks where tt.id = #{srf.datacontext.srfparentkey}  ),t1.OPENEDBUILD)  and t1.openedDate > (select tt.`begin` from  zt_testreport tt  where tt.id = #{srf.datacontext.srfparentkey}  ) and t1.openedDate < (select tt.`end` from  zt_testreport tt  where tt.id = #{srf.datacontext.srfparentkey}  ) ]]>
            </if>
			<include refid="searchMode" />
		</trim>
    </sql>
	
	<select id="selectBuildProduceBugModule"  parameterType="cn.ibizlab.pms.core.zentao.filter.BugSearchContext" resultMap="BugResultMap">
		<include refid="BuildProduceBugModule" />
	</select>

    <!--数据查询[BuildProduceBugModule_Project]-->
    <sql id="BuildProduceBugModule_Project" databaseId="mysql">
		<![CDATA[ SELECT t1.`ACTIVATEDCOUNT`, t1.`ACTIVATEDDATE`, t1.`ASSIGNEDDATE`, t1.`ASSIGNEDTO`, t1.`BRANCH`, t61.`NAME` AS `BRANCHNAME`, t1.`BROWSER`, t1.`CASE`, t1.`CASEVERSION`, t1.`CLOSEDBY`, t1.`CLOSEDDATE`, t1.`COLOR`, t1.`CONFIRMED`, t1.`DEADLINE`, t1.`DELETED`, t1.`DUPLICATEBUG`, t1.`ENTRY`, t1.`FOUND`, t1.`HARDWARE`, t1.`ID`, 0 AS `ISFAVORITES`, t1.`KEYWORDS`, t1.`LASTEDITEDBY`, t1.`LASTEDITEDDATE`, t1.`LINES`, t1.`LINKBUG`, t1.`MAILTO`, t1.`MODULE`, CONCAT( 	'/',  case when	( SELECT 	GROUP_CONCAT( tt.NAME SEPARATOR '/' )  FROM 	zt_module tt  WHERE 	FIND_IN_SET( tt.id, t51.path )  	AND tt.type = 'story'  GROUP BY 	tt.root  	LIMIT 0,1 	) is not null then ( SELECT 	GROUP_CONCAT( tt.NAME SEPARATOR '/' )  FROM 	zt_module tt  WHERE 	FIND_IN_SET( tt.id, t51.path )  	AND tt.type = 'story'  GROUP BY 	tt.root  	LIMIT 0,1 	) when t51.`name` is null then '' else t51.`name` end 	)  AS `MODULENAME`, (SELECT GROUP_CONCAT( tt.NAME SEPARATOR '>' )  FROM zt_module tt WHERE FIND_IN_SET( tt.id, t51.path ) AND tt.type = 'story'  GROUP BY tt.root ) AS `MODULENAME1`, t1.`OPENEDBUILD`, t1.`OPENEDBY`, t1.`OPENEDDATE`, t1.`OS`, (case when t1.DEADLINE = '0000-00-00' then 0 else datediff(t1.deadline, now() ) end) AS `OVERDUEBUGS`, t1.`PLAN`, t1.`PRI`, t1.`PRODUCT`, t11.`NAME` AS `PRODUCTNAME`, t1.`PROJECT`, t21.`NAME` AS `PROJECTNAME`, t1.`REPO`, t1.`REPOTYPE`, t1.`RESOLUTION`, t1.`RESOLVEDBUILD`, t1.`RESOLVEDBY`, t1.`RESOLVEDDATE`, t1.`RESULT`, t1.`SEVERITY`, t1.`STATUS`, t1.`STORY`, t31.`TITLE` AS `STORYNAME`, t1.`STORYVERSION`, t1.`SUBSTATUS`, t1.`TASK`, t41.`NAME` AS `TASKNAME`, t1.`TESTTASK`, t1.`TITLE`, t1.`TOSTORY`, t1.`TOTASK`, t1.`TYPE`, t1.`V1`, t1.`V2`, 	t1.BUGSN FROM 	`zt_bug` t1 	LEFT JOIN zt_product t11 ON t1.PRODUCT = t11.id  	LEFT JOIN zt_project t21 ON t1.PROJECT = t21.id  	LEFT JOIN zt_story t31 ON t1.STORY = t31.id  	LEFT JOIN zt_task t41 ON t1.TASK = t41.id  	LEFT JOIN zt_module t51 ON t1.MODULE = t51.id  	LEFT JOIN zt_branch t61 ON t1.BRANCH = t61.id  	INNER JOIN (select tt.id from zt_build tt where tt.deleted = '0' and tt.id in ( 	select t1.build from zt_testtask t1 where FIND_IN_SET(t1.id,(SELECT tasks from zt_testreport where id = #{srf.datacontext.srfparentkey} )))) t71 on FIND_IN_SET(t71.id,t1.openedBuild)  ]]>
		<trim prefix="where" prefixOverrides="and">
			<if test="true">
                <![CDATA[ AND t1.DELETED = '0' ]]>
            </if>
			<if test="true">
                <![CDATA[ AND ( t1.openedDate > (select tt.`begin` from  zt_testreport tt  where tt.id =  #{srf.datacontext.srfparentkey}  ) and t1.openedDate < (select CONCAT(DATE_FORMAT(tt.`end`,'%Y-%m-%d'),' 23:59:59') from  zt_testreport tt  where tt.id =  #{srf.datacontext.srfparentkey}  ) and not EXISTS(select 1 from zt_build t where FIND_IN_SET(t.id,t1.openedBuild) and FIND_IN_SET(t.id,(select GROUP_CONCAT(tt.id) from (select tt.* from zt_build tt where  tt.id in ( 	select t1.build from zt_testtask t1 where FIND_IN_SET(t1.id,(SELECT tasks from zt_testreport where id =  #{srf.datacontext.srfparentkey} )))) tt GROUP BY tt.product)) = 0) and FIND_IN_SET('trunk',t1.openedBuild) = 0 ) ]]>
            </if>
			<include refid="searchMode" />
		</trim>
    </sql>
	
	<select id="selectBuildProduceBugModule_Project"  parameterType="cn.ibizlab.pms.core.zentao.filter.BugSearchContext" resultMap="BugResultMap">
		<include refid="BuildProduceBugModule_Project" />
	</select>

    <!--数据查询[BuildProduceBugOpenedBy]-->
    <sql id="BuildProduceBugOpenedBy" databaseId="mysql">
		<![CDATA[ SELECT t1.`ACTIVATEDCOUNT`, t1.`ACTIVATEDDATE`, t1.`ASSIGNEDDATE`, t1.`ASSIGNEDTO`, t1.`BRANCH`, t61.`NAME` AS `BRANCHNAME`, t1.`BROWSER`, t1.`CASE`, t1.`CASEVERSION`, t1.`CLOSEDBY`, t1.`CLOSEDDATE`, t1.`COLOR`, t1.`CONFIRMED`, t1.`DEADLINE`, t1.`DELETED`, t1.`DUPLICATEBUG`, t1.`ENTRY`, t1.`FOUND`, t1.`HARDWARE`, t1.`ID`, 0 AS `ISFAVORITES`, t1.`KEYWORDS`, t1.`LASTEDITEDBY`, t1.`LASTEDITEDDATE`, t1.`LINES`, t1.`LINKBUG`, t1.`MAILTO`, t1.`MODULE`, t51.`NAME` AS `MODULENAME`, (SELECT GROUP_CONCAT( tt.NAME SEPARATOR '>' )  FROM zt_module tt WHERE FIND_IN_SET( tt.id, t51.path ) AND tt.type = 'story'  GROUP BY tt.root ) AS `MODULENAME1`, t1.`OPENEDBUILD`, t71.realname AS `OPENEDBY`, t1.`OPENEDDATE`, t1.`OS`, (case when t1.DEADLINE = '0000-00-00' then 0 else datediff(t1.deadline, now() ) end) AS `OVERDUEBUGS`, t1.`PLAN`, t1.`PRI`, t1.`PRODUCT`, t11.`NAME` AS `PRODUCTNAME`, t1.`PROJECT`, t21.`NAME` AS `PROJECTNAME`, t1.`REPO`, t1.`REPOTYPE`, t1.`RESOLUTION`, t1.`RESOLVEDBUILD`, t1.`RESOLVEDBY`, t1.`RESOLVEDDATE`, t1.`RESULT`, t1.`SEVERITY`, t1.`STATUS`, t1.`STORY`, t31.`TITLE` AS `STORYNAME`, t1.`STORYVERSION`, t1.`SUBSTATUS`, t1.`TASK`, t41.`NAME` AS `TASKNAME`, t1.`TESTTASK`, t1.`TITLE`, t1.`TOSTORY`, t1.`TOTASK`, t1.`TYPE`, t1.`V1`, t1.`V2`, 	t1.BUGSN FROM 	`zt_bug` t1 	LEFT JOIN zt_product t11 ON t1.PRODUCT = t11.ID 	LEFT JOIN zt_project t21 ON t1.PROJECT = t21.ID 	LEFT JOIN zt_story t31 ON t1.STORY = t31.ID 	LEFT JOIN zt_task t41 ON t1.TASK = t41.ID 	LEFT JOIN zt_module t51 ON t1.MODULE = t51.ID 	LEFT JOIN zt_branch t61 ON t1.BRANCH = t61.ID 	LEFT JOIN zt_user t71 on t1.openedBy = t71.account ]]>
		<trim prefix="where" prefixOverrides="and">
			<if test="true">
                <![CDATA[ AND t1.DELETED = '0' ]]>
            </if>
			<if test="true">
                <![CDATA[ AND FIND_IN_SET((select t.build from zt_testtask t inner join zt_testreport tt on t.id = tt.tasks where tt.id = #{srf.datacontext.srfparentkey}  ),t1.OPENEDBUILD)  and t1.openedDate > (select tt.`begin` from  zt_testreport tt  where tt.id = #{srf.datacontext.srfparentkey}  ) and t1.openedDate < (select tt.`end` from  zt_testreport tt  where tt.id = #{srf.datacontext.srfparentkey}  ) ]]>
            </if>
			<include refid="searchMode" />
		</trim>
    </sql>
	
	<select id="selectBuildProduceBugOpenedBy"  parameterType="cn.ibizlab.pms.core.zentao.filter.BugSearchContext" resultMap="BugResultMap">
		<include refid="BuildProduceBugOpenedBy" />
	</select>

    <!--数据查询[BuildProduceBugOpenedBy_Project]-->
    <sql id="BuildProduceBugOpenedBy_Project" databaseId="mysql">
		<![CDATA[ SELECT t1.`ACTIVATEDCOUNT`, t1.`ACTIVATEDDATE`, t1.`ASSIGNEDDATE`, t1.`ASSIGNEDTO`, t1.`BRANCH`, t61.`NAME` AS `BRANCHNAME`, t1.`BROWSER`, t1.`CASE`, t1.`CASEVERSION`, t1.`CLOSEDBY`, t1.`CLOSEDDATE`, t1.`COLOR`, t1.`CONFIRMED`, t1.`DEADLINE`, t1.`DELETED`, t1.`DUPLICATEBUG`, t1.`ENTRY`, t1.`FOUND`, t1.`HARDWARE`, t1.`ID`, 0 AS `ISFAVORITES`, t1.`KEYWORDS`, t1.`LASTEDITEDBY`, t1.`LASTEDITEDDATE`, t1.`LINES`, t1.`LINKBUG`, t1.`MAILTO`, t1.`MODULE`, t51.`NAME` AS `MODULENAME`, (SELECT GROUP_CONCAT( tt.NAME SEPARATOR '>' )  FROM zt_module tt WHERE FIND_IN_SET( tt.id, t51.path ) AND tt.type = 'story'  GROUP BY tt.root ) AS `MODULENAME1`, t1.`OPENEDBUILD`, t71.realname as `OPENEDBY`, t1.`OPENEDDATE`, t1.`OS`, (case when t1.DEADLINE = '0000-00-00' then 0 else datediff(t1.deadline, now() ) end) AS `OVERDUEBUGS`, t1.`PLAN`, t1.`PRI`, t1.`PRODUCT`, t11.`NAME` AS `PRODUCTNAME`, t1.`PROJECT`, t21.`NAME` AS `PROJECTNAME`, t1.`REPO`, t1.`REPOTYPE`, t1.`RESOLUTION`, t1.`RESOLVEDBUILD`, t1.`RESOLVEDBY`, t1.`RESOLVEDDATE`, t1.`RESULT`, t1.`SEVERITY`, t1.`STATUS`, t1.`STORY`, t31.`TITLE` AS `STORYNAME`, t1.`STORYVERSION`, t1.`SUBSTATUS`, t1.`TASK`, t41.`NAME` AS `TASKNAME`, t1.`TESTTASK`, t1.`TITLE`, t1.`TOSTORY`, t1.`TOTASK`, t1.`TYPE`, t1.`V1`, t1.`V2`, 	t1.BUGSN FROM 	`zt_bug` t1 	LEFT JOIN zt_product t11 ON t1.PRODUCT = t11.id  	LEFT JOIN zt_project t21 ON t1.PROJECT = t21.id  	LEFT JOIN zt_story t31 ON t1.STORY = t31.id  	LEFT JOIN zt_task t41 ON t1.TASK = t41.id  	LEFT JOIN zt_module t51 ON t1.MODULE = t51.id  	LEFT JOIN zt_branch t61 ON t1.BRANCH = t61.id  LEFT JOIN zt_user t71 on t1.openedBy = t71.account 	INNER JOIN (select tt.id from zt_build tt where tt.deleted = '0' and tt.id in ( 	select t1.build from zt_testtask t1 where FIND_IN_SET(t1.id,(SELECT tasks from zt_testreport where id = #{srf.datacontext.srfparentkey} )))) t81 on FIND_IN_SET(t81.id,t1.openedBuild)  ]]>
		<trim prefix="where" prefixOverrides="and">
			<if test="true">
                <![CDATA[ AND t1.DELETED = '0' ]]>
            </if>
			<if test="true">
                <![CDATA[ AND ( t1.openedDate > (select tt.`begin` from  zt_testreport tt  where tt.id =  #{srf.datacontext.srfparentkey}  ) and t1.openedDate < (select CONCAT(DATE_FORMAT(tt.`end`,'%Y-%m-%d'),' 23:59:59') from  zt_testreport tt  where tt.id =  #{srf.datacontext.srfparentkey}  ) and not EXISTS(select 1 from zt_build t where FIND_IN_SET(t.id,t1.openedBuild) and FIND_IN_SET(t.id,(select GROUP_CONCAT(tt.id) from (select tt.* from zt_build tt where  tt.id in ( 	select t1.build from zt_testtask t1 where FIND_IN_SET(t1.id,(SELECT tasks from zt_testreport where id =  #{srf.datacontext.srfparentkey} )))) tt GROUP BY tt.product)) = 0) and FIND_IN_SET('trunk',t1.openedBuild) = 0 ) ]]>
            </if>
			<if test="true">
                <![CDATA[ AND t1.openedBy is not null and t1.openedBy <> '' ]]>
            </if>
			<include refid="searchMode" />
		</trim>
    </sql>
	
	<select id="selectBuildProduceBugOpenedBy_Project"  parameterType="cn.ibizlab.pms.core.zentao.filter.BugSearchContext" resultMap="BugResultMap">
		<include refid="BuildProduceBugOpenedBy_Project" />
	</select>

    <!--数据查询[BuildProduceBugRES]-->
    <sql id="BuildProduceBugRES" databaseId="mysql">
		<![CDATA[ SELECT t1.`ACTIVATEDCOUNT`, t1.`ACTIVATEDDATE`, t1.`ASSIGNEDDATE`, t1.`ASSIGNEDTO`, t1.`BRANCH`, t61.`NAME` AS `BRANCHNAME`, t1.`BROWSER`, t1.`CASE`, t71.`TITLE` AS `CASENAME`, t1.`CASEVERSION`, t1.`CLOSEDBY`, t1.`CLOSEDDATE`, t1.`COLOR`, t1.`CONFIRMED`, t1.`DEADLINE`, (case when t1.deadline is null or t1.deadline = '0000-00-00' or t1.deadline = '1970-01-01' then '' when t1.`status` ='active' and t1.deadline <DATE_FORMAT(now(),'%y-%m-%d')  then CONCAT_WS('','延期',TIMESTAMPDIFF(DAY, t1.deadline, now()),'天') else '' end) AS `DELAY`, ( CASE WHEN t1.deadline IS NULL  OR t1.deadline = '0000-00-00'  OR t1.deadline = '1970-01-01' THEN ''  WHEN t1.`status` = 'resolved'  AND t1.deadline < DATE_FORMAT( t1.resolvedDate, '%y-%m-%d' ) THEN CONCAT_WS( '', '延期', TIMESTAMPDIFF( DAY, t1.deadline, t1.resolvedDate ), '天' ) ELSE ''  END ) AS `DELAYRESOLVE`, t1.`DELETED`, t1.`DUPLICATEBUG`, t1.`ENTRY`, t1.`FOUND`, t1.`HARDWARE`, t1.`ID`, 0 AS `ISFAVORITES`, t1.`KEYWORDS`, t1.`LASTEDITEDBY`, t1.`LASTEDITEDDATE`, t1.`LINES`, t1.`LINKBUG`, t1.`MAILTO`, '' AS `MAILTOPK`, t1.`MODULE`, t51.`NAME` AS `MODULENAME`, (case when t1.module = '0' then '/' else (SELECT GROUP_CONCAT( tt.NAME SEPARATOR '>' )  FROM zt_module tt WHERE FIND_IN_SET( tt.id, t51.path ) AND tt.type = 'story'  GROUP BY tt.root limit 0,1) end) AS `MODULENAME1`, t1.`OPENEDBUILD`, t1.`OPENEDBY`, t1.`OPENEDDATE`, t1.`OS`, (case when t1.DEADLINE = '0000-00-00' then 0 else datediff(t1.deadline, now() ) end) AS `OVERDUEBUGS`, t1.`PLAN`, t1.`PRI`, t1.`PRODUCT`, t11.`NAME` AS `PRODUCTNAME`, t1.`PROJECT`, t21.`NAME` AS `PROJECTNAME`, t1.`REPO`, t1.`REPOTYPE`, t1.`RESOLUTION`, t1.`RESOLVEDBUILD`, t1.`RESOLVEDBY`, t1.`RESOLVEDDATE`, t1.`RESULT`, t1.`SEVERITY`, t1.`STATUS`, t1.`STORY`, t31.`TITLE` AS `STORYNAME`, t1.`STORYVERSION`, t1.`SUBSTATUS`, t1.`TASK`, t41.`NAME` AS `TASKNAME`, t1.`TESTTASK`, t1.`TITLE`, t1.`TOSTORY`, t1.`TOTASK`, t1.`TYPE`, t1.`V1`, t1.`V2`, 	t1.BUGSN FROM 	`zt_bug` t1 	LEFT JOIN zt_product t11 ON t1.PRODUCT = t11.id 	LEFT JOIN zt_project t21 ON t1.PROJECT = t21.id 	LEFT JOIN zt_story t31 ON t1.STORY = t31.id 	LEFT JOIN zt_task t41 ON t1.TASK = t41.id 	LEFT JOIN zt_module t51 ON t1.MODULE = t51.id 	LEFT JOIN zt_branch t61 ON t1.BRANCH = t61.id         LEFT JOIN zt_case t71 ON t1.`CASE` = t71.ID   ]]>
		<trim prefix="where" prefixOverrides="and">
			<if test="true">
                <![CDATA[ AND t1.DELETED = '0' ]]>
            </if>
			<if test="true">
                <![CDATA[ AND ( FIND_IN_SET((select t.build from zt_testtask t inner join zt_testreport tt on t.id = tt.tasks where tt.id = #{srf.datacontext.srfparentkey}  ),t1.OPENEDBUILD)  and t1.openedDate > (select tt.`begin` from  zt_testreport tt  where tt.id = #{srf.datacontext.srfparentkey}  ) and t1.openedDate < (select tt.`end` from  zt_testreport tt  where tt.id = #{srf.datacontext.srfparentkey}  )  AND  t1.resolution is not null and t1.resolution <> '' and t1.`status` in ('resolved','closed') ) ]]>
            </if>
			<include refid="searchMode" />
		</trim>
    </sql>
	
	<select id="selectBuildProduceBugRES"  parameterType="cn.ibizlab.pms.core.zentao.filter.BugSearchContext" resultMap="BugResultMap">
		<include refid="BuildProduceBugRES" />
	</select>

    <!--数据查询[BuildProduceBugRESOLVEDBY]-->
    <sql id="BuildProduceBugRESOLVEDBY" databaseId="mysql">
		<![CDATA[ SELECT t1.`ACTIVATEDCOUNT`, t1.`ACTIVATEDDATE`, t1.`ASSIGNEDDATE`, t1.`ASSIGNEDTO`, t1.`BRANCH`, t61.`NAME` AS `BRANCHNAME`, t1.`BROWSER`, t1.`CASE`, t1.`CASEVERSION`, t1.`CLOSEDBY`, t1.`CLOSEDDATE`, t1.`COLOR`, t1.`CONFIRMED`, t1.`DEADLINE`, t1.`DELETED`, t1.`DUPLICATEBUG`, t1.`ENTRY`, t1.`FOUND`, t1.`HARDWARE`, t1.`ID`, 0 AS `ISFAVORITES`, t1.`KEYWORDS`, t1.`LASTEDITEDBY`, t1.`LASTEDITEDDATE`, t1.`LINES`, t1.`LINKBUG`, t1.`MAILTO`, t1.`MODULE`, t51.`NAME` AS `MODULENAME`, (SELECT GROUP_CONCAT( tt.NAME SEPARATOR '>' )  FROM zt_module tt WHERE FIND_IN_SET( tt.id, t51.path ) AND tt.type = 'story'  GROUP BY tt.root ) AS `MODULENAME1`, t1.`OPENEDBUILD`, t1.`OPENEDBY`, t1.`OPENEDDATE`, t1.`OS`, (case when t1.DEADLINE = '0000-00-00' then 0 else datediff(t1.deadline, now() ) end) AS `OVERDUEBUGS`, t1.`PLAN`, t1.`PRI`, t1.`PRODUCT`, t11.`NAME` AS `PRODUCTNAME`, t1.`PROJECT`, t21.`NAME` AS `PROJECTNAME`, t1.`REPO`, t1.`REPOTYPE`, t1.`RESOLUTION`, t1.`RESOLVEDBUILD`, t71.realname AS `RESOLVEDBY`, t1.`RESOLVEDDATE`, t1.`RESULT`, t1.`SEVERITY`, t1.`STATUS`, t1.`STORY`, t31.`TITLE` AS `STORYNAME`, t1.`STORYVERSION`, t1.`SUBSTATUS`, t1.`TASK`, t41.`NAME` AS `TASKNAME`, t1.`TESTTASK`, t1.`TITLE`, t1.`TOSTORY`, t1.`TOTASK`, t1.`TYPE`, t1.`V1`, t1.`V2`, 	t1.BUGSN FROM 	`zt_bug` t1 	LEFT JOIN zt_product t11 ON t1.PRODUCT = t11.id  	LEFT JOIN zt_project t21 ON t1.PROJECT = t21.id  	LEFT JOIN zt_story t31 ON t1.STORY = t31.id  	LEFT JOIN zt_task t41 ON t1.TASK = t41.id  	LEFT JOIN zt_module t51 ON t1.MODULE = t51.id  	LEFT JOIN zt_branch t61 ON t1.BRANCH = t61.id  LEFT JOIN zt_user t71 on t1.RESOLVEDBY = t71.account ]]>
		<trim prefix="where" prefixOverrides="and">
			<if test="true">
                <![CDATA[ AND t1.DELETED = '0' ]]>
            </if>
			<if test="true">
                <![CDATA[ AND FIND_IN_SET((select t.build from zt_testtask t inner join zt_testreport tt on t.id = tt.tasks where tt.id = #{srf.datacontext.srfparentkey}  ),t1.OPENEDBUILD)  and t1.openedDate > (select tt.`begin` from  zt_testreport tt  where tt.id = #{srf.datacontext.srfparentkey}  ) and t1.openedDate < (select tt.`end` from  zt_testreport tt  where tt.id = #{srf.datacontext.srfparentkey}  ) ]]>
            </if>
			<if test="true">
                <![CDATA[ AND t1.resolution is not null and t1.resolution <> '' and t1.`status` in ('resolved','closed') ]]>
            </if>
			<include refid="searchMode" />
		</trim>
    </sql>
	
	<select id="selectBuildProduceBugRESOLVEDBY"  parameterType="cn.ibizlab.pms.core.zentao.filter.BugSearchContext" resultMap="BugResultMap">
		<include refid="BuildProduceBugRESOLVEDBY" />
	</select>

    <!--数据查询[BuildProduceBugRESOLVEDBY_Project]-->
    <sql id="BuildProduceBugRESOLVEDBY_Project" databaseId="mysql">
		<![CDATA[ SELECT t1.`ACTIVATEDCOUNT`, t1.`ACTIVATEDDATE`, t1.`ASSIGNEDDATE`, t1.`ASSIGNEDTO`, t1.`BRANCH`, t61.`NAME` AS `BRANCHNAME`, t1.`BROWSER`, t1.`CASE`, t1.`CASEVERSION`, t1.`CLOSEDBY`, t1.`CLOSEDDATE`, t1.`COLOR`, t1.`CONFIRMED`, t1.`DEADLINE`, t1.`DELETED`, t1.`DUPLICATEBUG`, t1.`ENTRY`, t1.`FOUND`, t1.`HARDWARE`, t1.`ID`, 0 AS `ISFAVORITES`, t1.`KEYWORDS`, t1.`LASTEDITEDBY`, t1.`LASTEDITEDDATE`, t1.`LINES`, t1.`LINKBUG`, t1.`MAILTO`, t1.`MODULE`, t51.`NAME` AS `MODULENAME`, (SELECT GROUP_CONCAT( tt.NAME SEPARATOR '>' )  FROM zt_module tt WHERE FIND_IN_SET( tt.id, t51.path ) AND tt.type = 'story'  GROUP BY tt.root ) AS `MODULENAME1`, t1.`OPENEDBUILD`, t1.`OPENEDBY`, t1.`OPENEDDATE`, t1.`OS`, (case when t1.DEADLINE = '0000-00-00' then 0 else datediff(t1.deadline, now() ) end) AS `OVERDUEBUGS`, t1.`PLAN`, t1.`PRI`, t1.`PRODUCT`, t11.`NAME` AS `PRODUCTNAME`, t1.`PROJECT`, t21.`NAME` AS `PROJECTNAME`, t1.`REPO`, t1.`REPOTYPE`, t1.`RESOLUTION`, t1.`RESOLVEDBUILD`, t71.realname as  `RESOLVEDBY`, t1.`RESOLVEDDATE`, t1.`RESULT`, t1.`SEVERITY`, t1.`STATUS`, t1.`STORY`, t31.`TITLE` AS `STORYNAME`, t1.`STORYVERSION`, t1.`SUBSTATUS`, t1.`TASK`, t41.`NAME` AS `TASKNAME`, t1.`TESTTASK`, t1.`TITLE`, t1.`TOSTORY`, t1.`TOTASK`, t1.`TYPE`, t1.`V1`, t1.`V2`, 	t1.BUGSN FROM 	`zt_bug` t1 	LEFT JOIN zt_product t11 ON t1.PRODUCT = t11.productsn  	LEFT JOIN zt_project t21 ON t1.PROJECT = t21.PROJECTSN  	LEFT JOIN zt_story t31 ON t1.STORY = t31.STORYSN  	LEFT JOIN zt_task t41 ON t1.TASK = t41.TASKSN  	LEFT JOIN zt_module t51 ON t1.MODULE = t51.MODULESN  	LEFT JOIN zt_branch t61 ON t1.BRANCH = t61.BRANCHSN LEFT JOIN zt_user t71 on t1.RESOLVEDBY = t71.account INNER JOIN (select tt.id from zt_build tt where tt.deleted = '0' and tt.id in ( 	select t1.build from zt_testtask t1 where FIND_IN_SET(t1.id,(SELECT tasks from zt_testreport where id = #{srf.datacontext.srfparentkey} )))) t81 on FIND_IN_SET(t81.id,t1.openedBuild)  ]]>
		<trim prefix="where" prefixOverrides="and">
			<if test="true">
                <![CDATA[ AND t1.DELETED = '0' ]]>
            </if>
			<if test="true">
                <![CDATA[ AND ( t1.openedDate > (select tt.`begin` from  zt_testreport tt  where tt.id =  #{srf.datacontext.srfparentkey}  ) and t1.openedDate < (select CONCAT(DATE_FORMAT(tt.`end`,'%Y-%m-%d'),' 23:59:59') from  zt_testreport tt  where tt.id =  #{srf.datacontext.srfparentkey}  ) and not EXISTS(select 1 from zt_build t where FIND_IN_SET(t.id,t1.openedBuild) and FIND_IN_SET(t.id,(select GROUP_CONCAT(tt.id) from (select tt.* from zt_build tt where  tt.id in ( 	select t1.build from zt_testtask t1 where FIND_IN_SET(t1.id,(SELECT tasks from zt_testreport where id =  #{srf.datacontext.srfparentkey} )))) tt GROUP BY tt.product)) = 0) and FIND_IN_SET('trunk',t1.openedBuild) = 0 ) ]]>
            </if>
			<if test="true">
                <![CDATA[ AND t1.RESOLVEDBY is not null and t1.RESOLVEDBY <> '' ]]>
            </if>
			<include refid="searchMode" />
		</trim>
    </sql>
	
	<select id="selectBuildProduceBugRESOLVEDBY_Project"  parameterType="cn.ibizlab.pms.core.zentao.filter.BugSearchContext" resultMap="BugResultMap">
		<include refid="BuildProduceBugRESOLVEDBY_Project" />
	</select>

    <!--数据查询[BuildProduceBugResolution_Project]-->
    <sql id="BuildProduceBugResolution_Project" databaseId="mysql">
		<![CDATA[ SELECT t1.`ACTIVATEDCOUNT`, t1.`ACTIVATEDDATE`, t1.`ASSIGNEDDATE`, t1.`ASSIGNEDTO`, t1.`BRANCH`, t61.`NAME` AS `BRANCHNAME`, t1.`BROWSER`, t1.`CASE`, t1.`CASEVERSION`, t1.`CLOSEDBY`, t1.`CLOSEDDATE`, t1.`COLOR`, t1.`CONFIRMED`, t1.`DEADLINE`, t1.`DELETED`, t1.`DUPLICATEBUG`, t1.`ENTRY`, t1.`FOUND`, t1.`HARDWARE`, t1.`ID`, 0 AS `ISFAVORITES`, t1.`KEYWORDS`, t1.`LASTEDITEDBY`, t1.`LASTEDITEDDATE`, t1.`LINES`, t1.`LINKBUG`, t1.`MAILTO`, t1.`MODULE`, t51.`NAME` AS `MODULENAME`, (SELECT GROUP_CONCAT( tt.NAME SEPARATOR '>' )  FROM zt_module tt WHERE FIND_IN_SET( tt.id, t51.path ) AND tt.type = 'story'  GROUP BY tt.root ) AS `MODULENAME1`, t1.`OPENEDBUILD`, t1.`OPENEDBY`, t1.`OPENEDDATE`, t1.`OS`, (case when t1.DEADLINE = '0000-00-00' then 0 else datediff(t1.deadline, now() ) end) AS `OVERDUEBUGS`, t1.`PLAN`, t1.`PRI`, t1.`PRODUCT`, t11.`NAME` AS `PRODUCTNAME`, t1.`PROJECT`, t21.`NAME` AS `PROJECTNAME`, t1.`REPO`, t1.`REPOTYPE`, t1.`RESOLUTION`, t1.`RESOLVEDBUILD`, t1.`RESOLVEDBY`, t1.`RESOLVEDDATE`, t1.`RESULT`, t1.`SEVERITY`, t1.`STATUS`, t1.`STORY`, t31.`TITLE` AS `STORYNAME`, t1.`STORYVERSION`, t1.`SUBSTATUS`, t1.`TASK`, t41.`NAME` AS `TASKNAME`, t1.`TESTTASK`, t1.`TITLE`, t1.`TOSTORY`, t1.`TOTASK`, t1.`TYPE`, t1.`V1`, t1.`V2`, 	t1.BUGSN FROM 	`zt_bug` t1 	LEFT JOIN zt_product t11 ON t1.PRODUCT = t11.productsn  	LEFT JOIN zt_project t21 ON t1.PROJECT = t21.PROJECTSN  	LEFT JOIN zt_story t31 ON t1.STORY = t31.STORYSN  	LEFT JOIN zt_task t41 ON t1.TASK = t41.TASKSN  	LEFT JOIN zt_module t51 ON t1.MODULE = t51.MODULESN  	LEFT JOIN zt_branch t61 ON t1.BRANCH = t61.BRANCHSN INNER JOIN (select tt.id from zt_build tt where tt.deleted = '0' and tt.id in ( 	select t1.build from zt_testtask t1 where FIND_IN_SET(t1.id,(SELECT tasks from zt_testreport where id = #{srf.datacontext.srfparentkey} )))) t71 on FIND_IN_SET(t71.id,t1.openedBuild)   ]]>
		<trim prefix="where" prefixOverrides="and">
			<if test="true">
                <![CDATA[ AND t1.DELETED = '0' ]]>
            </if>
			<if test="true">
                <![CDATA[ AND ( t1.openedDate > (select tt.`begin` from  zt_testreport tt  where tt.id =  #{srf.datacontext.srfparentkey}  ) and t1.openedDate < (select CONCAT(DATE_FORMAT(tt.`end`,'%Y-%m-%d'),' 23:59:59') from  zt_testreport tt  where tt.id =  #{srf.datacontext.srfparentkey}  ) and not EXISTS(select 1 from zt_build t where FIND_IN_SET(t.id,t1.openedBuild) and FIND_IN_SET(t.id,(select GROUP_CONCAT(tt.id) from (select tt.* from zt_build tt where  tt.id in ( 	select t1.build from zt_testtask t1 where FIND_IN_SET(t1.id,(SELECT tasks from zt_testreport where id =  #{srf.datacontext.srfparentkey} )))) tt GROUP BY tt.product)) = 0) and FIND_IN_SET('trunk',t1.openedBuild) = 0 ) ]]>
            </if>
			<if test="true">
                <![CDATA[ AND t1.`RESOLUTION` is not null and t1.`RESOLUTION` <> '' ]]>
            </if>
			<include refid="searchMode" />
		</trim>
    </sql>
	
	<select id="selectBuildProduceBugResolution_Project"  parameterType="cn.ibizlab.pms.core.zentao.filter.BugSearchContext" resultMap="BugResultMap">
		<include refid="BuildProduceBugResolution_Project" />
	</select>

    <!--数据查询[BuildProduceBugSeverity_Project]-->
    <sql id="BuildProduceBugSeverity_Project" databaseId="mysql">
		<![CDATA[ SELECT t1.`ACTIVATEDCOUNT`, t1.`ACTIVATEDDATE`, t1.`ASSIGNEDDATE`, t1.`ASSIGNEDTO`, t1.`BRANCH`, t61.`NAME` AS `BRANCHNAME`, t1.`BROWSER`, t1.`CASE`, t1.`CASEVERSION`, t1.`CLOSEDBY`, t1.`CLOSEDDATE`, t1.`COLOR`, t1.`CONFIRMED`, t1.`DEADLINE`, t1.`DELETED`, t1.`DUPLICATEBUG`, t1.`ENTRY`, t1.`FOUND`, t1.`HARDWARE`, t1.`ID`, 0 AS `ISFAVORITES`, t1.`KEYWORDS`, t1.`LASTEDITEDBY`, t1.`LASTEDITEDDATE`, t1.`LINES`, t1.`LINKBUG`, t1.`MAILTO`, t1.`MODULE`, t51.`NAME` AS `MODULENAME`, (SELECT GROUP_CONCAT( tt.NAME SEPARATOR '>' )  FROM zt_module tt WHERE FIND_IN_SET( tt.id, t51.path ) AND tt.type = 'story'  GROUP BY tt.root ) AS `MODULENAME1`, t1.`OPENEDBUILD`, t1.`OPENEDBY`, t1.`OPENEDDATE`, t1.`OS`, (case when t1.DEADLINE = '0000-00-00' then 0 else datediff(t1.deadline, now() ) end) AS `OVERDUEBUGS`, t1.`PLAN`, t1.`PRI`, t1.`PRODUCT`, t11.`NAME` AS `PRODUCTNAME`, t1.`PROJECT`, t21.`NAME` AS `PROJECTNAME`, t1.`REPO`, t1.`REPOTYPE`, t1.`RESOLUTION`, t1.`RESOLVEDBUILD`, t1.`RESOLVEDBY`, t1.`RESOLVEDDATE`, t1.`RESULT`, t1.`SEVERITY`, t1.`STATUS`, t1.`STORY`, t31.`TITLE` AS `STORYNAME`, t1.`STORYVERSION`, t1.`SUBSTATUS`, t1.`TASK`, t41.`NAME` AS `TASKNAME`, t1.`TESTTASK`, t1.`TITLE`, t1.`TOSTORY`, t1.`TOTASK`, t1.`TYPE`, t1.`V1`, t1.`V2`, 	t1.BUGSN FROM 	`zt_bug` t1 	LEFT JOIN zt_product t11 ON t1.PRODUCT = t11.ID 	LEFT JOIN zt_project t21 ON t1.PROJECT = t21.ID 	LEFT JOIN zt_story t31 ON t1.STORY = t31.ID 	LEFT JOIN zt_task t41 ON t1.TASK = t41.ID 	LEFT JOIN zt_module t51 ON t1.MODULE = t51.ID 	LEFT JOIN zt_branch t61 ON t1.BRANCH = t61.ID INNER JOIN (select tt.id from zt_build tt where tt.deleted = '0' and tt.id in ( 	select t1.build from zt_testtask t1 where FIND_IN_SET(t1.id,(SELECT tasks from zt_testreport where id = #{srf.datacontext.srfparentkey} )))) t71 on FIND_IN_SET(t71.id,t1.openedBuild)  ]]>
		<trim prefix="where" prefixOverrides="and">
			<if test="true">
                <![CDATA[ AND t1.DELETED = '0' ]]>
            </if>
			<if test="true">
                <![CDATA[ AND ( t1.openedDate > (select tt.`begin` from  zt_testreport tt  where tt.id =  #{srf.datacontext.srfparentkey}  ) and t1.openedDate < (select CONCAT(DATE_FORMAT(tt.`end`,'%Y-%m-%d'),' 23:59:59') from  zt_testreport tt  where tt.id =  #{srf.datacontext.srfparentkey}  ) and not EXISTS(select 1 from zt_build t where FIND_IN_SET(t.id,t1.openedBuild) and FIND_IN_SET(t.id,(select GROUP_CONCAT(tt.id) from (select tt.* from zt_build tt where  tt.id in ( 	select t1.build from zt_testtask t1 where FIND_IN_SET(t1.id,(SELECT tasks from zt_testreport where id =  #{srf.datacontext.srfparentkey} )))) tt GROUP BY tt.product)) = 0) and FIND_IN_SET('trunk',t1.openedBuild) = 0 ) ]]>
            </if>
			<include refid="searchMode" />
		</trim>
    </sql>
	
	<select id="selectBuildProduceBugSeverity_Project"  parameterType="cn.ibizlab.pms.core.zentao.filter.BugSearchContext" resultMap="BugResultMap">
		<include refid="BuildProduceBugSeverity_Project" />
	</select>

    <!--数据查询[BuildProduceBugStatus_Project]-->
    <sql id="BuildProduceBugStatus_Project" databaseId="mysql">
		<![CDATA[ SELECT t1.`ACTIVATEDCOUNT`, t1.`ACTIVATEDDATE`, t1.`ASSIGNEDDATE`, t1.`ASSIGNEDTO`, t1.`BRANCH`, t61.`NAME` AS `BRANCHNAME`, t1.`BROWSER`, t1.`CASE`, t1.`CASEVERSION`, t1.`CLOSEDBY`, t1.`CLOSEDDATE`, t1.`COLOR`, t1.`CONFIRMED`, t1.`DEADLINE`, t1.`DELETED`, t1.`DUPLICATEBUG`, t1.`ENTRY`, t1.`FOUND`, t1.`HARDWARE`, t1.`ID`, 0 AS `ISFAVORITES`, t1.`KEYWORDS`, t1.`LASTEDITEDBY`, t1.`LASTEDITEDDATE`, t1.`LINES`, t1.`LINKBUG`, t1.`MAILTO`, t1.`MODULE`, t51.`NAME` AS `MODULENAME`, (SELECT GROUP_CONCAT( tt.NAME SEPARATOR '>' )  FROM zt_module tt WHERE FIND_IN_SET( tt.id, t51.path ) AND tt.type = 'story'  GROUP BY tt.root ) AS `MODULENAME1`, t1.`OPENEDBUILD`, t1.`OPENEDBY`, t1.`OPENEDDATE`, t1.`OS`, (case when t1.DEADLINE = '0000-00-00' then 0 else datediff(t1.deadline, now() ) end) AS `OVERDUEBUGS`, t1.`PLAN`, t1.`PRI`, t1.`PRODUCT`, t11.`NAME` AS `PRODUCTNAME`, t1.`PROJECT`, t21.`NAME` AS `PROJECTNAME`, t1.`REPO`, t1.`REPOTYPE`, t1.`RESOLUTION`, t1.`RESOLVEDBUILD`, t1.`RESOLVEDBY`, t1.`RESOLVEDDATE`, t1.`RESULT`, t1.`SEVERITY`, t1.`STATUS`, t1.`STORY`, t31.`TITLE` AS `STORYNAME`, t1.`STORYVERSION`, t1.`SUBSTATUS`, t1.`TASK`, t41.`NAME` AS `TASKNAME`, t1.`TESTTASK`, t1.`TITLE`, t1.`TOSTORY`, t1.`TOTASK`, t1.`TYPE`, t1.`V1`, t1.`V2`, 	t1.BUGSN FROM 	`zt_bug` t1 	LEFT JOIN zt_product t11 ON t1.PRODUCT = t11.ID 	LEFT JOIN zt_project t21 ON t1.PROJECT = t21.ID 	LEFT JOIN zt_story t31 ON t1.STORY = t31.ID 	LEFT JOIN zt_task t41 ON t1.TASK = t41.ID 	LEFT JOIN zt_module t51 ON t1.MODULE = t51.ID 	LEFT JOIN zt_branch t61 ON t1.BRANCH = t61.ID INNER JOIN (select tt.id from zt_build tt where tt.deleted = '0' and tt.id in ( 	select t1.build from zt_testtask t1 where FIND_IN_SET(t1.id,(SELECT tasks from zt_testreport where id = #{srf.datacontext.srfparentkey} )))) t71 on FIND_IN_SET(t71.id,t1.openedBuild)  ]]>
		<trim prefix="where" prefixOverrides="and">
			<if test="true">
                <![CDATA[ AND t1.DELETED = '0' ]]>
            </if>
			<if test="true">
                <![CDATA[ AND ( t1.openedDate > (select tt.`begin` from  zt_testreport tt  where tt.id =  #{srf.datacontext.srfparentkey}  ) and t1.openedDate < (select CONCAT(DATE_FORMAT(tt.`end`,'%Y-%m-%d'),' 23:59:59') from  zt_testreport tt  where tt.id =  #{srf.datacontext.srfparentkey}  ) and not EXISTS(select 1 from zt_build t where FIND_IN_SET(t.id,t1.openedBuild) and FIND_IN_SET(t.id,(select GROUP_CONCAT(tt.id) from (select tt.* from zt_build tt where  tt.id in ( 	select t1.build from zt_testtask t1 where FIND_IN_SET(t1.id,(SELECT tasks from zt_testreport where id =  #{srf.datacontext.srfparentkey} )))) tt GROUP BY tt.product)) = 0) and FIND_IN_SET('trunk',t1.openedBuild) = 0 ) ]]>
            </if>
			<include refid="searchMode" />
		</trim>
    </sql>
	
	<select id="selectBuildProduceBugStatus_Project"  parameterType="cn.ibizlab.pms.core.zentao.filter.BugSearchContext" resultMap="BugResultMap">
		<include refid="BuildProduceBugStatus_Project" />
	</select>

    <!--数据查询[BuildProduceBugType_Project]-->
    <sql id="BuildProduceBugType_Project" databaseId="mysql">
		<![CDATA[ SELECT t1.`ACTIVATEDCOUNT`, t1.`ACTIVATEDDATE`, t1.`ASSIGNEDDATE`, t1.`ASSIGNEDTO`, t1.`BRANCH`, t61.`NAME` AS `BRANCHNAME`, t1.`BROWSER`, t1.`CASE`, t1.`CASEVERSION`, t1.`CLOSEDBY`, t1.`CLOSEDDATE`, t1.`COLOR`, t1.`CONFIRMED`, t1.`DEADLINE`, t1.`DELETED`, t1.`DUPLICATEBUG`, t1.`ENTRY`, t1.`FOUND`, t1.`HARDWARE`, t1.`ID`, 0 AS `ISFAVORITES`, t1.`KEYWORDS`, t1.`LASTEDITEDBY`, t1.`LASTEDITEDDATE`, t1.`LINES`, t1.`LINKBUG`, t1.`MAILTO`, t1.`MODULE`, t51.`NAME` AS `MODULENAME`, (SELECT GROUP_CONCAT( tt.NAME SEPARATOR '>' )  FROM zt_module tt WHERE FIND_IN_SET( tt.id, t51.path ) AND tt.type = 'story'  GROUP BY tt.root ) AS `MODULENAME1`, t1.`OPENEDBUILD`, t1.`OPENEDBY`, t1.`OPENEDDATE`, t1.`OS`, (case when t1.DEADLINE = '0000-00-00' then 0 else datediff(t1.deadline, now() ) end) AS `OVERDUEBUGS`, t1.`PLAN`, t1.`PRI`, t1.`PRODUCT`, t11.`NAME` AS `PRODUCTNAME`, t1.`PROJECT`, t21.`NAME` AS `PROJECTNAME`, t1.`REPO`, t1.`REPOTYPE`, t1.`RESOLUTION`, t1.`RESOLVEDBUILD`, t1.`RESOLVEDBY`, t1.`RESOLVEDDATE`, t1.`RESULT`, t1.`SEVERITY`, t1.`STATUS`, t1.`STORY`, t31.`TITLE` AS `STORYNAME`, t1.`STORYVERSION`, t1.`SUBSTATUS`, t1.`TASK`, t41.`NAME` AS `TASKNAME`, t1.`TESTTASK`, t1.`TITLE`, t1.`TOSTORY`, t1.`TOTASK`, case when t1.`TYPE` = 'codeerror' then '代码错误' when t1.`TYPE` = 'config' then '配置相关' when t1.`TYPE` = 'install' then '安装部署' when t1.`TYPE` = 'security' then '安全相关' when t1.`TYPE` = 'performance' then '性能问题' when t1.`TYPE` = 'standard' then '标准规范' when t1.`TYPE` = 'automation' then '测试脚本' when t1.`TYPE` = 'designdefect' then '设计缺陷' when t1.`TYPE` = 'others' then '其他' else t1.type end as  `TYPE`, t1.`V1`, t1.`V2`, 	t1.BUGSN FROM 	`zt_bug` t1 	LEFT JOIN zt_product t11 ON t1.PRODUCT = t11.id 	LEFT JOIN zt_project t21 ON t1.PROJECT = t21.id 	LEFT JOIN zt_story t31 ON t1.STORY = t31.id 	LEFT JOIN zt_task t41 ON t1.TASK = t41.id 	LEFT JOIN zt_module t51 ON t1.MODULE = t51.id 	LEFT JOIN zt_branch t61 ON t1.BRANCH = t61.id INNER JOIN (select tt.id from zt_build tt where tt.deleted = '0' and tt.id in ( 	select t1.build from zt_testtask t1 where FIND_IN_SET(t1.id,(SELECT tasks from zt_testreport where id = #{srf.datacontext.srfparentkey} )))) t71 on FIND_IN_SET(t71.id,t1.openedBuild)  ]]>
		<trim prefix="where" prefixOverrides="and">
			<if test="true">
                <![CDATA[ AND t1.DELETED = '0' ]]>
            </if>
			<if test="true">
                <![CDATA[ AND ( t1.openedDate > (select tt.`begin` from  zt_testreport tt  where tt.id =  #{srf.datacontext.srfparentkey}  ) and t1.openedDate < (select CONCAT(DATE_FORMAT(tt.`end`,'%Y-%m-%d'),' 23:59:59') from  zt_testreport tt  where tt.id =  #{srf.datacontext.srfparentkey}  ) and not EXISTS(select 1 from zt_build t where FIND_IN_SET(t.id,t1.openedBuild) and FIND_IN_SET(t.id,(select GROUP_CONCAT(tt.id) from (select tt.* from zt_build tt where  tt.id in ( 	select t1.build from zt_testtask t1 where FIND_IN_SET(t1.id,(SELECT tasks from zt_testreport where id =  #{srf.datacontext.srfparentkey} )))) tt GROUP BY tt.product)) = 0) and FIND_IN_SET('trunk',t1.openedBuild) = 0) ]]>
            </if>
			<include refid="searchMode" />
		</trim>
    </sql>
	
	<select id="selectBuildProduceBugType_Project"  parameterType="cn.ibizlab.pms.core.zentao.filter.BugSearchContext" resultMap="BugResultMap">
		<include refid="BuildProduceBugType_Project" />
	</select>

    <!--数据查询[CurUserResolve]-->
    <sql id="CurUserResolve" databaseId="mysql">
		<![CDATA[ SELECT t1.`ACTIVATEDCOUNT`, t1.`ACTIVATEDDATE`, t1.`ASSIGNEDDATE`, t1.`ASSIGNEDTO`, t1.`BRANCH`, t61.`NAME` AS `BRANCHNAME`, t1.`BROWSER`, t1.`CASE`, t71.`TITLE` AS `CASENAME`, t1.`CASEVERSION`, t1.`CLOSEDBY`, t1.`CLOSEDDATE`, t1.`COLOR`, t1.`CONFIRMED`, t1.`DEADLINE`, (case when t1.deadline is null or t1.deadline = '0000-00-00' or t1.deadline = '1970-01-01' then '' when t1.`status` ='active' and t1.deadline <DATE_FORMAT(now(),'%y-%m-%d')  then CONCAT_WS('','延期',TIMESTAMPDIFF(DAY, t1.deadline, now()),'天') else '' end) AS `DELAY`, ( CASE WHEN t1.deadline IS NULL  OR t1.deadline = '0000-00-00'  OR t1.deadline = '1970-01-01' THEN ''  WHEN t1.`status` = 'resolved'  AND t1.deadline < DATE_FORMAT( t1.resolvedDate, '%y-%m-%d' ) THEN CONCAT_WS( '', '延期', TIMESTAMPDIFF( DAY, t1.deadline, t1.resolvedDate ), '天' ) ELSE ''  END ) AS `DELAYRESOLVE`, t1.`DELETED`, t1.`DUPLICATEBUG`, t1.`ENTRY`, t1.`FOUND`, t1.`HARDWARE`, t1.`ID`, 0 AS `ISFAVORITES`, t1.`KEYWORDS`, t1.`LASTEDITEDBY`, t1.`LASTEDITEDDATE`, t1.`LINES`, t1.`LINKBUG`, t1.`MAILTO`, '' AS `MAILTOPK`, t1.`MODULE`, t51.`NAME` AS `MODULENAME`, (case when t1.module = '0' then '/' else (SELECT GROUP_CONCAT( tt.NAME SEPARATOR '>' )  FROM zt_module tt WHERE FIND_IN_SET( tt.id, t51.path ) AND tt.type = 'story'  GROUP BY tt.root limit 0,1) end) AS `MODULENAME1`, t1.`OPENEDBUILD`, t1.`OPENEDBY`, t1.`OPENEDDATE`, t1.`OS`, (case when t1.DEADLINE = '0000-00-00' then 0 else datediff(t1.deadline, now() ) end) AS `OVERDUEBUGS`, t1.`PLAN`, t1.`PRI`, t1.`PRODUCT`, t11.`NAME` AS `PRODUCTNAME`, t1.`PROJECT`, t21.`NAME` AS `PROJECTNAME`, t1.`REPO`, t1.`REPOTYPE`, t1.`RESOLUTION`, t1.`RESOLVEDBUILD`, t1.`RESOLVEDBY`, t1.`RESOLVEDDATE`, t1.`RESULT`, t1.`SEVERITY`, t1.`STATUS`, t1.`STORY`, t31.`TITLE` AS `STORYNAME`, t1.`STORYVERSION`, t1.`SUBSTATUS`, t1.`TASK`, t41.`NAME` AS `TASKNAME`, t1.`TESTTASK`, t1.`TITLE`, t1.`TOSTORY`, t1.`TOTASK`, t1.`TYPE`, t1.`V1`, t1.`V2`, 	t1.BUGSN FROM 	`zt_bug` t1 	LEFT JOIN zt_product t11 ON t1.PRODUCT = t11.ID 	LEFT JOIN zt_project t21 ON t1.PROJECT = t21.ID 	LEFT JOIN zt_story t31 ON t1.STORY = t31.ID 	LEFT JOIN zt_task t41 ON t1.TASK = t41.ID 	LEFT JOIN zt_module t51 ON t1.MODULE = t51.ID 	LEFT JOIN zt_branch t61 ON t1.BRANCH = t61.ID 	LEFT JOIN zt_case t71 ON t1.`CASE` = t71.ID ]]>
		<trim prefix="where" prefixOverrides="and">
			<if test="true">
                <![CDATA[ AND t1.DELETED = '0' ]]>
            </if>
			<if test="true">
                <![CDATA[ AND ( t1.`RESOLVEDBY` =  #{srf.sessioncontext.srfloginname}  AND  ((DATE_FORMAT(t1.resolvedDate,'%Y') = DATE_FORMAT(now(),'%Y')  and #{srf.datacontext.curyear} is null) or (DATE_FORMAT(t1.resolvedDate,'%Y') = #{srf.datacontext.curyear}) ) ) ]]>
            </if>
			<include refid="searchMode" />
		</trim>
    </sql>
	
	<select id="selectCurUserResolve"  parameterType="cn.ibizlab.pms.core.zentao.filter.BugSearchContext" resultMap="BugResultMap">
		<include refid="CurUserResolve" />
	</select>

    <!--数据查询[Default]-->
    <sql id="Default" databaseId="mysql">
		<![CDATA[ SELECT         t1.deadline,         t1.resolvedDate,         t1.closedDate,         t1.resolvedBy,         t1.closedBy, 	t1.`ACTIVATEDDATE`, 	t1.`ASSIGNEDTO`, 	t1.`COLOR`, 	t1.`CONFIRMED`, 	t1.`ID`, 	( SELECT 	( CASE WHEN COUNT( t.IBZ_FAVORITESID ) > 0 THEN 1 ELSE 0 END ) AS ISFAVORITES  FROM 	T_IBZ_FAVORITES t  WHERE 	t.TYPE = 'bug'  	AND t.ACCOUNT = #{srf.sessioncontext.srfloginname} 	AND t.OBJECTID = t1.id  	) AS `ISFAVORITES`, 		t1.`LASTEDITEDDATE`,	 	t1.`OPENEDBY`, 	t1.`OPENEDDATE`, 	t1.`PRI`, 	t1.`PRODUCT`, 	t11.`NAME` AS `PRODUCTNAME`, 	t1.`PROJECT`, 	t21.`NAME` AS `PROJECTNAME`, 	t1.`RESOLUTION`, 	t1.`SEVERITY`, 	t1.`STATUS`,	 	t1.`TITLE`	, 	t1.BUGSN FROM 	`zt_bug` t1 	LEFT JOIN zt_product t11 ON t1.PRODUCT = t11.id 	LEFT JOIN zt_project t21 ON t1.PROJECT = t21.id 	LEFT JOIN zt_story t31 ON t1.STORY = t31.id 	LEFT JOIN zt_task t41 ON t1.TASK = t41.id 	LEFT JOIN zt_module t51 ON t1.MODULE = t51.id 	LEFT JOIN zt_branch t61 ON t1.BRANCH = t61.id ]]>
		<trim prefix="where" prefixOverrides="and">
			<if test="true">
                <![CDATA[ AND t1.DELETED = '0' ]]>
            </if>
			<include refid="searchMode" />
		</trim>
    </sql>
	
	<select id="selectDefault"  parameterType="cn.ibizlab.pms.core.zentao.filter.BugSearchContext" resultMap="BugResultMap">
		<include refid="Default" />
	</select>

    <!--数据查询[ESBulk]-->
    <sql id="ESBulk" databaseId="mysql">
		<![CDATA[ SELECT 	t1.id, 	t1.title, 	t1.color, 	t1.steps, 	t1.deleted, 	t1.product, 	t1.project ,         t1.bugsn FROM 	zt_bug t1 ]]>
		<trim prefix="where" prefixOverrides="and">
			<include refid="searchMode" />
		</trim>
    </sql>
	
	<select id="selectESBulk"  parameterType="cn.ibizlab.pms.core.zentao.filter.BugSearchContext" resultMap="BugResultMap">
		<include refid="ESBulk" />
	</select>

    <!--数据查询[MyAgentBug]-->
    <sql id="MyAgentBug" databaseId="mysql">
		<![CDATA[ SELECT t1.`ACTIVATEDCOUNT`, t1.`ACTIVATEDDATE`, t1.`ASSIGNEDDATE`, case when t71.`AGENTUSER` = #{srf.sessioncontext.srfloginname} then t71.`AGENTUSER` else t1.`ASSIGNEDTO` end as `ASSIGNEDTO`, t1.`BRANCH`, t61.`NAME` AS `BRANCHNAME`, t1.`BROWSER`, t1.`CASE`, t1.`CASEVERSION`, t1.`CLOSEDBY`, t1.`CLOSEDDATE`, t1.`COLOR`, t1.`CONFIRMED`, t1.`DEADLINE`, t1.`DELETED`, t1.`DUPLICATEBUG`, t1.`ENTRY`, t1.`FOUND`, t1.`HARDWARE`, t1.`ID`, (select (case when COUNT(t.IBZ_FAVORITESID) > 0 then 1 else 0 end ) as ISFAVORITES from T_IBZ_FAVORITES t where t.TYPE = 'bug' and t.ACCOUNT = #{srf.sessioncontext.srfloginname} and t.OBJECTID = t1.id) AS `ISFAVORITES`, t1.`KEYWORDS`, t1.`LASTEDITEDBY`, t1.`LASTEDITEDDATE`, t1.`LINES`, t1.`LINKBUG`, t1.`MAILTO`, t1.`MODULE`, t51.`NAME` AS `MODULENAME`, (SELECT GROUP_CONCAT( tt.NAME SEPARATOR '>' )  FROM zt_module tt WHERE FIND_IN_SET( tt.id, t51.path ) AND tt.type = 'story'  GROUP BY tt.root ) AS `MODULENAME1`, t1.`OPENEDBUILD`, t1.`OPENEDBY`, t1.`OPENEDDATE`, t1.`OS`, t1.`PLAN`, t1.`PRI`, t1.`PRODUCT`, t11.`NAME` AS `PRODUCTNAME`, t1.`PROJECT`, t21.`NAME` AS `PROJECTNAME`, t1.`REPO`, t1.`REPOTYPE`, t1.`RESOLUTION`, t1.`RESOLVEDBUILD`, t1.`RESOLVEDBY`, t1.`RESOLVEDDATE`, t1.`RESULT`, t1.`SEVERITY`, t1.`STATUS`, t1.`STORY`, t31.`TITLE` AS `STORYNAME`, t1.`STORYVERSION`, t1.`SUBSTATUS`, t1.`TASK`, t41.`NAME` AS `TASKNAME`, t1.`TESTTASK`, t1.`TITLE`, t1.`TOSTORY`, t1.`TOTASK`, t1.`TYPE`, t1.`V1`, t1.`V2`, (case when t1.DEADLINE = '0000-00-00' then 0 else datediff(t1.deadline, now() ) end) as overduebugs,  ( CASE WHEN t1.deadline IS NULL  			OR t1.deadline = '0000-00-00'  			OR t1.deadline = '1970-01-01' THEN 				''  				WHEN t1.`status` = 'active'  				AND t1.deadline < DATE_FORMAT( now(), '%y-%m-%d' ) THEN 					CONCAT_WS( '', '延期', TIMESTAMPDIFF( DAY, t1.deadline, now()), '天' ) ELSE ''  			END ) AS `DELAY`,  ( CASE WHEN t1.deadline IS NULL  			OR t1.deadline = '0000-00-00'  			OR t1.deadline = '1970-01-01' THEN 				''  				WHEN t1.`status` = 'resolved'  				AND t1.deadline < DATE_FORMAT( t1.resolvedDate, '%y-%m-%d' ) THEN 					CONCAT_WS( '', '延期', TIMESTAMPDIFF( DAY, t1.deadline, t1.resolvedDate ), '天' ) ELSE ''  			END ) AS `DELAYRESOLVE`, 	t1.BUGSN FROM 	`zt_bug` t1 	LEFT JOIN zt_product t11 ON t1.PRODUCT = t11.productsn  	LEFT JOIN zt_project t21 ON t1.PROJECT = t21.PROJECTSN  	LEFT JOIN zt_story t31 ON t1.STORY = t31.STORYSN  	LEFT JOIN zt_task t41 ON t1.TASK = t41.TASKSN  	LEFT JOIN zt_module t51 ON t1.MODULE = t51.MODULESN  	LEFT JOIN zt_branch t61 ON t1.BRANCH = t61.BRANCHSN LEFT JOIN t_ibz_agent t71 ON t1.assignedTo = t71.CREATEMANNAME and DATE_FORMAT(now(), '%Y-%m-%d') >= t71.AGENTBEGIN and DATE_FORMAT(now(), '%Y-%m-%d') <= t71.AGENTEND ]]>
		<trim prefix="where" prefixOverrides="and">
			<if test="true">
                <![CDATA[ AND t1.deleted = '0' ]]>
            </if>
			<include refid="searchMode" />
		</trim>
    </sql>
	
	<select id="selectMyAgentBug"  parameterType="cn.ibizlab.pms.core.zentao.filter.BugSearchContext" resultMap="BugResultMap">
		<include refid="MyAgentBug" />
	</select>

    <!--数据查询[MyCurOpenedBug]-->
    <sql id="MyCurOpenedBug" databaseId="mysql">
		<![CDATA[ SELECT t1.`ACTIVATEDCOUNT`, t1.`ACTIVATEDDATE`, t1.`ASSIGNEDDATE`, t1.`ASSIGNEDTO`, t1.`BRANCH`, t61.`NAME` AS `BRANCHNAME`, t1.`BROWSER`, t1.`CASE`, t71.`TITLE` AS `CASENAME`, t1.`CASEVERSION`, t1.`CLOSEDBY`, t1.`CLOSEDDATE`, t1.`COLOR`, t1.`CONFIRMED`, t1.`DEADLINE`, (case when t1.deadline is null or t1.deadline = '0000-00-00' or t1.deadline = '1970-01-01' then '' when t1.`status` ='active' and t1.deadline <DATE_FORMAT(now(),'%y-%m-%d')  then CONCAT_WS('','延期',TIMESTAMPDIFF(DAY, t1.deadline, now()),'天') else '' end) AS `DELAY`, ( CASE WHEN t1.deadline IS NULL  OR t1.deadline = '0000-00-00'  OR t1.deadline = '1970-01-01' THEN ''  WHEN t1.`status` = 'resolved'  AND t1.deadline < DATE_FORMAT( t1.resolvedDate, '%y-%m-%d' ) THEN CONCAT_WS( '', '延期', TIMESTAMPDIFF( DAY, t1.deadline, t1.resolvedDate ), '天' ) ELSE ''  END ) AS `DELAYRESOLVE`, t1.`DELETED`, t1.`DUPLICATEBUG`, t1.`ENTRY`, t1.`FOUND`, t1.`HARDWARE`, t1.`ID`, 0 AS `ISFAVORITES`, t1.`KEYWORDS`, t1.`LASTEDITEDBY`, t1.`LASTEDITEDDATE`, t1.`LINES`, t1.`LINKBUG`, t1.`MAILTO`, '' AS `MAILTOPK`, t1.`MODULE`, t51.`NAME` AS `MODULENAME`, (case when t1.module = '0' then '/' else (SELECT GROUP_CONCAT( tt.NAME SEPARATOR '>' )  FROM zt_module tt WHERE FIND_IN_SET( tt.id, t51.path ) AND tt.type = 'story'  GROUP BY tt.root limit 0,1) end) AS `MODULENAME1`, t1.`OPENEDBUILD`, t1.`OPENEDBY`, t1.`OPENEDDATE`, t1.`OS`, (case when t1.DEADLINE = '0000-00-00' then 0 else datediff(t1.deadline, now() ) end) AS `OVERDUEBUGS`, t1.`PLAN`, t1.`PRI`, t1.`PRODUCT`, t11.`NAME` AS `PRODUCTNAME`, t1.`PROJECT`, t21.`NAME` AS `PROJECTNAME`, t1.`REPO`, t1.`REPOTYPE`, t1.`RESOLUTION`, t1.`RESOLVEDBUILD`, t1.`RESOLVEDBY`, t1.`RESOLVEDDATE`, t1.`RESULT`, t1.`SEVERITY`, t1.`STATUS`, t1.`STORY`, t31.`TITLE` AS `STORYNAME`, t1.`STORYVERSION`, t1.`SUBSTATUS`, t1.`TASK`, t41.`NAME` AS `TASKNAME`, t1.`TESTTASK`, t1.`TITLE`, t1.`TOSTORY`, t1.`TOTASK`, t1.`TYPE`, t1.`V1`, t1.`V2`, 	t1.BUGSN FROM 	`zt_bug` t1 	LEFT JOIN zt_product t11 ON t1.PRODUCT = t11.ID 	LEFT JOIN zt_project t21 ON t1.PROJECT = t21.ID 	LEFT JOIN zt_story t31 ON t1.STORY = t31.ID 	LEFT JOIN zt_task t41 ON t1.TASK = t41.ID 	LEFT JOIN zt_module t51 ON t1.MODULE = t51.ID 	LEFT JOIN zt_branch t61 ON t1.BRANCH = t61.ID LEFT JOIN zt_case t71 ON t1.`CASE` = t71.ID  ]]>
		<trim prefix="where" prefixOverrides="and">
			<if test="true">
                <![CDATA[ AND t1.DELETED = '0' ]]>
            </if>
			<if test="true">
                <![CDATA[ AND ( DATE_FORMAT( t1.openedDate, '%Y' ) = DATE_FORMAT(now(), '%Y' )  AND  t1.`OPENEDBY` =  #{srf.sessioncontext.srfloginname} ) ]]>
            </if>
			<include refid="searchMode" />
		</trim>
    </sql>
	
	<select id="selectMyCurOpenedBug"  parameterType="cn.ibizlab.pms.core.zentao.filter.BugSearchContext" resultMap="BugResultMap">
		<include refid="MyCurOpenedBug" />
	</select>

    <!--数据查询[MyFavorites]-->
    <sql id="MyFavorites" databaseId="mysql">
		<![CDATA[ SELECT	 	t1.`ASSIGNEDTO`, 	t1.`COLOR`, 	t1.`CONFIRMED`, 	t1.`ID`, 	( SELECT 	( CASE WHEN COUNT( t.IBZ_FAVORITESID ) > 0 THEN 1 ELSE 0 END ) AS ISFAVORITES  FROM 	T_IBZ_FAVORITES t  WHERE 	t.TYPE = 'bug'  	AND t.ACCOUNT = #{srf.sessioncontext.srfloginname}  	AND t.OBJECTID = t1.id  	) AS `ISFAVORITES`,	 	t1.`OPENEDBY`, 	t1.`OPENEDDATE`, 	t1.`PRI`,	 	t11.`NAME` AS `PRODUCTNAME`, 	t21.`NAME` AS `PROJECTNAME`, 	t1.`RESOLUTION`, 	t1.`STATUS`,	 	t1.`TITLE` , 	t1.BUGSN FROM 	`zt_bug` t1 	LEFT JOIN zt_product t11 ON t1.PRODUCT = t11.ID 	LEFT JOIN zt_project t21 ON t1.PROJECT = t21.ID 	LEFT JOIN zt_story t31 ON t1.STORY = t31.ID 	LEFT JOIN zt_task t41 ON t1.TASK = t41.ID 	LEFT JOIN zt_module t51 ON t1.MODULE = t51.ID 	LEFT JOIN zt_branch t61 ON t1.BRANCH = t61.ID ]]>
		<trim prefix="where" prefixOverrides="and">
			<if test="true">
                <![CDATA[ AND t1.DELETED = '0' ]]>
            </if>
			<if test="true">
                <![CDATA[ AND t1.id in (select t.OBJECTID from T_IBZ_FAVORITES t where t.type = 'bug' and t.account = #{srf.sessioncontext.srfloginname}) ]]>
            </if>
			<include refid="searchMode" />
		</trim>
    </sql>
	
	<select id="selectMyFavorites"  parameterType="cn.ibizlab.pms.core.zentao.filter.BugSearchContext" resultMap="BugResultMap">
		<include refid="MyFavorites" />
	</select>

    <!--数据查询[NotCurPlanLinkBug]-->
    <sql id="NotCurPlanLinkBug" databaseId="mysql">
		<![CDATA[ SELECT t1.`ACTIVATEDCOUNT`, t1.`ACTIVATEDDATE`, t1.`ASSIGNEDDATE`, t1.`ASSIGNEDTO`, t1.`BRANCH`, t61.`NAME` AS `BRANCHNAME`, t1.`BROWSER`, t1.`CASE`, t71.`TITLE` AS `CASENAME`, t1.`CASEVERSION`, t1.`CLOSEDBY`, t1.`CLOSEDDATE`, t1.`COLOR`, t1.`CONFIRMED`, t1.`DEADLINE`, t1.`DELETED`, t1.`DUPLICATEBUG`, t1.`ENTRY`, t1.`FOUND`, t1.`HARDWARE`, t1.`ID`, 0 AS `ISFAVORITES`, t1.`KEYWORDS`, t1.`LASTEDITEDBY`, t1.`LASTEDITEDDATE`, t1.`LINES`, t1.`LINKBUG`, t1.`MAILTO`, t1.`MODULE`, t51.`NAME` AS `MODULENAME`, (case when t1.module = '0' then '/' else (SELECT GROUP_CONCAT( tt.NAME SEPARATOR '>' )  FROM zt_module tt WHERE FIND_IN_SET( tt.id, t51.path ) AND tt.type = 'story'  GROUP BY tt.root limit 0,1) end) AS `MODULENAME1`, t1.`OPENEDBUILD`, t1.`OPENEDBY`, t1.`OPENEDDATE`, t1.`OS`, (case when t1.DEADLINE = '0000-00-00' then 0 else datediff(t1.deadline, now() ) end) AS `OVERDUEBUGS`, t1.`PLAN`, t1.`PRI`, t1.`PRODUCT`, t11.`NAME` AS `PRODUCTNAME`, t1.`PROJECT`, t21.`NAME` AS `PROJECTNAME`, t1.`REPO`, t1.`REPOTYPE`, t1.`RESOLUTION`, t1.`RESOLVEDBUILD`, t1.`RESOLVEDBY`, t1.`RESOLVEDDATE`, t1.`RESULT`, t1.`SEVERITY`, t1.`STATUS`, t1.`STORY`, t31.`TITLE` AS `STORYNAME`, t1.`STORYVERSION`, t1.`SUBSTATUS`, t1.`TASK`, t41.`NAME` AS `TASKNAME`, t1.`TESTTASK`, t1.`TITLE`, t1.`TOSTORY`, t1.`TOTASK`, t1.`TYPE`, t1.`V1`, t1.`V2`, 	t1.BUGSN FROM 	`zt_bug` t1 	LEFT JOIN zt_product t11 ON t1.PRODUCT = t11.ID  	LEFT JOIN zt_project t21 ON t1.PROJECT = t21.ID  	LEFT JOIN zt_story t31 ON t1.STORY = t31.ID  	LEFT JOIN zt_task t41 ON t1.TASK = t41.ID  	LEFT JOIN zt_module t51 ON t1.MODULE = t51.ID  	LEFT JOIN zt_branch t61 ON t1.BRANCH = t61.ID  	LEFT JOIN zt_case t71 ON t1.`CASE` = t71.ID   ]]>
		<trim prefix="where" prefixOverrides="and">
			<if test="true">
                <![CDATA[ AND t1.DELETED = '0' ]]>
            </if>
			<if test="true">
                <![CDATA[ AND t1.plan <> #{srf.webcontext.plan} ]]>
            </if>
			<if test="true">
                <![CDATA[ AND t1.product = #{srf.webcontext.product} ]]>
            </if>
			<if test="true">
                <![CDATA[ AND t1.`status` = 'active' ]]>
            </if>
			<include refid="searchMode" />
		</trim>
    </sql>
	
	<select id="selectNotCurPlanLinkBug"  parameterType="cn.ibizlab.pms.core.zentao.filter.BugSearchContext" resultMap="BugResultMap">
		<include refid="NotCurPlanLinkBug" />
	</select>

    <!--数据查询[ReleaseBugs]-->
    <sql id="ReleaseBugs" databaseId="mysql">
		<![CDATA[ SELECT 	t1.`ASSIGNEDTO`, 	t1.`CONFIRMED`, 	t1.`ID`, 	t1.`OPENEDBY`, 	t1.`OPENEDDATE`, 	t1.`PRI`, 	t1.`RESOLVEDBY`, 	t1.`STATUS`, 	t1.`TITLE` , 	t1.BUGSN FROM 	`zt_bug` t1 	LEFT JOIN zt_product t11 ON t1.PRODUCT = t11.ID 	LEFT JOIN zt_project t21 ON t1.PROJECT = t21.ID 	LEFT JOIN zt_story t31 ON t1.STORY = t31.ID ]]>
		<trim prefix="where" prefixOverrides="and">
			<if test="true">
                <![CDATA[ AND t1.`DELETED` ='0' AND FIND_IN_SET ( t1.ID, (SELECT BUGS FROM ZT_RELEASE WHERE ID= #{srf.datacontext.srfparentkey})) ]]>
            </if>
			<include refid="searchMode" />
		</trim>
    </sql>
	
	<select id="selectReleaseBugs"  parameterType="cn.ibizlab.pms.core.zentao.filter.BugSearchContext" resultMap="BugResultMap">
		<include refid="ReleaseBugs" />
	</select>

    <!--数据查询[ReleaseLeftBugs]-->
    <sql id="ReleaseLeftBugs" databaseId="mysql">
		<![CDATA[ SELECT 	t1.`ASSIGNEDTO`, 	t1.`CONFIRMED`, 	t1.`ID`, 	t1.`OPENEDBY`, 	t1.`OPENEDDATE`, 	t1.`PRI`, 	t1.`RESOLVEDBY`, 	t1.`STATUS`, 	t1.`TITLE`, 	t1.BUGSN FROM 	`zt_bug` t1 	LEFT JOIN zt_product t11 ON t1.PRODUCT = t11.productsn  	LEFT JOIN zt_project t21 ON t1.PROJECT = t21.PROJECTSN  	LEFT JOIN zt_story t31 ON t1.STORY = t31.STORYSN ]]>
		<trim prefix="where" prefixOverrides="and">
			<if test="true">
                <![CDATA[ AND t1.`DELETED` = '0' AND FIND_IN_SET ( t1.ID, (SELECT LEFTBUGS FROM ZT_RELEASE WHERE ID= #{srf.datacontext.srfparentkey})) ]]>
            </if>
			<include refid="searchMode" />
		</trim>
    </sql>
	
	<select id="selectReleaseLeftBugs"  parameterType="cn.ibizlab.pms.core.zentao.filter.BugSearchContext" resultMap="BugResultMap">
		<include refid="ReleaseLeftBugs" />
	</select>

    <!--数据查询[ReleaseLinkableLeftBug]-->
    <sql id="ReleaseLinkableLeftBug" databaseId="mysql">
		<![CDATA[ SELECT 	t1.`ID`, 	t1.`OPENEDBY`, 	t1.`PRI`, 	t1.`RESOLVEDBY`, 	t1.`STATUS`, 	t1.`TITLE` , 	t1.BUGSN FROM 	`zt_bug` t1 	LEFT JOIN zt_product t11 ON t1.PRODUCT = t11.productsn  	LEFT JOIN zt_project t21 ON t1.PROJECT = t21.PROJECTSN  	LEFT JOIN zt_story t31 ON t1.STORY = t31.STORYSN  	LEFT JOIN zt_task t41 ON t1.TASK = t41.TASKSN  	LEFT JOIN zt_module t51 ON t1.MODULE = t51.MODULESN  	LEFT JOIN zt_branch t61 ON t1.BRANCH = t61.BRANCHSN 	LEFT JOIN zt_case t71 ON t1.`CASE` = t71.CASESN ]]>
		<trim prefix="where" prefixOverrides="and">
			<if test="true">
                <![CDATA[ AND t1.DELETED = '0' ]]>
            </if>
			<if test="true">
                <![CDATA[ AND ( t1.`PRODUCT` = #{srf.datacontext.product} ) ]]>
            </if>
			<include refid="searchMode" />
		</trim>
    </sql>
	
	<select id="selectReleaseLinkableLeftBug"  parameterType="cn.ibizlab.pms.core.zentao.filter.BugSearchContext" resultMap="BugResultMap">
		<include refid="ReleaseLinkableLeftBug" />
	</select>

    <!--数据查询[ReleaseLinkableResolvedBug]-->
    <sql id="ReleaseLinkableResolvedBug" databaseId="mysql">
		<![CDATA[ SELECT 	t1.`ID`, 	t1.`OPENEDBY`, 	t1.`PRI`, 	t1.`RESOLVEDBY`, 	t1.`STATUS`, 	t1.`TITLE` 	, 	t1.BUGSN FROM 	`zt_bug` t1 	LEFT JOIN zt_product t11 ON t1.PRODUCT = t11.productsn  	LEFT JOIN zt_project t21 ON t1.PROJECT = t21.PROJECTSN  	LEFT JOIN zt_story t31 ON t1.STORY = t31.STORYSN  	LEFT JOIN zt_task t41 ON t1.TASK = t41.TASKSN  	LEFT JOIN zt_module t51 ON t1.MODULE = t51.MODULESN  	LEFT JOIN zt_branch t61 ON t1.BRANCH = t61.BRANCHSN 	LEFT JOIN zt_case t71 ON t1.`CASE` = t71.casesn ]]>
		<trim prefix="where" prefixOverrides="and">
			<if test="true">
                <![CDATA[ AND t1.DELETED = '0' ]]>
            </if>
			<if test="true">
                <![CDATA[ AND ( t1.`PRODUCT` = #{srf.datacontext.product} ) ]]>
            </if>
			<include refid="searchMode" />
		</trim>
    </sql>
	
	<select id="selectReleaseLinkableResolvedBug"  parameterType="cn.ibizlab.pms.core.zentao.filter.BugSearchContext" resultMap="BugResultMap">
		<include refid="ReleaseLinkableResolvedBug" />
	</select>

    <!--数据查询[ReportBugs]-->
    <sql id="ReportBugs" databaseId="mysql">
		<![CDATA[ SELECT 	t1.`CONFIRMED`, 	t1.`ID`, 	t1.`OPENEDBY`, 	t1.`PRI`, 	t1.`RESOLVEDBY`, 	t1.`RESOLVEDDATE`, 	t1.`STATUS`, 	t1.`TITLE` , 	t1.BUGSN FROM 	`zt_bug` t1 	LEFT JOIN zt_product t11 ON t1.PRODUCT = t11.ID 	LEFT JOIN zt_project t21 ON t1.PROJECT = t21.ID 	LEFT JOIN zt_story t31 ON t1.STORY = t31.ID ]]>
		<trim prefix="where" prefixOverrides="and">
			<if test="true">
                <![CDATA[ AND t1.`DELETED` = '0'  	AND FIND_IN_SET ( t1.ID, ( SELECT BUGS FROM ZT_TESTREPORT WHERE ID = $ { srfdatacontext ( 'srfparentkey', '{\"defname\":\"ID\",\"dename\":\"ZT_TESTREPORT \"}' ) } ) ) ]]>
            </if>
			<include refid="searchMode" />
		</trim>
    </sql>
	
	<select id="selectReportBugs"  parameterType="cn.ibizlab.pms.core.zentao.filter.BugSearchContext" resultMap="BugResultMap">
		<include refid="ReportBugs" />
	</select>

    <!--数据查询[SelectBugByBuild]-->
    <sql id="SelectBugByBuild" databaseId="mysql">
		<![CDATA[ SELECT 	t1.`ACTIVATEDDATE`, 	t1.`ASSIGNEDTO`, 	t1.`CONFIRMED`, 	t1.`ID`, 	0 AS `ISFAVORITES`, 	t1.`LASTEDITEDDATE`, 	t1.`OPENEDBY`, 	t1.`OPENEDDATE`, 	t1.`PRI`, 	t11.`NAME` AS `PRODUCTNAME`, 	t21.`NAME` AS `PROJECTNAME`, 	t1.`RESOLUTION`, 	t1.`STATUS`, 	t1.`TITLE` , 	t1.BUGSN FROM 	`zt_bug` t1 	LEFT JOIN zt_product t11 ON t1.PRODUCT = t11.id  	LEFT JOIN zt_project t21 ON t1.PROJECT = t21.id  	LEFT JOIN zt_story t31 ON t1.STORY = t31.id  	LEFT JOIN zt_task t41 ON t1.TASK = t41.id  	LEFT JOIN zt_module t51 ON t1.MODULE = t51.id  	LEFT JOIN zt_branch t61 ON t1.BRANCH = t61.id  	LEFT JOIN zt_case t71 ON t1.`CASE` = t71.id ]]>
		<trim prefix="where" prefixOverrides="and">
			<if test="true">
                <![CDATA[ AND t1.DELETED = '0' ]]>
            </if>
			<if test="true">
                <![CDATA[ AND ( FIND_IN_SET((select t.build from zt_testtask t inner join zt_testreport tt on t.id = tt.tasks where tt.id = #{srf.datacontext.srfparentkey}  ),t1.OPENEDBUILD)  and t1.openedDate > (select tt.`begin` from  zt_testreport tt  where tt.id = #{srf.datacontext.srfparentkey}  ) and t1.openedDate < (select tt.`end` from  zt_testreport tt  where tt.id = #{srf.datacontext.srfparentkey}  )  AND  (t1.`status` = 'active' or t1.resolvedDate > (select zt_testreport.`end` from zt_testreport where zt_testreport.id =   #{srf.datacontext.srfparentkey}  )) ) ]]>
            </if>
			<include refid="searchMode" />
		</trim>
    </sql>
	
	<select id="selectSelectBugByBuild"  parameterType="cn.ibizlab.pms.core.zentao.filter.BugSearchContext" resultMap="BugResultMap">
		<include refid="SelectBugByBuild" />
	</select>

    <!--数据查询[SelectBugsByProject]-->
    <sql id="SelectBugsByProject" databaseId="mysql">
		<![CDATA[ SELECT DISTINCT 	t1.`ACTIVATEDDATE`, 	t1.`ASSIGNEDTO`,	 	t1.`COLOR`, 	t1.`CONFIRMED`,	 	t1.`ID`, 	0 AS `ISFAVORITES`,	 	t1.`LASTEDITEDDATE`,	 	t1.`OPENEDBY`, 	t1.`OPENEDDATE`,	 	t1.`PRI`, 	t1.`PRODUCT`,	 	t1.`PROJECT`,	 	t1.`RESOLUTION`,	 	t1.`STATUS`,	 	t1.`TITLE`, 	t1.BUGSN FROM 	`zt_bug` t1 	LEFT JOIN zt_product t11 ON t1.PRODUCT = t11.ID 	LEFT JOIN zt_project t21 ON t1.PROJECT = t21.ID 	LEFT JOIN zt_story t31 ON t1.STORY = t31.ID 	LEFT JOIN zt_task t41 ON t1.TASK = t41.ID 	LEFT JOIN zt_module t51 ON t1.MODULE = t51.ID 	LEFT JOIN zt_branch t61 ON t1.BRANCH = t61.ID 	INNER JOIN ( SELECT 	tt.id  FROM 	zt_build tt  WHERE 	tt.deleted = '0'  	AND tt.id IN ( SELECT 	t1.build  FROM 	zt_testtask t1  WHERE 	FIND_IN_SET( 	t1.id, 	( SELECT 	tasks  FROM 	zt_testreport  WHERE 	id = #{srf.datacontext.srfparentkey} )))) t71 on FIND_IN_SET(t71.id,t1.openedBuild) ]]>
		<trim prefix="where" prefixOverrides="and">
			<if test="true">
                <![CDATA[ AND t1.deleted = '0' ]]>
            </if>
			<if test="true">
                <![CDATA[ AND  t1.openedDate > (select tt.`begin` from  zt_testreport tt  where tt.id = #{srf.datacontext.srfparentkey} ) and t1.openedDate < (select CONCAT(DATE_FORMAT(tt.`end`,'%Y-%m-%d'),' 23:59:59') from  zt_testreport tt  where tt.id =#{srf.datacontext.srfparentkey} ) and not EXISTS(select 1 from zt_build t where FIND_IN_SET(t.id,t1.openedBuild) and FIND_IN_SET(t.id,(select GROUP_CONCAT(tt.id) from (select tt.* from zt_build tt where  tt.id in ( 	select t1.build from zt_testtask t1 where FIND_IN_SET(t1.id,(SELECT tasks from zt_testreport where id =#{srf.datacontext.srfparentkey})))) tt GROUP BY tt.product)) = 0) and FIND_IN_SET('trunk',t1.openedBuild) = 0 and  (t1.`status` = 'active' or t1.resolvedDate > (select CONCAT(DATE_FORMAT(tt.`end`,'%Y-%m-%d'),' 23:59:59') from zt_testreport tt where tt.id = #{srf.datacontext.srfparentkey})) ]]>
            </if>
			<include refid="searchMode" />
		</trim>
    </sql>
	
	<select id="selectSelectBugsByProject"  parameterType="cn.ibizlab.pms.core.zentao.filter.BugSearchContext" resultMap="BugResultMap">
		<include refid="SelectBugsByProject" />
	</select>

    <!--数据查询[TaskBug]-->
    <sql id="TaskBug" databaseId="mysql">
		<![CDATA[ SELECT 	t1.id, 	t1.title, t1.bugsn FROM 	zt_bug t1 	 ]]>
		<trim prefix="where" prefixOverrides="and">
			<if test="true">
                <![CDATA[ AND t1.deleted='0'   ]]>
            </if>
			<if test="true">
                <![CDATA[ AND t1.task = #{srf.datacontext.srfparentkey} ]]>
            </if>
			<include refid="searchMode" />
		</trim>
    </sql>
	
	<select id="selectTaskBug"  parameterType="cn.ibizlab.pms.core.zentao.filter.BugSearchContext" resultMap="BugResultMap">
		<include refid="TaskBug" />
	</select>

    <!--数据查询[View]-->
    <sql id="View" databaseId="mysql">
		<![CDATA[ SELECT t1.`ACTIVATEDCOUNT`, t1.`ACTIVATEDDATE`, t1.`ASSIGNEDDATE`, t1.`ASSIGNEDTO`, t1.`BRANCH`, t21.`NAME` AS `BRANCHNAME`, t1.`BROWSER`, t1.`BUGSN`, t1.`CASE`, t41.`TITLE` AS `CASENAME`, t1.`CASEVERSION`, t1.`CLOSEDBY`, t1.`CLOSEDDATE`, t1.`COLOR`, t1.`CONFIRMED`, t1.`DEADLINE`, (case when t1.deadline is null or t1.deadline = '0000-00-00' or t1.deadline = '1970-01-01' then '' when t1.`status` ='active' and t1.deadline <DATE_FORMAT(now(),'%y-%m-%d')  then CONCAT_WS('','延期',TIMESTAMPDIFF(DAY, t1.deadline, now()),'天') else '' end) AS `DELAY`, ( CASE WHEN t1.deadline IS NULL  OR t1.deadline = '0000-00-00'  OR t1.deadline = '1970-01-01' THEN ''  WHEN t1.`status` = 'resolved'  AND t1.deadline < DATE_FORMAT( t1.resolvedDate, '%y-%m-%d' ) THEN CONCAT_WS( '', '延期', TIMESTAMPDIFF( DAY, t1.deadline, t1.resolvedDate ), '天' ) ELSE ''  END ) AS `DELAYRESOLVE`, t1.`DELETED`, t1.`DEPT`, t1.`DEPTNAME`, t1.`DUPLICATEBUG`, t1.`ENTRY`, t1.`FOUND`, t1.`HARDWARE`, t1.`ID`, 0 AS `ISFAVORITES`, t1.`KEYWORDS`, t1.`LASTEDITEDBY`, t1.`LASTEDITEDDATE`, t1.`LINES`, t1.`LINKBUG`, t1.`MAILTO`, '' AS `MAILTOPK`, t1.`MODULE`, t71.`NAME` AS `MODULENAME`, (case when t1.module = '0' then '/' else (SELECT GROUP_CONCAT( tt.NAME SEPARATOR '>' )  FROM zt_module tt WHERE FIND_IN_SET( tt.id, t71.path ) AND tt.type = 'story'  GROUP BY tt.root limit 0,1) end) AS `MODULENAME1`, t1.`OPENEDBUILD`, t1.`OPENEDBY`, t1.`OPENEDDATE`, t1.`ORG`, t1.`ORGNAME`, t1.`OS`, (case when t1.DEADLINE = '0000-00-00' then 0 else datediff(t1.deadline, now() ) end) AS `OVERDUEBUGS`, t1.`PLAN`, t1.`PRI`, t1.`PRODUCT`, t11.`name` AS `PRODUCTNAME`, t1.`PROJECT`, t51.`NAME` AS `PROJECTNAME`, t1.`REPO`, t1.`REPOTYPE`, t1.`RESOLUTION`, t1.`RESOLVEDBUILD`, t1.`RESOLVEDBY`, t1.`RESOLVEDDATE`, t1.`RESULT`, t1.`SEVERITY`, t1.`STATUS`, t1.`STEPS`, t1.`STORY`, t61.`TITLE` AS `STORYNAME`, t1.`STORYVERSION`, t1.`SUBSTATUS`, t1.`TASK`, t31.`NAME` AS `TASKNAME`, t1.`TESTTASK`, t1.`TITLE`, t1.`TOSTORY`, t1.`TOTASK`, t1.`TYPE`, t1.`V1`, t1.`V2` FROM `zt_bug` t1  LEFT JOIN `zt_product` t11 ON t1.`PRODUCT` = t11.`id`  LEFT JOIN `zt_branch` t21 ON t1.`BRANCH` = t21.`ID`  LEFT JOIN `zt_task` t31 ON t1.`TASK` = t31.`ID`  LEFT JOIN `zt_case` t41 ON t1.`CASE` = t41.`ID`  LEFT JOIN `zt_project` t51 ON t1.`PROJECT` = t51.`ID`  LEFT JOIN `zt_story` t61 ON t1.`STORY` = t61.`ID`  LEFT JOIN `zt_module` t71 ON t1.`MODULE` = t71.`ID`   ]]>
		<trim prefix="where" prefixOverrides="and">
			<if test="true">
                <![CDATA[ AND t1.DELETED = '0' ]]>
            </if>
			<include refid="searchMode" />
		</trim>
    </sql>
	
	<select id="selectView"  parameterType="cn.ibizlab.pms.core.zentao.filter.BugSearchContext" resultMap="BugResultMap">
		<include refid="View" />
	</select>

</mapper>

