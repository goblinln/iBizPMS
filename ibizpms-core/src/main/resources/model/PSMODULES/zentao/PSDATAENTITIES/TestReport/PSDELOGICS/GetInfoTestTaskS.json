{
  "codeName" : "GetInfoTestTaskS",
  "defaultParamName" : "Default",
  "dynaModelFilePath" : "PSMODULES/zentao/PSDATAENTITIES/TestReport/PSDELOGICS/GetInfoTestTaskS.json",
  "logicName" : "根据测试单获取相应信息（项目报告）（多测试）",
  "name" : "根据测试单获取相应信息（项目报告）（多测试）",
  "getPSDELogicNodes" : [ {
    "codeName" : "Rawsqlcall4",
    "getDstPSDELogicParam" : {
      "modelref" : true,
      "id" : "Default"
    },
    "logicNodeType" : "RAWSQLCALL",
    "name" : "获取相应需求",
    "getPSDELogicLinks" : [ {
      "getDstPSDELogicNode" : {
        "modelref" : true,
        "id" : "Rawsqlcall3"
      },
      "name" : "连接7844",
      "getSrcPSDELogicNode" : {
        "modelref" : true,
        "id" : "Rawsqlcall4"
      },
      "defaultLink" : false
    } ],
    "getPSDELogicNodeParams" : [ {
      "name" : "Default[BUILDS]",
      "paramAction" : "SQLPARAM",
      "srcFieldName" : "BUILDS",
      "getSrcPSDELogicParam" : {
        "modelref" : true,
        "id" : "Default"
      },
      "srcValueType" : "SRCDLPARAM"
    } ],
    "sql" : "select case when GROUP_CONCAT(t1.id) is null then '' else GROUP_CONCAT(t1.id) end as stories from ( select DISTINCT t1.* from zt_story t1 \nleft join zt_build t11 on FIND_IN_SET(t1.id,t11.stories)\nwhere t1.deleted = '0' and  FIND_IN_SET(t11.id,?) ) t1 GROUP BY t1.product",
    "fillDstLogicParam" : true,
    "parallelOutput" : true
  }, {
    "codeName" : "Prepareparam1",
    "logicNodeType" : "PREPAREPARAM",
    "name" : "准备参数",
    "getPSDELogicLinks" : [ {
      "getDstPSDELogicNode" : {
        "modelref" : true,
        "id" : "Rawsqlcall2"
      },
      "name" : "连接3676",
      "getSrcPSDELogicNode" : {
        "modelref" : true,
        "id" : "Prepareparam1"
      },
      "defaultLink" : false
    } ],
    "getPSDELogicNodeParams" : [ {
      "dstFieldName" : "OBJECTID",
      "getDstPSDELogicParam" : {
        "modelref" : true,
        "id" : "Default"
      },
      "name" : "Default[PROJECT] ==> Default[OBJECTID]",
      "paramAction" : "SETPARAMVALUE",
      "srcFieldName" : "PROJECT",
      "getSrcPSDELogicParam" : {
        "modelref" : true,
        "id" : "Default"
      },
      "srcValueType" : "SRCDLPARAM"
    }, {
      "dstFieldName" : "OBJECTTYPE",
      "getDstPSDELogicParam" : {
        "modelref" : true,
        "id" : "Default"
      },
      "name" : "直接值[project] ==> Default[OBJECTTYPE]",
      "paramAction" : "SETPARAMVALUE",
      "srcValue" : "project",
      "srcValueType" : "SRCVALUE"
    } ],
    "parallelOutput" : true
  }, {
    "codeName" : "Rawsqlcall7",
    "getDstPSDELogicParam" : {
      "modelref" : true,
      "id" : "Default"
    },
    "logicNodeType" : "RAWSQLCALL",
    "name" : "获取产品",
    "getPSDELogicLinks" : [ {
      "getDstPSDELogicNode" : {
        "modelref" : true,
        "id" : "Rawsqlcall4"
      },
      "name" : "连接2910",
      "getSrcPSDELogicNode" : {
        "modelref" : true,
        "id" : "Rawsqlcall7"
      },
      "defaultLink" : false
    } ],
    "getPSDELogicNodeParams" : [ {
      "name" : "Default[TASKS]",
      "paramAction" : "SQLPARAM",
      "srcFieldName" : "TASKS",
      "getSrcPSDELogicParam" : {
        "modelref" : true,
        "id" : "Default"
      },
      "srcValueType" : "SRCDLPARAM"
    } ],
    "sql" : "select t.product  from (select DISTINCT t.product from zt_testtask t where t.deleted = '0' and FIND_IN_SET(t.id,?)) t  LIMIT 0,1",
    "fillDstLogicParam" : true,
    "parallelOutput" : true
  }, {
    "codeName" : "Rawsqlcall5",
    "getDstPSDELogicParam" : {
      "modelref" : true,
      "id" : "Default"
    },
    "logicNodeType" : "RAWSQLCALL",
    "name" : "获取影响Bug",
    "getPSDELogicLinks" : [ {
      "getDstPSDELogicNode" : {
        "modelref" : true,
        "id" : "Rawsqlcall1"
      },
      "name" : "连接8985",
      "getSrcPSDELogicNode" : {
        "modelref" : true,
        "id" : "Rawsqlcall5"
      },
      "defaultLink" : false
    } ],
    "getPSDELogicNodeParams" : [ {
      "name" : "Default[PRODUCT]",
      "paramAction" : "SQLPARAM",
      "srcFieldName" : "PRODUCT",
      "getSrcPSDELogicParam" : {
        "modelref" : true,
        "id" : "Default"
      },
      "srcValueType" : "SRCDLPARAM"
    }, {
      "name" : "Default[BEGIN]",
      "paramAction" : "SQLPARAM",
      "srcFieldName" : "BEGIN",
      "getSrcPSDELogicParam" : {
        "modelref" : true,
        "id" : "Default"
      },
      "srcValueType" : "SRCDLPARAM"
    }, {
      "name" : "Default[TASKS]",
      "paramAction" : "SQLPARAM",
      "srcFieldName" : "TASKS",
      "getSrcPSDELogicParam" : {
        "modelref" : true,
        "id" : "Default"
      },
      "srcValueType" : "SRCDLPARAM"
    }, {
      "name" : "Default[BEGIN]",
      "paramAction" : "SQLPARAM",
      "srcFieldName" : "BEGIN",
      "getSrcPSDELogicParam" : {
        "modelref" : true,
        "id" : "Default"
      },
      "srcValueType" : "SRCDLPARAM"
    }, {
      "name" : "Default[END]",
      "paramAction" : "SQLPARAM",
      "srcFieldName" : "END",
      "getSrcPSDELogicParam" : {
        "modelref" : true,
        "id" : "Default"
      },
      "srcValueType" : "SRCDLPARAM"
    } ],
    "sql" : "select GROUP_CONCAT(t1.id) as bugs from zt_bug t1 where t1.deleted = '0' and t1.product = ? and t1.RESOLUTION in('fixed','postponed') and t1.openedDate < ? and (FIND_IN_SET(t1.id,(select GROUP_CONCAT(t2.bugs) from zt_build t2 where t2.id in (select build from zt_testtask t3 where t3.deleted = '0' and FIND_IN_SET(t3.id,?)) ORDER BY t2.product)) or (t1.resolvedBuild = 'trunk' and t1.resolvedDate >= ? and t1.resolvedDate <= CONCAT(?,' 23:59:59'))) GROUP BY t1.product",
    "fillDstLogicParam" : true,
    "parallelOutput" : true
  }, {
    "codeName" : "Rawsqlcall3",
    "getDstPSDELogicParam" : {
      "modelref" : true,
      "id" : "Default"
    },
    "logicNodeType" : "RAWSQLCALL",
    "name" : "获取项目周期",
    "getPSDELogicLinks" : [ {
      "getDstPSDELogicNode" : {
        "modelref" : true,
        "id" : "Rawsqlcall5"
      },
      "name" : "连接4809",
      "getSrcPSDELogicNode" : {
        "modelref" : true,
        "id" : "Rawsqlcall3"
      },
      "defaultLink" : false
    } ],
    "getPSDELogicNodeParams" : [ {
      "name" : "Default[PROJECT]",
      "paramAction" : "SQLPARAM",
      "srcFieldName" : "PROJECT",
      "getSrcPSDELogicParam" : {
        "modelref" : true,
        "id" : "Default"
      },
      "srcValueType" : "SRCDLPARAM"
    } ],
    "sql" : "select  t1.`begin`,t1.`end` , CONCAT_WS( ' ', DATE_FORMAT( now( ), '%Y-%m-%d' ), concat( 'PROJECT#', t1.id ), t1.`name`, '测试报告' ) AS TITLE,t1.name as projectname from zt_project t1 where t1.id = ?",
    "fillDstLogicParam" : true,
    "parallelOutput" : true
  }, {
    "codeName" : "Rawsqlcall6",
    "getDstPSDELogicParam" : {
      "modelref" : true,
      "id" : "Default"
    },
    "logicNodeType" : "RAWSQLCALL",
    "name" : "获取产品数",
    "getPSDELogicLinks" : [ {
      "getDstPSDELogicNode" : {
        "modelref" : true,
        "id" : "Rawsqlcall7"
      },
      "name" : "连接9359",
      "getSrcPSDELogicNode" : {
        "modelref" : true,
        "id" : "Rawsqlcall6"
      },
      "defaultLink" : false
    } ],
    "getPSDELogicNodeParams" : [ {
      "name" : "Default[TASKS]",
      "paramAction" : "SQLPARAM",
      "srcFieldName" : "TASKS",
      "getSrcPSDELogicParam" : {
        "modelref" : true,
        "id" : "Default"
      },
      "srcValueType" : "SRCDLPARAM"
    } ],
    "sql" : "select COUNT(1) as productcnt from ( select DISTINCT t.product from zt_testtask t where t.deleted = '0' and FIND_IN_SET(t.id,?)) t",
    "fillDstLogicParam" : true,
    "parallelOutput" : true
  }, {
    "codeName" : "Deaction1",
    "getDstPSDEAction" : {
      "modelref" : true,
      "path" : "PSMODULES/zentao/PSDATAENTITIES/TestReport/PSDEACTIONS/GetInfoTestTaskOvProject.json"
    },
    "getDstPSDELogicParam" : {
      "modelref" : true,
      "id" : "Default"
    },
    "getDstPSDataEntity" : {
      "modelref" : true,
      "path" : "PSMODULES/zentao/PSDATAENTITIES/TestReport.json"
    },
    "logicNodeType" : "DEACTION",
    "name" : "获取概况信息",
    "parallelOutput" : true
  }, {
    "codeName" : "Begin",
    "logicNodeType" : "BEGIN",
    "name" : "开始",
    "getPSDELogicLinks" : [ {
      "getDstPSDELogicNode" : {
        "modelref" : true,
        "id" : "Prepareparam1"
      },
      "name" : "连接4268",
      "getSrcPSDELogicNode" : {
        "modelref" : true,
        "id" : "Begin"
      },
      "defaultLink" : false
    } ],
    "parallelOutput" : true
  }, {
    "codeName" : "Rawsqlcall1",
    "getDstPSDELogicParam" : {
      "modelref" : true,
      "id" : "Default"
    },
    "logicNodeType" : "RAWSQLCALL",
    "name" : "获取数据",
    "getPSDELogicLinks" : [ {
      "getDstPSDELogicNode" : {
        "modelref" : true,
        "id" : "Deaction1"
      },
      "name" : "连接3605",
      "getSrcPSDELogicNode" : {
        "modelref" : true,
        "id" : "Rawsqlcall1"
      },
      "defaultLink" : false
    } ],
    "getPSDELogicNodeParams" : [ {
      "name" : "Default[PROJECT]",
      "paramAction" : "SQLPARAM",
      "srcFieldName" : "PROJECT",
      "getSrcPSDELogicParam" : {
        "modelref" : true,
        "id" : "Default"
      },
      "srcValueType" : "SRCDLPARAM"
    }, {
      "name" : "Default[TASKS]",
      "paramAction" : "SQLPARAM",
      "srcFieldName" : "TASKS",
      "getSrcPSDELogicParam" : {
        "modelref" : true,
        "id" : "Default"
      },
      "srcValueType" : "SRCDLPARAM"
    } ],
    "sql" : "select case when GROUP_CONCAT(DISTINCT t1.`case` order by t1.`case` asc) is null then '' else GROUP_CONCAT(DISTINCT t1.`case` order by t1.`case` asc) end as cases,case when GROUP_CONCAT(DISTINCT t1.lastRunner) is null then '' else GROUP_CONCAT(DISTINCT t1.lastRunner) end  as MEMBERS\tfrom (select t1.*,? as project from zt_testrun t1 left join zt_case t11 on t1.`case` = t11.id where t11.deleted = '0' and FIND_IN_SET(t1.task, ?)) t1 GROUP BY t1.project",
    "fillDstLogicParam" : true,
    "parallelOutput" : true
  }, {
    "codeName" : "Rawsqlcall2",
    "getDstPSDELogicParam" : {
      "modelref" : true,
      "id" : "Default"
    },
    "logicNodeType" : "RAWSQLCALL",
    "name" : "获取测试单",
    "getPSDELogicLinks" : [ {
      "getDstPSDELogicNode" : {
        "modelref" : true,
        "id" : "Rawsqlcall6"
      },
      "name" : "连接6994",
      "getSrcPSDELogicNode" : {
        "modelref" : true,
        "id" : "Rawsqlcall2"
      },
      "defaultLink" : false
    } ],
    "getPSDELogicNodeParams" : [ {
      "name" : "Default[TASKS]",
      "paramAction" : "SQLPARAM",
      "srcFieldName" : "TASKS",
      "getSrcPSDELogicParam" : {
        "modelref" : true,
        "id" : "Default"
      },
      "srcValueType" : "SRCDLPARAM"
    } ],
    "sql" : "select case when GROUP_CONCAT(DISTINCT t1.build) is null then '' else GROUP_CONCAT(DISTINCT t1.build) end as builds  from zt_testtask t1 where FIND_IN_SET(t1.id, ?) and t1.deleted = '0' GROUP BY t1.project",
    "fillDstLogicParam" : true,
    "parallelOutput" : true
  } ],
  "getPSDELogicParams" : [ {
    "codeName" : "Default",
    "name" : "传入变量",
    "getParamPSDataEntity" : {
      "modelref" : true,
      "path" : "PSMODULES/zentao/PSDATAENTITIES/TestReport.json"
    },
    "default" : true
  }, {
    "codeName" : "testtask",
    "name" : "测试版本",
    "getParamPSDataEntity" : {
      "modelref" : true,
      "path" : "PSMODULES/zentao/PSDATAENTITIES/TestTask.json"
    }
  } ],
  "getStartPSDELogicNode" : {
    "modelref" : true,
    "id" : "Begin"
  },
  "enableBackend" : true,
  "enableFront" : false
}