{
  "getAllPSDEActions" : [ {
    "actionMode" : "CREATE",
    "actionType" : "BUILTIN",
    "codeName" : "Create",
    "dynaModelFilePath" : "PSMODULES/zentao/PSDATAENTITIES/TestReport/PSDEACTIONS/Create.json",
    "logicName" : "Create",
    "name" : "Create",
    "orderValue" : 1,
    "getPSDEActionInput" : {
      "codeName" : "CreateInput",
      "name" : "输入对象",
      "type" : "DTO",
      "output" : true
    },
    "getPSDEActionReturn" : {
      "codeName" : "CreateResult",
      "name" : "返回对象",
      "type" : "VOID"
    },
    "userCat" : "CAT1",
    "builtinAction" : true
  }, {
    "actionMode" : "UPDATE",
    "actionType" : "BUILTIN",
    "codeName" : "Update",
    "dynaModelFilePath" : "PSMODULES/zentao/PSDATAENTITIES/TestReport/PSDEACTIONS/Update.json",
    "logicName" : "Update",
    "name" : "Update",
    "orderValue" : 11,
    "getPSDEActionInput" : {
      "codeName" : "UpdateInput",
      "name" : "输入对象",
      "type" : "DTO",
      "output" : true
    },
    "getPSDEActionReturn" : {
      "codeName" : "UpdateResult",
      "name" : "返回对象",
      "type" : "VOID"
    },
    "userCat" : "CAT1",
    "builtinAction" : true
  }, {
    "actionMode" : "DELETE",
    "actionType" : "BUILTIN",
    "batchActionMode" : 1,
    "codeName" : "Remove",
    "dynaModelFilePath" : "PSMODULES/zentao/PSDATAENTITIES/TestReport/PSDEACTIONS/Remove.json",
    "logicName" : "Remove",
    "name" : "Remove",
    "orderValue" : 21,
    "getPSDEActionInput" : {
      "codeName" : "RemoveInput",
      "name" : "输入对象",
      "type" : "KEYFIELDS"
    },
    "getPSDEActionReturn" : {
      "codeName" : "RemoveResult",
      "name" : "返回对象",
      "type" : "VOID"
    },
    "userCat" : "CAT1",
    "batchAction" : true,
    "builtinAction" : true
  }, {
    "actionMode" : "READ",
    "actionType" : "BUILTIN",
    "codeName" : "Get",
    "dynaModelFilePath" : "PSMODULES/zentao/PSDATAENTITIES/TestReport/PSDEACTIONS/Get.json",
    "logicName" : "Get",
    "name" : "Get",
    "orderValue" : 31,
    "getPSDEActionInput" : {
      "codeName" : "GetInput",
      "name" : "输入对象",
      "type" : "KEYFIELD"
    },
    "getPSDEActionReturn" : {
      "codeName" : "GetResult",
      "name" : "返回对象",
      "type" : "DTO"
    },
    "builtinAction" : true
  }, {
    "actionMode" : "GETDRAFT",
    "actionType" : "BUILTIN",
    "codeName" : "GetDraft",
    "dynaModelFilePath" : "PSMODULES/zentao/PSDATAENTITIES/TestReport/PSDEACTIONS/GetDraft.json",
    "logicName" : "GetDraft",
    "name" : "GetDraft",
    "orderValue" : 41,
    "getPSDEActionInput" : {
      "codeName" : "GetDraftInput",
      "name" : "输入对象",
      "type" : "DTO"
    },
    "getPSDEActionReturn" : {
      "codeName" : "GetDraftResult",
      "name" : "返回对象",
      "type" : "DTO"
    },
    "builtinAction" : true
  }, {
    "actionMode" : "CHECKKEY",
    "actionType" : "BUILTIN",
    "codeName" : "CheckKey",
    "dynaModelFilePath" : "PSMODULES/zentao/PSDATAENTITIES/TestReport/PSDEACTIONS/CheckKey.json",
    "logicName" : "CheckKey",
    "name" : "CheckKey",
    "getPSDEActionInput" : {
      "codeName" : "CheckKeyInput",
      "name" : "输入对象",
      "type" : "DTO"
    },
    "getPSDEActionReturn" : {
      "codeName" : "CheckKeyResult",
      "name" : "返回对象",
      "stdDataType" : 9,
      "type" : "SIMPLE"
    },
    "builtinAction" : true
  }, {
    "actionMode" : "READ",
    "actionType" : "DELOGIC",
    "codeName" : "GetInfoTaskOvByTime",
    "dynaModelFilePath" : "PSMODULES/zentao/PSDATAENTITIES/TestReport/PSDEACTIONS/GetInfoTaskOvByTime.json",
    "logicName" : "根据起始时间获取概况信息",
    "name" : "GetInfoTaskOvByTime",
    "getPSDEActionInput" : {
      "codeName" : "GetInfoTaskOvByTimeInput",
      "name" : "输入对象",
      "type" : "KEYFIELD"
    },
    "getPSDEActionReturn" : {
      "codeName" : "GetInfoTaskOvByTimeResult",
      "name" : "返回对象",
      "type" : "DTO"
    },
    "getPSDELogic" : {
      "modelref" : true,
      "path" : "PSMODULES/zentao/PSDATAENTITIES/TestReport/PSDELOGICS/GetInfoTestTaskOvByTime.json"
    }
  }, {
    "actionMode" : "READ",
    "actionType" : "DELOGIC",
    "codeName" : "GetInfoTestTask",
    "dynaModelFilePath" : "PSMODULES/zentao/PSDATAENTITIES/TestReport/PSDEACTIONS/GetInfoTestTask.json",
    "logicName" : "根据测试单获取相应信息",
    "name" : "GetInfoTestTask",
    "getPSDEActionInput" : {
      "codeName" : "GetInfoTestTaskInput",
      "name" : "输入对象",
      "type" : "KEYFIELD"
    },
    "getPSDEActionReturn" : {
      "codeName" : "GetInfoTestTaskResult",
      "name" : "返回对象",
      "type" : "DTO"
    },
    "getPSDELogic" : {
      "modelref" : true,
      "path" : "PSMODULES/zentao/PSDATAENTITIES/TestReport/PSDELOGICS/GetInfoTestTask.json"
    }
  }, {
    "actionMode" : "READ",
    "actionType" : "DELOGIC",
    "codeName" : "GetInfoTestTaskOvProject",
    "dynaModelFilePath" : "PSMODULES/zentao/PSDATAENTITIES/TestReport/PSDEACTIONS/GetInfoTestTaskOvProject.json",
    "logicName" : "根据测试报告概况信息（项目报告）",
    "name" : "GetInfoTestTaskOvProject",
    "getPSDEActionInput" : {
      "codeName" : "GetInfoTestTaskOvProjectInput",
      "name" : "输入对象",
      "type" : "KEYFIELD"
    },
    "getPSDEActionReturn" : {
      "codeName" : "GetInfoTestTaskOvProjectResult",
      "name" : "返回对象",
      "type" : "DTO"
    },
    "getPSDELogic" : {
      "modelref" : true,
      "path" : "PSMODULES/zentao/PSDATAENTITIES/TestReport/PSDELOGICS/GetInfoTestTaskOvProject.json"
    }
  }, {
    "actionMode" : "READ",
    "actionType" : "DELOGIC",
    "codeName" : "GetInfoTestTaskProject",
    "dynaModelFilePath" : "PSMODULES/zentao/PSDATAENTITIES/TestReport/PSDEACTIONS/GetInfoTestTaskProject.json",
    "logicName" : "根据测试单获取相应信息（项目报告）",
    "name" : "GetInfoTestTaskProject",
    "getPSDEActionInput" : {
      "codeName" : "GetInfoTestTaskProjectInput",
      "name" : "输入对象",
      "type" : "KEYFIELD"
    },
    "getPSDEActionReturn" : {
      "codeName" : "GetInfoTestTaskProjectResult",
      "name" : "返回对象",
      "type" : "DTO"
    },
    "getPSDELogic" : {
      "modelref" : true,
      "path" : "PSMODULES/zentao/PSDATAENTITIES/TestReport/PSDELOGICS/GetInfoTestTaskProject.json"
    }
  }, {
    "actionMode" : "READ",
    "actionType" : "DELOGIC",
    "codeName" : "GetInfoTestTaskR",
    "dynaModelFilePath" : "PSMODULES/zentao/PSDATAENTITIES/TestReport/PSDEACTIONS/GetInfoTestTaskR.json",
    "logicName" : "根据测试单获取相应信息（项目报告）（单测试）",
    "name" : "GetInfoTestTaskR",
    "getPSDEActionInput" : {
      "codeName" : "GetInfoTestTaskRInput",
      "name" : "输入对象",
      "type" : "KEYFIELD"
    },
    "getPSDEActionReturn" : {
      "codeName" : "GetInfoTestTaskRResult",
      "name" : "返回对象",
      "type" : "DTO"
    },
    "getPSDELogic" : {
      "modelref" : true,
      "path" : "PSMODULES/zentao/PSDATAENTITIES/TestReport/PSDELOGICS/GetInfoTestTaskR.json"
    }
  }, {
    "actionMode" : "READ",
    "actionType" : "DELOGIC",
    "codeName" : "GetInfoTestTaskS",
    "dynaModelFilePath" : "PSMODULES/zentao/PSDATAENTITIES/TestReport/PSDEACTIONS/GetInfoTestTaskS.json",
    "logicName" : "根据测试单获取相应信息（项目报告）（测试）",
    "name" : "GetInfoTestTaskS",
    "getPSDEActionInput" : {
      "codeName" : "GetInfoTestTaskSInput",
      "name" : "输入对象",
      "type" : "KEYFIELD"
    },
    "getPSDEActionReturn" : {
      "codeName" : "GetInfoTestTaskSResult",
      "name" : "返回对象",
      "type" : "DTO"
    },
    "getPSDELogic" : {
      "modelref" : true,
      "path" : "PSMODULES/zentao/PSDATAENTITIES/TestReport/PSDELOGICS/GetInfoTestTaskS.json"
    }
  }, {
    "actionMode" : "READ",
    "actionType" : "DELOGIC",
    "codeName" : "GetTestReportBasicInfo",
    "dynaModelFilePath" : "PSMODULES/zentao/PSDATAENTITIES/TestReport/PSDEACTIONS/GetTestReportBasicInfo.json",
    "logicName" : "根据测试报告获取基本信息",
    "name" : "GetTestReportBasicInfo",
    "getPSDEActionInput" : {
      "codeName" : "GetTestReportBasicInfoInput",
      "name" : "输入对象",
      "type" : "KEYFIELD"
    },
    "getPSDEActionReturn" : {
      "codeName" : "GetTestReportBasicInfoResult",
      "name" : "返回对象",
      "type" : "DTO"
    },
    "getPSDELogic" : {
      "modelref" : true,
      "path" : "PSMODULES/zentao/PSDATAENTITIES/TestReport/PSDELOGICS/GetTestReportBasicInfo.json"
    }
  }, {
    "actionMode" : "READ",
    "actionType" : "DELOGIC",
    "codeName" : "GetTestReportProject",
    "dynaModelFilePath" : "PSMODULES/zentao/PSDATAENTITIES/TestReport/PSDEACTIONS/GetTestReportProject.json",
    "logicName" : "根据测试报告获取基本信息（项目报告）",
    "name" : "GetTestReportProject",
    "getPSDEActionInput" : {
      "codeName" : "GetTestReportProjectInput",
      "name" : "输入对象",
      "type" : "KEYFIELD"
    },
    "getPSDEActionReturn" : {
      "codeName" : "GetTestReportProjectResult",
      "name" : "返回对象",
      "type" : "DTO"
    },
    "getPSDELogic" : {
      "modelref" : true,
      "path" : "PSMODULES/zentao/PSDATAENTITIES/TestReport/PSDELOGICS/GetTestReportProject.json"
    }
  }, {
    "actionMode" : "UNKNOWN",
    "actionType" : "BUILTIN",
    "codeName" : "Save",
    "dynaModelFilePath" : "PSMODULES/zentao/PSDATAENTITIES/TestReport/PSDEACTIONS/Save.json",
    "logicName" : "Save",
    "name" : "Save",
    "getPSDEActionInput" : {
      "codeName" : "SaveInput",
      "name" : "输入对象",
      "type" : "DTO"
    },
    "getPSDEActionReturn" : {
      "codeName" : "SaveResult",
      "name" : "返回对象",
      "type" : "VOID"
    },
    "builtinAction" : true
  } ],
  "getAllPSDEDataQueries" : [ {
    "getAllPSDEDataQueryCodes" : [ {
      "dBType" : "MYSQL5",
      "name" : "MySQL5",
      "getPSDEDataQueryCodeConds" : [ {
        "condType" : "CUSTOM",
        "customCond" : "t1.DELETED = '0'",
        "name" : "查询条件"
      } ]
    } ],
    "codeName" : "Default",
    "logicName" : "DEFAULT",
    "name" : "DEFAULT",
    "getPSDEDQMain" : {
      "getJoinPSDataEntity" : {
        "modelref" : true,
        "path" : "PSMODULES/zentao/PSDATAENTITIES/TestReport.json"
      },
      "joinType" : "MAIN",
      "name" : "ZT_TESTREPORT"
    },
    "defaultMode" : true
  }, {
    "getAllPSDEDataQueryCodes" : [ {
      "dBType" : "MYSQL5",
      "name" : "MySQL5",
      "getPSDEDataQueryCodeConds" : [ {
        "condType" : "CUSTOM",
        "customCond" : "t1.DELETED = '0'",
        "name" : "查询条件"
      } ]
    } ],
    "codeName" : "View",
    "logicName" : "默认（全部数据）",
    "name" : "VIEW",
    "getPSDEDQMain" : {
      "getJoinPSDataEntity" : {
        "modelref" : true,
        "path" : "PSMODULES/zentao/PSDATAENTITIES/TestReport.json"
      },
      "joinType" : "MAIN",
      "name" : "ZT_TESTREPORT"
    }
  } ],
  "getAllPSDEDataSets" : [ {
    "codeName" : "Default",
    "logicName" : "DEFAULT",
    "name" : "DEFAULT",
    "getPSDEDataQueries" : [ {
      "modelref" : true,
      "id" : "Default"
    } ],
    "getPSDEDataSetInput" : {
      "codeName" : "DefaultInput",
      "name" : "输入对象",
      "type" : "DTO"
    },
    "getPSDEDataSetReturn" : {
      "codeName" : "DefaultResult",
      "name" : "返回对象",
      "type" : "PAGE"
    },
    "defaultMode" : true,
    "enableBackend" : true,
    "enableFront" : true
  } ],
  "getAllPSDEFields" : [ {
    "getAllPSDEFValueRules" : [ {
      "codeName" : "Default",
      "name" : "默认规则",
      "getPSDEFVRGroupCondition" : {
        "condOp" : "AND",
        "condType" : "GROUP",
        "name" : "默认组"
      },
      "getPSDEField" : {
        "name" : "PRODUCTCNT",
        "codeName" : "Productcnt"
      },
      "ruleInfo" : "默认规则",
      "checkDefault" : true,
      "defaultMode" : true,
      "enableBackend" : true,
      "enableFront" : true
    } ],
    "codeName" : "Productcnt",
    "dEFType" : 5,
    "dataType" : "INT",
    "importOrder" : 1000,
    "logicName" : "项目报告产品数",
    "name" : "PRODUCTCNT",
    "stdDataType" : 9,
    "valueFormat" : "%1$s",
    "phisicalDEField" : false,
    "uIAssistDEField" : true
  }, {
    "getAllPSDEFDTColumns" : [ {
      "columnName" : "DEPTNAME",
      "dBType" : "MYSQL5",
      "name" : "DEPTNAME",
      "queryCodeExp" : "t1.`DEPTNAME`",
      "standardColumnName" : "`DEPTNAME`"
    } ],
    "getAllPSDEFValueRules" : [ {
      "codeName" : "Default",
      "name" : "默认规则",
      "getPSDEFVRGroupCondition" : {
        "condOp" : "AND",
        "condType" : "GROUP",
        "name" : "默认组",
        "getPSDEFVRConditions" : [ {
          "condType" : "STRINGLENGTH",
          "dEFName" : "DEPTNAME",
          "maxValue" : 100,
          "name" : "默认字符串长度",
          "ruleInfo" : "内容长度必须小于等于[100]",
          "includeMaxValue" : true,
          "includeMinValue" : false,
          "keyCond" : true
        } ],
        "ruleInfo" : "内容长度必须小于等于[100]"
      },
      "getPSDEField" : {
        "name" : "DEPTNAME",
        "codeName" : "DeptName"
      },
      "ruleInfo" : "内容长度必须小于等于[100]",
      "checkDefault" : true,
      "defaultMode" : true,
      "enableBackend" : true,
      "enableFront" : true
    } ],
    "codeName" : "DeptName",
    "dEFType" : 1,
    "dataType" : "TEXT",
    "importOrder" : 1000,
    "length" : 100,
    "logicName" : "归属部门名",
    "name" : "DEPTNAME",
    "predefinedType" : "ORGSECTORNAME",
    "stdDataType" : 25,
    "stringLength" : 100,
    "valueFormat" : "%1$s"
  }, {
    "getAllPSDEFValueRules" : [ {
      "codeName" : "Default",
      "name" : "默认规则",
      "getPSDEFVRGroupCondition" : {
        "condOp" : "AND",
        "condType" : "GROUP",
        "name" : "默认组",
        "getPSDEFVRConditions" : [ {
          "condType" : "STRINGLENGTH",
          "dEFName" : "OVERVIEWS",
          "maxValue" : 1048576,
          "name" : "默认字符串长度",
          "ruleInfo" : "内容长度必须小于等于[1048576]",
          "includeMaxValue" : true,
          "includeMinValue" : false,
          "keyCond" : true
        } ],
        "ruleInfo" : "内容长度必须小于等于[1048576]"
      },
      "getPSDEField" : {
        "name" : "OVERVIEWS",
        "codeName" : "Overviews"
      },
      "ruleInfo" : "内容长度必须小于等于[1048576]",
      "checkDefault" : true,
      "defaultMode" : true,
      "enableBackend" : true,
      "enableFront" : true
    } ],
    "codeName" : "Overviews",
    "dEFType" : 5,
    "dataType" : "HTMLTEXT",
    "importOrder" : 1000,
    "length" : 1048576,
    "logicName" : "概况",
    "name" : "OVERVIEWS",
    "stdDataType" : 21,
    "stringLength" : 1048576,
    "valueFormat" : "%1$s",
    "phisicalDEField" : false,
    "queryColumn" : false,
    "uIAssistDEField" : true
  }, {
    "getAllPSDEFDTColumns" : [ {
      "columnName" : "OBJECTID",
      "dBType" : "MYSQL5",
      "name" : "OBJECTID",
      "queryCodeExp" : "t1.`OBJECTID`",
      "standardColumnName" : "`OBJECTID`",
      "valueAutoGen" : true
    } ],
    "getAllPSDEFValueRules" : [ {
      "codeName" : "Default",
      "name" : "默认规则",
      "getPSDEFVRGroupCondition" : {
        "condOp" : "AND",
        "condType" : "GROUP",
        "name" : "默认组"
      },
      "getPSDEField" : {
        "name" : "OBJECTID",
        "codeName" : "ObjectID"
      },
      "ruleInfo" : "默认规则",
      "checkDefault" : true,
      "defaultMode" : true,
      "enableBackend" : true,
      "enableFront" : true
    } ],
    "codeName" : "ObjectID",
    "dEFType" : 1,
    "dataType" : "INT",
    "defaultValue" : "0",
    "importOrder" : 1000,
    "logicName" : "所属对象",
    "name" : "OBJECTID",
    "stdDataType" : 9,
    "valueFormat" : "%1$s"
  }, {
    "getAllPSDEFDTColumns" : [ {
      "columnName" : "CASES",
      "dBType" : "MYSQL5",
      "name" : "CASES",
      "queryCodeExp" : "t1.`CASES`",
      "standardColumnName" : "`CASES`",
      "valueAutoGen" : true
    } ],
    "getAllPSDEFValueRules" : [ {
      "codeName" : "Default",
      "name" : "默认规则",
      "getPSDEFVRGroupCondition" : {
        "condOp" : "AND",
        "condType" : "GROUP",
        "name" : "默认组",
        "getPSDEFVRConditions" : [ {
          "condType" : "STRINGLENGTH",
          "dEFName" : "CASES",
          "maxValue" : 65535,
          "name" : "默认字符串长度",
          "ruleInfo" : "内容长度必须小于等于[65535]",
          "includeMaxValue" : true,
          "includeMinValue" : false,
          "keyCond" : true
        } ],
        "ruleInfo" : "内容长度必须小于等于[65535]"
      },
      "getPSDEField" : {
        "name" : "CASES",
        "codeName" : "Cases"
      },
      "ruleInfo" : "内容长度必须小于等于[65535]",
      "checkDefault" : true,
      "defaultMode" : true,
      "enableBackend" : true,
      "enableFront" : true
    } ],
    "codeName" : "Cases",
    "dEFType" : 1,
    "dataType" : "LONGTEXT",
    "defaultValue" : "#EMPTY",
    "importOrder" : 1000,
    "length" : 65535,
    "logicName" : "用例",
    "name" : "CASES",
    "stdDataType" : 21,
    "stringLength" : 65535,
    "valueFormat" : "%1$s",
    "queryColumn" : false
  }, {
    "getAllPSDEFDTColumns" : [ {
      "columnName" : "MEMBERS",
      "dBType" : "MYSQL5",
      "name" : "MEMBERS",
      "queryCodeExp" : "t1.`MEMBERS`",
      "standardColumnName" : "`MEMBERS`",
      "valueAutoGen" : true
    } ],
    "getAllPSDEFValueRules" : [ {
      "codeName" : "Default",
      "name" : "默认规则",
      "getPSDEFVRGroupCondition" : {
        "condOp" : "AND",
        "condType" : "GROUP",
        "name" : "默认组",
        "getPSDEFVRConditions" : [ {
          "condType" : "STRINGLENGTH",
          "dEFName" : "MEMBERS",
          "maxValue" : 65535,
          "name" : "默认字符串长度",
          "ruleInfo" : "内容长度必须小于等于[65535]",
          "includeMaxValue" : true,
          "includeMinValue" : false,
          "keyCond" : true
        } ],
        "ruleInfo" : "内容长度必须小于等于[65535]"
      },
      "getPSDEField" : {
        "name" : "MEMBERS",
        "codeName" : "Members"
      },
      "ruleInfo" : "内容长度必须小于等于[65535]",
      "checkDefault" : true,
      "defaultMode" : true,
      "enableBackend" : true,
      "enableFront" : true
    } ],
    "codeName" : "Members",
    "dEFType" : 1,
    "dataType" : "LONGTEXT",
    "defaultValue" : "#EMPTY",
    "importOrder" : 1000,
    "length" : 65535,
    "logicName" : "参与人员",
    "name" : "MEMBERS",
    "getPSCodeList" : {
      "modelref" : true,
      "path" : "PSMODULES/zentao/PSCODELISTS/UserRealNameProductTeam.json"
    },
    "stdDataType" : 21,
    "stringLength" : 65535,
    "valueFormat" : "%1$s",
    "queryColumn" : false
  }, {
    "getAllPSDEFDTColumns" : [ {
      "columnName" : "UPDATEBY",
      "dBType" : "MYSQL5",
      "name" : "UPDATEBY",
      "queryCodeExp" : "t1.`UPDATEBY`",
      "standardColumnName" : "`UPDATEBY`"
    } ],
    "getAllPSDEFValueRules" : [ {
      "codeName" : "Default",
      "name" : "默认规则",
      "getPSDEFVRGroupCondition" : {
        "condOp" : "AND",
        "condType" : "GROUP",
        "name" : "默认组",
        "getPSDEFVRConditions" : [ {
          "condType" : "STRINGLENGTH",
          "dEFName" : "UPDATEBY",
          "maxValue" : 100,
          "name" : "默认字符串长度",
          "ruleInfo" : "内容长度必须小于等于[100]",
          "includeMaxValue" : true,
          "includeMinValue" : false,
          "keyCond" : true
        } ],
        "ruleInfo" : "内容长度必须小于等于[100]"
      },
      "getPSDEField" : {
        "name" : "UPDATEBY",
        "codeName" : "UpdateBy"
      },
      "ruleInfo" : "内容长度必须小于等于[100]",
      "checkDefault" : true,
      "defaultMode" : true,
      "enableBackend" : true,
      "enableFront" : true
    } ],
    "codeName" : "UpdateBy",
    "dEFType" : 1,
    "dataType" : "TEXT",
    "importOrder" : 1000,
    "length" : 100,
    "logicName" : "由谁更新",
    "name" : "UPDATEBY",
    "getPSCodeList" : {
      "modelref" : true,
      "path" : "PSMODULES/zentao/PSCODELISTS/UserRealName_Gird.json"
    },
    "predefinedType" : "UPDATEMANNAME",
    "stdDataType" : 25,
    "stringLength" : 100,
    "valueFormat" : "%1$s",
    "systemReserver" : true
  }, {
    "getAllPSDEFDTColumns" : [ {
      "columnName" : "BUGS",
      "dBType" : "MYSQL5",
      "name" : "BUGS",
      "queryCodeExp" : "t1.`BUGS`",
      "standardColumnName" : "`BUGS`",
      "valueAutoGen" : true
    } ],
    "getAllPSDEFValueRules" : [ {
      "codeName" : "Default",
      "name" : "默认规则",
      "getPSDEFVRGroupCondition" : {
        "condOp" : "AND",
        "condType" : "GROUP",
        "name" : "默认组",
        "getPSDEFVRConditions" : [ {
          "condType" : "STRINGLENGTH",
          "dEFName" : "BUGS",
          "maxValue" : 65535,
          "name" : "默认字符串长度",
          "ruleInfo" : "内容长度必须小于等于[65535]",
          "includeMaxValue" : true,
          "includeMinValue" : false,
          "keyCond" : true
        } ],
        "ruleInfo" : "内容长度必须小于等于[65535]"
      },
      "getPSDEField" : {
        "name" : "BUGS",
        "codeName" : "Bugs"
      },
      "ruleInfo" : "内容长度必须小于等于[65535]",
      "checkDefault" : true,
      "defaultMode" : true,
      "enableBackend" : true,
      "enableFront" : true
    } ],
    "codeName" : "Bugs",
    "dEFType" : 1,
    "dataType" : "LONGTEXT",
    "defaultValue" : "#EMPTY",
    "importOrder" : 1000,
    "length" : 65535,
    "logicName" : "测试的Bug",
    "name" : "BUGS",
    "stdDataType" : 21,
    "stringLength" : 65535,
    "valueFormat" : "%1$s",
    "queryColumn" : false
  }, {
    "getAllPSDEFDTColumns" : [ {
      "columnName" : "CREATEDBY",
      "dBType" : "MYSQL5",
      "name" : "CREATEDBY",
      "queryCodeExp" : "t1.`CREATEDBY`",
      "standardColumnName" : "`CREATEDBY`"
    } ],
    "getAllPSDEFValueRules" : [ {
      "codeName" : "Default",
      "name" : "默认规则",
      "getPSDEFVRGroupCondition" : {
        "condOp" : "AND",
        "condType" : "GROUP",
        "name" : "默认组",
        "getPSDEFVRConditions" : [ {
          "condType" : "STRINGLENGTH",
          "dEFName" : "CREATEDBY",
          "maxValue" : 30,
          "name" : "默认字符串长度",
          "ruleInfo" : "内容长度必须小于等于[30]",
          "includeMaxValue" : true,
          "includeMinValue" : false,
          "keyCond" : true
        } ],
        "ruleInfo" : "内容长度必须小于等于[30]"
      },
      "getPSDEField" : {
        "name" : "CREATEDBY",
        "codeName" : "CreatedBy"
      },
      "ruleInfo" : "内容长度必须小于等于[30]",
      "checkDefault" : true,
      "defaultMode" : true,
      "enableBackend" : true,
      "enableFront" : true
    } ],
    "codeName" : "CreatedBy",
    "dEFType" : 1,
    "dataType" : "TEXT",
    "importOrder" : 1000,
    "length" : 30,
    "logicName" : "由谁创建",
    "name" : "CREATEDBY",
    "getPSCodeList" : {
      "modelref" : true,
      "path" : "PSMODULES/zentao/PSCODELISTS/UserRealName_Gird.json"
    },
    "predefinedType" : "CREATEMANNAME",
    "stdDataType" : 25,
    "stringLength" : 30,
    "valueFormat" : "%1$s",
    "systemReserver" : true
  }, {
    "getAllPSDEFDTColumns" : [ {
      "columnName" : "STORIES",
      "dBType" : "MYSQL5",
      "name" : "STORIES",
      "queryCodeExp" : "t1.`STORIES`",
      "standardColumnName" : "`STORIES`",
      "valueAutoGen" : true
    } ],
    "getAllPSDEFValueRules" : [ {
      "codeName" : "Default",
      "name" : "默认规则",
      "getPSDEFVRGroupCondition" : {
        "condOp" : "AND",
        "condType" : "GROUP",
        "name" : "默认组",
        "getPSDEFVRConditions" : [ {
          "condType" : "STRINGLENGTH",
          "dEFName" : "STORIES",
          "maxValue" : 65535,
          "name" : "默认字符串长度",
          "ruleInfo" : "内容长度必须小于等于[65535]",
          "includeMaxValue" : true,
          "includeMinValue" : false,
          "keyCond" : true
        } ],
        "ruleInfo" : "内容长度必须小于等于[65535]"
      },
      "getPSDEField" : {
        "name" : "STORIES",
        "codeName" : "Stories"
      },
      "ruleInfo" : "内容长度必须小于等于[65535]",
      "checkDefault" : true,
      "defaultMode" : true,
      "enableBackend" : true,
      "enableFront" : true
    } ],
    "codeName" : "Stories",
    "dEFType" : 1,
    "dataType" : "LONGTEXT",
    "defaultValue" : "#EMPTY",
    "importOrder" : 1000,
    "length" : 65535,
    "logicName" : "测试的需求",
    "name" : "STORIES",
    "stdDataType" : 21,
    "stringLength" : 65535,
    "valueFormat" : "%1$s",
    "queryColumn" : false
  }, {
    "getAllPSDEFValueRules" : [ {
      "codeName" : "Default",
      "name" : "默认规则",
      "getPSDEFVRGroupCondition" : {
        "condOp" : "AND",
        "condType" : "GROUP",
        "name" : "默认组",
        "getPSDEFVRConditions" : [ {
          "condType" : "STRINGLENGTH",
          "dEFName" : "FILES",
          "maxValue" : 1000,
          "name" : "默认字符串长度",
          "ruleInfo" : "内容长度必须小于等于[1000]",
          "includeMaxValue" : true,
          "includeMinValue" : false,
          "keyCond" : true
        } ],
        "ruleInfo" : "内容长度必须小于等于[1000]"
      },
      "getPSDEField" : {
        "name" : "FILES",
        "codeName" : "Files"
      },
      "ruleInfo" : "内容长度必须小于等于[1000]",
      "checkDefault" : true,
      "defaultMode" : true,
      "enableBackend" : true,
      "enableFront" : true
    } ],
    "codeName" : "Files",
    "dEFType" : 5,
    "dataType" : "TEXT",
    "importOrder" : 1000,
    "length" : 1000,
    "logicName" : "附件",
    "name" : "FILES",
    "stdDataType" : 25,
    "stringLength" : 1000,
    "valueFormat" : "%1$s",
    "phisicalDEField" : false,
    "uIAssistDEField" : true
  }, {
    "getAllPSDEFDTColumns" : [ {
      "columnName" : "TESTREPORTSN",
      "dBType" : "MYSQL5",
      "name" : "TESTREPORTSN",
      "queryCodeExp" : "t1.`TESTREPORTSN`",
      "standardColumnName" : "`TESTREPORTSN`"
    } ],
    "getAllPSDEFValueRules" : [ {
      "codeName" : "Default",
      "name" : "默认规则",
      "getPSDEFVRGroupCondition" : {
        "condOp" : "AND",
        "condType" : "GROUP",
        "name" : "默认组"
      },
      "getPSDEField" : {
        "name" : "TESTREPORTSN",
        "codeName" : "Testreportsn"
      },
      "ruleInfo" : "默认规则",
      "checkDefault" : true,
      "defaultMode" : true,
      "enableBackend" : true,
      "enableFront" : true
    } ],
    "codeName" : "Testreportsn",
    "dEFType" : 1,
    "dataType" : "BIGINT",
    "importOrder" : 1000,
    "length" : 20,
    "logicName" : "测试报告编号",
    "name" : "TESTREPORTSN",
    "stdDataType" : 1,
    "valueFormat" : "%1$s"
  }, {
    "getAllPSDEFValueRules" : [ {
      "codeName" : "Default",
      "name" : "默认规则",
      "getPSDEFVRGroupCondition" : {
        "condOp" : "AND",
        "condType" : "GROUP",
        "name" : "默认组",
        "getPSDEFVRConditions" : [ {
          "condType" : "STRINGLENGTH",
          "dEFName" : "COMMENT",
          "maxValue" : 1048576,
          "name" : "默认字符串长度",
          "ruleInfo" : "内容长度必须小于等于[1048576]",
          "includeMaxValue" : true,
          "includeMinValue" : false,
          "keyCond" : true
        } ],
        "ruleInfo" : "内容长度必须小于等于[1048576]"
      },
      "getPSDEField" : {
        "name" : "COMMENT",
        "codeName" : "Comment"
      },
      "ruleInfo" : "内容长度必须小于等于[1048576]",
      "checkDefault" : true,
      "defaultMode" : true,
      "enableBackend" : true,
      "enableFront" : true
    } ],
    "codeName" : "Comment",
    "dEFType" : 5,
    "dataType" : "HTMLTEXT",
    "importOrder" : 1000,
    "length" : 1048576,
    "logicName" : "备注",
    "name" : "COMMENT",
    "stdDataType" : 21,
    "stringLength" : 1048576,
    "valueFormat" : "%1$s",
    "phisicalDEField" : false,
    "queryColumn" : false,
    "uIAssistDEField" : true
  }, {
    "getAllPSDEFDTColumns" : [ {
      "columnName" : "TASKS",
      "dBType" : "MYSQL5",
      "name" : "TASKS",
      "queryCodeExp" : "t1.`TASKS`",
      "standardColumnName" : "`TASKS`",
      "valueAutoGen" : true
    } ],
    "getAllPSDEFValueRules" : [ {
      "codeName" : "Default",
      "name" : "默认规则",
      "getPSDEFVRGroupCondition" : {
        "condOp" : "AND",
        "condType" : "GROUP",
        "name" : "默认组",
        "getPSDEFVRConditions" : [ {
          "condType" : "STRINGLENGTH",
          "dEFName" : "TASKS",
          "maxValue" : 255,
          "name" : "默认字符串长度",
          "ruleInfo" : "内容长度必须小于等于[255]",
          "includeMaxValue" : true,
          "includeMinValue" : false,
          "keyCond" : true
        } ],
        "ruleInfo" : "内容长度必须小于等于[255]"
      },
      "getPSDEField" : {
        "name" : "TASKS",
        "codeName" : "Tasks"
      },
      "ruleInfo" : "内容长度必须小于等于[255]",
      "checkDefault" : true,
      "defaultMode" : true,
      "enableBackend" : true,
      "enableFront" : true
    } ],
    "codeName" : "Tasks",
    "dEFType" : 1,
    "dataType" : "TEXT",
    "defaultValue" : "#EMPTY",
    "importOrder" : 1000,
    "length" : 255,
    "logicName" : "测试单",
    "name" : "TASKS",
    "getPSCodeList" : {
      "modelref" : true,
      "path" : "PSMODULES/zentao/PSCODELISTS/TestTask.json"
    },
    "stdDataType" : 25,
    "stringLength" : 255,
    "valueFormat" : "%1$s"
  }, {
    "getAllPSDEFDTColumns" : [ {
      "columnName" : "TITLE",
      "dBType" : "MYSQL5",
      "name" : "TITLE",
      "queryCodeExp" : "t1.`TITLE`",
      "standardColumnName" : "`TITLE`"
    } ],
    "getAllPSDEFSearchModes" : [ {
      "codeName" : "N_TITLE_LIKE",
      "name" : "N_TITLE_LIKE",
      "stdDataType" : 25,
      "valueOP" : "LIKE"
    } ],
    "getAllPSDEFValueRules" : [ {
      "codeName" : "Default",
      "name" : "默认规则",
      "getPSDEFVRGroupCondition" : {
        "condOp" : "AND",
        "condType" : "GROUP",
        "name" : "默认组",
        "getPSDEFVRConditions" : [ {
          "condType" : "STRINGLENGTH",
          "dEFName" : "TITLE",
          "maxValue" : 255,
          "name" : "默认字符串长度",
          "ruleInfo" : "内容长度必须小于等于[255]",
          "includeMaxValue" : true,
          "includeMinValue" : false,
          "keyCond" : true
        } ],
        "ruleInfo" : "内容长度必须小于等于[255]"
      },
      "getPSDEField" : {
        "name" : "TITLE",
        "codeName" : "Title"
      },
      "ruleInfo" : "内容长度必须小于等于[255]",
      "checkDefault" : true,
      "defaultMode" : true,
      "enableBackend" : true,
      "enableFront" : true
    } ],
    "codeName" : "Title",
    "dEFType" : 1,
    "dataType" : "TEXT",
    "importOrder" : 1000,
    "length" : 255,
    "logicName" : "标题",
    "name" : "TITLE",
    "stdDataType" : 25,
    "stringLength" : 255,
    "valueFormat" : "%1$s",
    "allowEmpty" : false,
    "enableQuickSearch" : true,
    "majorDEField" : true
  }, {
    "getAllPSDEFDTColumns" : [ {
      "columnName" : "BEGIN",
      "dBType" : "MYSQL5",
      "name" : "BEGIN",
      "queryCodeExp" : "t1.`BEGIN`",
      "standardColumnName" : "`BEGIN`"
    } ],
    "getAllPSDEFValueRules" : [ {
      "codeName" : "Default",
      "name" : "默认规则",
      "getPSDEFVRGroupCondition" : {
        "condOp" : "AND",
        "condType" : "GROUP",
        "name" : "默认组",
        "getPSDEFVRConditions" : [ {
          "condOp" : "OR",
          "condType" : "GROUP",
          "name" : "比较属性[END]",
          "getPSDEFVRConditions" : [ {
            "condOp" : "ISNULL",
            "condType" : "SIMPLE",
            "dEFName" : "END",
            "name" : "属性[END]为空"
          }, {
            "condOp" : "LT",
            "condType" : "SIMPLE",
            "dEFName" : "BEGIN",
            "name" : "小于属性[END]",
            "paramType" : "ENTITYFIELD",
            "paramValue" : "END",
            "ruleInfo" : "值不能大于[结束时间]"
          } ],
          "ruleInfo" : "值不能大于[结束时间]",
          "keyCond" : true
        } ],
        "ruleInfo" : "值不能大于[结束时间]"
      },
      "getPSDEField" : {
        "name" : "BEGIN",
        "codeName" : "Begin"
      },
      "ruleInfo" : "值不能大于[结束时间]",
      "checkDefault" : true,
      "defaultMode" : true,
      "enableBackend" : true,
      "enableFront" : true
    } ],
    "codeName" : "Begin",
    "dEFType" : 1,
    "dataType" : "DATE",
    "importOrder" : 1000,
    "logicName" : "开始时间",
    "name" : "BEGIN",
    "stdDataType" : 5,
    "valueFormat" : "%1$tY-%1$tm-%1$td",
    "allowEmpty" : false
  }, {
    "getAllPSDEFDTColumns" : [ {
      "columnName" : "OBJECTTYPE",
      "dBType" : "MYSQL5",
      "name" : "OBJECTTYPE",
      "queryCodeExp" : "t1.`OBJECTTYPE`",
      "standardColumnName" : "`OBJECTTYPE`",
      "valueAutoGen" : true
    } ],
    "getAllPSDEFSearchModes" : [ {
      "codeName" : "N_OBJECTTYPE_EQ",
      "name" : "N_OBJECTTYPE_EQ",
      "stdDataType" : 25,
      "valueOP" : "EQ"
    } ],
    "getAllPSDEFValueRules" : [ {
      "codeName" : "Default",
      "name" : "默认规则",
      "getPSDEFVRGroupCondition" : {
        "condOp" : "AND",
        "condType" : "GROUP",
        "name" : "默认组",
        "getPSDEFVRConditions" : [ {
          "condType" : "STRINGLENGTH",
          "dEFName" : "OBJECTTYPE",
          "maxValue" : 20,
          "name" : "默认字符串长度",
          "ruleInfo" : "内容长度必须小于等于[20]",
          "includeMaxValue" : true,
          "includeMinValue" : false,
          "keyCond" : true
        } ],
        "ruleInfo" : "内容长度必须小于等于[20]"
      },
      "getPSDEField" : {
        "name" : "OBJECTTYPE",
        "codeName" : "ObjectType"
      },
      "ruleInfo" : "内容长度必须小于等于[20]",
      "checkDefault" : true,
      "defaultMode" : true,
      "enableBackend" : true,
      "enableFront" : true
    } ],
    "codeName" : "ObjectType",
    "dEFType" : 1,
    "dataType" : "SSCODELIST",
    "defaultValue" : "#EMPTY",
    "importOrder" : 1000,
    "length" : 20,
    "logicName" : "对象类型",
    "name" : "OBJECTTYPE",
    "getPSCodeList" : {
      "modelref" : true,
      "path" : "PSMODULES/zentao/PSCODELISTS/Testreport__object_type.json"
    },
    "stdDataType" : 25,
    "stringLength" : 20,
    "valueFormat" : "%1$s"
  }, {
    "getAllPSDEFDTColumns" : [ {
      "columnName" : "ORG",
      "dBType" : "MYSQL5",
      "name" : "ORG",
      "queryCodeExp" : "t1.`ORG`",
      "standardColumnName" : "`ORG`"
    } ],
    "getAllPSDEFValueRules" : [ {
      "codeName" : "Default",
      "name" : "默认规则",
      "getPSDEFVRGroupCondition" : {
        "condOp" : "AND",
        "condType" : "GROUP",
        "name" : "默认组",
        "getPSDEFVRConditions" : [ {
          "condType" : "STRINGLENGTH",
          "dEFName" : "ORG",
          "maxValue" : 100,
          "name" : "默认字符串长度",
          "ruleInfo" : "内容长度必须小于等于[100]",
          "includeMaxValue" : true,
          "includeMinValue" : false,
          "keyCond" : true
        } ],
        "ruleInfo" : "内容长度必须小于等于[100]"
      },
      "getPSDEField" : {
        "name" : "ORG",
        "codeName" : "Org"
      },
      "ruleInfo" : "内容长度必须小于等于[100]",
      "checkDefault" : true,
      "defaultMode" : true,
      "enableBackend" : true,
      "enableFront" : true
    } ],
    "codeName" : "Org",
    "dEFType" : 1,
    "dataType" : "TEXT",
    "importOrder" : 1000,
    "length" : 100,
    "logicName" : "归属组织",
    "name" : "ORG",
    "predefinedType" : "ORGID",
    "stdDataType" : 25,
    "stringLength" : 100,
    "valueFormat" : "%1$s"
  }, {
    "getAllPSDEFDTColumns" : [ {
      "columnName" : "END",
      "dBType" : "MYSQL5",
      "name" : "END",
      "queryCodeExp" : "t1.`END`",
      "standardColumnName" : "`END`"
    } ],
    "getAllPSDEFValueRules" : [ {
      "codeName" : "EndRule",
      "name" : "结束时间规则",
      "getPSDEFVRGroupCondition" : {
        "condOp" : "AND",
        "condType" : "GROUP",
        "name" : "默认组",
        "getPSDEFVRConditions" : [ {
          "condOp" : "GTANDEQ",
          "condType" : "SIMPLE",
          "dEFName" : "END",
          "name" : "[常规条件] 大于等于(>=) 数据对象属性(BEGIN)",
          "paramType" : "ENTITYFIELD",
          "paramValue" : "BEGIN",
          "ruleInfo" : "[结束时间]应不小于[开始时间]",
          "keyCond" : true
        } ],
        "ruleInfo" : "[结束时间]应不小于[开始时间]"
      },
      "getPSDEField" : {
        "name" : "END",
        "codeName" : "End"
      },
      "ruleInfo" : "[结束时间]应不小于[开始时间]",
      "checkDefault" : true,
      "defaultMode" : true,
      "enableBackend" : true,
      "enableFront" : true
    }, {
      "codeName" : "Default",
      "name" : "默认规则",
      "getPSDEFVRGroupCondition" : {
        "condOp" : "AND",
        "condType" : "GROUP",
        "name" : "默认组",
        "getPSDEFVRConditions" : [ {
          "condOp" : "OR",
          "condType" : "GROUP",
          "name" : "比较属性[BEGIN]",
          "getPSDEFVRConditions" : [ {
            "condOp" : "ISNULL",
            "condType" : "SIMPLE",
            "dEFName" : "BEGIN",
            "name" : "属性[BEGIN]为空"
          }, {
            "condOp" : "GT",
            "condType" : "SIMPLE",
            "dEFName" : "END",
            "name" : "大于属性[BEGIN]",
            "paramType" : "ENTITYFIELD",
            "paramValue" : "BEGIN",
            "ruleInfo" : "值不能小于[开始时间]"
          } ],
          "ruleInfo" : "值不能小于[开始时间]",
          "keyCond" : true
        } ],
        "ruleInfo" : "值不能小于[开始时间]"
      },
      "getPSDEField" : {
        "name" : "END",
        "codeName" : "End"
      },
      "ruleInfo" : "值不能小于[开始时间]",
      "checkDefault" : true,
      "defaultMode" : true,
      "enableBackend" : true,
      "enableFront" : true
    } ],
    "codeName" : "End",
    "dEFType" : 1,
    "dataType" : "DATE",
    "importOrder" : 1000,
    "logicName" : "结束时间",
    "name" : "END",
    "stdDataType" : 5,
    "valueFormat" : "%1$tY-%1$tm-%1$td",
    "allowEmpty" : false
  }, {
    "getAllPSDEFDTColumns" : [ {
      "columnName" : "BUILDS",
      "dBType" : "MYSQL5",
      "name" : "BUILDS",
      "queryCodeExp" : "t1.`BUILDS`",
      "standardColumnName" : "`BUILDS`",
      "valueAutoGen" : true
    } ],
    "getAllPSDEFValueRules" : [ {
      "codeName" : "Default",
      "name" : "默认规则",
      "getPSDEFVRGroupCondition" : {
        "condOp" : "AND",
        "condType" : "GROUP",
        "name" : "默认组",
        "getPSDEFVRConditions" : [ {
          "condType" : "STRINGLENGTH",
          "dEFName" : "BUILDS",
          "maxValue" : 255,
          "name" : "默认字符串长度",
          "ruleInfo" : "内容长度必须小于等于[255]",
          "includeMaxValue" : true,
          "includeMinValue" : false,
          "keyCond" : true
        } ],
        "ruleInfo" : "内容长度必须小于等于[255]"
      },
      "getPSDEField" : {
        "name" : "BUILDS",
        "codeName" : "Builds"
      },
      "ruleInfo" : "内容长度必须小于等于[255]",
      "checkDefault" : true,
      "defaultMode" : true,
      "enableBackend" : true,
      "enableFront" : true
    } ],
    "codeName" : "Builds",
    "dEFType" : 1,
    "dataType" : "TEXT",
    "defaultValue" : "#EMPTY",
    "importOrder" : 1000,
    "length" : 255,
    "logicName" : "版本信息",
    "name" : "BUILDS",
    "stdDataType" : 25,
    "stringLength" : 255,
    "valueFormat" : "%1$s"
  }, {
    "getAllPSDEFDTColumns" : [ {
      "columnName" : "ORGNAME",
      "dBType" : "MYSQL5",
      "name" : "ORGNAME",
      "queryCodeExp" : "t1.`ORGNAME`",
      "standardColumnName" : "`ORGNAME`"
    } ],
    "getAllPSDEFValueRules" : [ {
      "codeName" : "Default",
      "name" : "默认规则",
      "getPSDEFVRGroupCondition" : {
        "condOp" : "AND",
        "condType" : "GROUP",
        "name" : "默认组",
        "getPSDEFVRConditions" : [ {
          "condType" : "STRINGLENGTH",
          "dEFName" : "ORGNAME",
          "maxValue" : 100,
          "name" : "默认字符串长度",
          "ruleInfo" : "内容长度必须小于等于[100]",
          "includeMaxValue" : true,
          "includeMinValue" : false,
          "keyCond" : true
        } ],
        "ruleInfo" : "内容长度必须小于等于[100]"
      },
      "getPSDEField" : {
        "name" : "ORGNAME",
        "codeName" : "OrgName"
      },
      "ruleInfo" : "内容长度必须小于等于[100]",
      "checkDefault" : true,
      "defaultMode" : true,
      "enableBackend" : true,
      "enableFront" : true
    } ],
    "codeName" : "OrgName",
    "dEFType" : 1,
    "dataType" : "TEXT",
    "importOrder" : 1000,
    "length" : 100,
    "logicName" : "归属组织名",
    "name" : "ORGNAME",
    "predefinedType" : "ORGNAME",
    "stdDataType" : 25,
    "stringLength" : 100,
    "valueFormat" : "%1$s"
  }, {
    "getAllPSDEFDTColumns" : [ {
      "columnName" : "DEPT",
      "dBType" : "MYSQL5",
      "name" : "DEPT",
      "queryCodeExp" : "t1.`DEPT`",
      "standardColumnName" : "`DEPT`"
    } ],
    "getAllPSDEFValueRules" : [ {
      "codeName" : "Default",
      "name" : "默认规则",
      "getPSDEFVRGroupCondition" : {
        "condOp" : "AND",
        "condType" : "GROUP",
        "name" : "默认组",
        "getPSDEFVRConditions" : [ {
          "condType" : "STRINGLENGTH",
          "dEFName" : "DEPT",
          "maxValue" : 100,
          "name" : "默认字符串长度",
          "ruleInfo" : "内容长度必须小于等于[100]",
          "includeMaxValue" : true,
          "includeMinValue" : false,
          "keyCond" : true
        } ],
        "ruleInfo" : "内容长度必须小于等于[100]"
      },
      "getPSDEField" : {
        "name" : "DEPT",
        "codeName" : "Dept"
      },
      "ruleInfo" : "内容长度必须小于等于[100]",
      "checkDefault" : true,
      "defaultMode" : true,
      "enableBackend" : true,
      "enableFront" : true
    } ],
    "codeName" : "Dept",
    "dEFType" : 1,
    "dataType" : "TEXT",
    "importOrder" : 1000,
    "length" : 100,
    "logicName" : "归属部门",
    "name" : "DEPT",
    "predefinedType" : "ORGSECTORID",
    "stdDataType" : 25,
    "stringLength" : 100,
    "valueFormat" : "%1$s"
  }, {
    "getAllPSDEFDTColumns" : [ {
      "columnName" : "CREATEDDATE",
      "dBType" : "MYSQL5",
      "name" : "CREATEDDATE",
      "queryCodeExp" : "t1.`CREATEDDATE`",
      "standardColumnName" : "`CREATEDDATE`"
    } ],
    "getAllPSDEFValueRules" : [ {
      "codeName" : "Default",
      "name" : "默认规则",
      "getPSDEFVRGroupCondition" : {
        "condOp" : "AND",
        "condType" : "GROUP",
        "name" : "默认组"
      },
      "getPSDEField" : {
        "name" : "CREATEDDATE",
        "codeName" : "CreatedDate"
      },
      "ruleInfo" : "默认规则",
      "checkDefault" : true,
      "defaultMode" : true,
      "enableBackend" : true,
      "enableFront" : true
    } ],
    "codeName" : "CreatedDate",
    "dEFType" : 1,
    "dataType" : "DATETIME",
    "importOrder" : 1000,
    "logicName" : "创建时间",
    "name" : "CREATEDDATE",
    "predefinedType" : "CREATEDATE",
    "stdDataType" : 5,
    "valueFormat" : "%1$tY-%1$tm-%1$td %1$tH:%1$tM:%1$tS",
    "systemReserver" : true
  }, {
    "getAllPSDEFDTColumns" : [ {
      "columnName" : "REPORT",
      "dBType" : "MYSQL5",
      "name" : "REPORT",
      "queryCodeExp" : "t1.`REPORT`",
      "standardColumnName" : "`REPORT`",
      "valueAutoGen" : true
    } ],
    "getAllPSDEFValueRules" : [ {
      "codeName" : "Default",
      "name" : "默认规则",
      "getPSDEFVRGroupCondition" : {
        "condOp" : "AND",
        "condType" : "GROUP",
        "name" : "默认组",
        "getPSDEFVRConditions" : [ {
          "condType" : "STRINGLENGTH",
          "dEFName" : "REPORT",
          "maxValue" : 65535,
          "name" : "默认字符串长度",
          "ruleInfo" : "内容长度必须小于等于[65535]",
          "includeMaxValue" : true,
          "includeMinValue" : false,
          "keyCond" : true
        } ],
        "ruleInfo" : "内容长度必须小于等于[65535]"
      },
      "getPSDEField" : {
        "name" : "REPORT",
        "codeName" : "Report"
      },
      "ruleInfo" : "内容长度必须小于等于[65535]",
      "checkDefault" : true,
      "defaultMode" : true,
      "enableBackend" : true,
      "enableFront" : true
    } ],
    "codeName" : "Report",
    "dEFType" : 1,
    "dataType" : "LONGTEXT",
    "defaultValue" : "#EMPTY",
    "importOrder" : 1000,
    "length" : 65535,
    "logicName" : "总结",
    "name" : "REPORT",
    "stdDataType" : 21,
    "stringLength" : 65535,
    "valueFormat" : "%1$s",
    "queryColumn" : false
  }, {
    "getAllPSDEFDTColumns" : [ {
      "columnName" : "ID",
      "dBType" : "MYSQL5",
      "name" : "ID",
      "queryCodeExp" : "t1.`ID`",
      "standardColumnName" : "`ID`"
    } ],
    "getAllPSDEFSearchModes" : [ {
      "codeName" : "N_ID_EQ",
      "name" : "N_ID_EQ",
      "stdDataType" : 1,
      "valueOP" : "EQ"
    } ],
    "getAllPSDEFValueRules" : [ {
      "codeName" : "Default",
      "name" : "默认规则",
      "getPSDEFVRGroupCondition" : {
        "condOp" : "AND",
        "condType" : "GROUP",
        "name" : "默认组"
      },
      "getPSDEField" : {
        "name" : "ID",
        "codeName" : "Id"
      },
      "ruleInfo" : "默认规则",
      "checkDefault" : true,
      "defaultMode" : true,
      "enableBackend" : true,
      "enableFront" : true
    } ],
    "codeName" : "Id",
    "dEFType" : 1,
    "dataType" : "BIGINT",
    "importOrder" : 1000,
    "length" : 8,
    "logicName" : "编号",
    "name" : "ID",
    "getPSSysSequence" : {
      "modelref" : true,
      "path" : "PSMODULES/ibizpro/PSSYSSEQUENCES/IBZProTestReportSeq.json"
    },
    "sequenceMode" : "CREATE",
    "stdDataType" : 1,
    "valueFormat" : "%1$s",
    "allowEmpty" : false,
    "enableUICreate" : false,
    "enableUIModify" : false,
    "keyDEField" : true,
    "pasteReset" : true
  }, {
    "getAllPSDEFDTColumns" : [ {
      "columnName" : "OWNER",
      "dBType" : "MYSQL5",
      "name" : "OWNER",
      "queryCodeExp" : "t1.`OWNER`",
      "standardColumnName" : "`OWNER`",
      "valueAutoGen" : true
    } ],
    "getAllPSDEFValueRules" : [ {
      "codeName" : "Default",
      "name" : "默认规则",
      "getPSDEFVRGroupCondition" : {
        "condOp" : "AND",
        "condType" : "GROUP",
        "name" : "默认组",
        "getPSDEFVRConditions" : [ {
          "condType" : "STRINGLENGTH",
          "dEFName" : "OWNER",
          "maxValue" : 30,
          "name" : "默认字符串长度",
          "ruleInfo" : "内容长度必须小于等于[30]",
          "includeMaxValue" : true,
          "includeMinValue" : false,
          "keyCond" : true
        } ],
        "ruleInfo" : "内容长度必须小于等于[30]"
      },
      "getPSDEField" : {
        "name" : "OWNER",
        "codeName" : "Owner"
      },
      "ruleInfo" : "内容长度必须小于等于[30]",
      "checkDefault" : true,
      "defaultMode" : true,
      "enableBackend" : true,
      "enableFront" : true
    } ],
    "codeName" : "Owner",
    "dEFType" : 1,
    "dataType" : "TEXT",
    "defaultValue" : "#EMPTY",
    "importOrder" : 1000,
    "length" : 30,
    "logicName" : "负责人",
    "name" : "OWNER",
    "getPSCodeList" : {
      "modelref" : true,
      "path" : "PSMODULES/zentao/PSCODELISTS/UserRealNameProductTeam.json"
    },
    "stdDataType" : 25,
    "stringLength" : 30,
    "valueFormat" : "%1$s"
  }, {
    "getAllPSDEFDTColumns" : [ {
      "columnName" : "DELETED",
      "dBType" : "MYSQL5",
      "name" : "DELETED",
      "queryCodeExp" : "t1.`DELETED`",
      "standardColumnName" : "`DELETED`",
      "valueAutoGen" : true
    } ],
    "getAllPSDEFValueRules" : [ {
      "codeName" : "Default",
      "name" : "默认规则",
      "getPSDEFVRGroupCondition" : {
        "condOp" : "AND",
        "condType" : "GROUP",
        "name" : "默认组",
        "getPSDEFVRConditions" : [ {
          "condType" : "STRINGLENGTH",
          "dEFName" : "DELETED",
          "maxValue" : 1,
          "name" : "默认字符串长度",
          "ruleInfo" : "内容长度必须小于等于[1]",
          "includeMaxValue" : true,
          "includeMinValue" : false,
          "keyCond" : true
        } ],
        "ruleInfo" : "内容长度必须小于等于[1]"
      },
      "getPSDEField" : {
        "name" : "DELETED",
        "codeName" : "Deleted"
      },
      "ruleInfo" : "内容长度必须小于等于[1]",
      "checkDefault" : true,
      "defaultMode" : true,
      "enableBackend" : true,
      "enableFront" : true
    } ],
    "codeName" : "Deleted",
    "dEFType" : 1,
    "dataType" : "TEXT",
    "defaultValue" : "0",
    "importOrder" : 1000,
    "length" : 1,
    "logicName" : "已删除",
    "name" : "DELETED",
    "predefinedType" : "LOGICVALID",
    "stdDataType" : 25,
    "stringLength" : 1,
    "valueFormat" : "%1$s",
    "enableUICreate" : false,
    "enableUIModify" : false
  }, {
    "getAllPSDEFDTColumns" : [ {
      "columnName" : "PROJECTNAME",
      "dBType" : "MYSQL5",
      "name" : "PROJECTNAME",
      "queryCodeExp" : "t11.`NAME`",
      "standardColumnName" : "`PROJECTNAME`"
    } ],
    "getAllPSDEFSearchModes" : [ {
      "codeName" : "N_PROJECTNAME_EQ",
      "name" : "N_PROJECTNAME_EQ",
      "stdDataType" : 25,
      "valueOP" : "EQ"
    }, {
      "codeName" : "N_PROJECTNAME_LIKE",
      "name" : "N_PROJECTNAME_LIKE",
      "stdDataType" : 25,
      "valueOP" : "LIKE"
    } ],
    "getAllPSDEFValueRules" : [ {
      "codeName" : "Default",
      "name" : "默认规则",
      "getPSDEFVRGroupCondition" : {
        "condOp" : "AND",
        "condType" : "GROUP",
        "name" : "默认组",
        "getPSDEFVRConditions" : [ {
          "condType" : "STRINGLENGTH",
          "dEFName" : "PROJECTNAME",
          "maxValue" : 90,
          "name" : "默认字符串长度",
          "ruleInfo" : "内容长度必须小于等于[90]",
          "includeMaxValue" : true,
          "includeMinValue" : false,
          "keyCond" : true
        } ],
        "ruleInfo" : "内容长度必须小于等于[90]"
      },
      "getPSDEField" : {
        "name" : "PROJECTNAME",
        "codeName" : "ProjectName"
      },
      "ruleInfo" : "内容长度必须小于等于[90]",
      "checkDefault" : true,
      "defaultMode" : true,
      "enableBackend" : true,
      "enableFront" : true
    } ],
    "codeName" : "ProjectName",
    "dEFType" : 3,
    "dataType" : "PICKUPTEXT",
    "importOrder" : 1000,
    "length" : 90,
    "logicName" : "所属项目",
    "name" : "PROJECTNAME",
    "getPSDER" : {
      "modelref" : true,
      "path" : "PSMODULES/zentao/PSDATAENTITIES/TestReport/PSDERS/DER1N_ZT_TESTREPORT_ZT_PROJECT_PROJECT.json"
    },
    "getRelatedPSDEField" : {
      "name" : "NAME",
      "codeName" : "Name"
    },
    "stdDataType" : 25,
    "stringLength" : 90,
    "valueFormat" : "%1$s",
    "getValuePSDEField" : {
      "name" : "PROJECT",
      "codeName" : "Project"
    },
    "linkDEField" : true,
    "phisicalDEField" : false
  }, {
    "getAllPSDEFDTColumns" : [ {
      "columnName" : "PRODUCTNAME",
      "dBType" : "MYSQL5",
      "name" : "PRODUCTNAME",
      "queryCodeExp" : "t21.`name`",
      "standardColumnName" : "`PRODUCTNAME`"
    } ],
    "getAllPSDEFSearchModes" : [ {
      "codeName" : "N_PRODUCTNAME_EQ",
      "name" : "N_PRODUCTNAME_EQ",
      "stdDataType" : 25,
      "valueOP" : "EQ"
    }, {
      "codeName" : "N_PRODUCTNAME_LIKE",
      "name" : "N_PRODUCTNAME_LIKE",
      "stdDataType" : 25,
      "valueOP" : "LIKE"
    } ],
    "getAllPSDEFValueRules" : [ {
      "codeName" : "Default",
      "name" : "默认规则",
      "getPSDEFVRGroupCondition" : {
        "condOp" : "AND",
        "condType" : "GROUP",
        "name" : "默认组",
        "getPSDEFVRConditions" : [ {
          "condType" : "STRINGLENGTH",
          "dEFName" : "PRODUCTNAME",
          "maxValue" : 90,
          "name" : "默认字符串长度",
          "ruleInfo" : "内容长度必须小于等于[90]",
          "includeMaxValue" : true,
          "includeMinValue" : false,
          "keyCond" : true
        } ],
        "ruleInfo" : "内容长度必须小于等于[90]"
      },
      "getPSDEField" : {
        "name" : "PRODUCTNAME",
        "codeName" : "ProductName"
      },
      "ruleInfo" : "内容长度必须小于等于[90]",
      "checkDefault" : true,
      "defaultMode" : true,
      "enableBackend" : true,
      "enableFront" : true
    } ],
    "codeName" : "ProductName",
    "dEFType" : 3,
    "dataType" : "PICKUPTEXT",
    "importOrder" : 1000,
    "length" : 90,
    "logicName" : "所属产品",
    "name" : "PRODUCTNAME",
    "getPSDER" : {
      "modelref" : true,
      "path" : "PSMODULES/zentao/PSDATAENTITIES/TestReport/PSDERS/DER1N_ZT_TESTREPORT_ZT_PRODUCT_PRODUCT.json"
    },
    "getRelatedPSDEField" : {
      "name" : "NAME",
      "codeName" : "Name"
    },
    "stdDataType" : 25,
    "stringLength" : 90,
    "valueFormat" : "%1$s",
    "getValuePSDEField" : {
      "name" : "PRODUCT",
      "codeName" : "Product"
    },
    "linkDEField" : true,
    "phisicalDEField" : false
  }, {
    "getAllPSDEFDTColumns" : [ {
      "columnName" : "PRODUCT",
      "dBType" : "MYSQL5",
      "name" : "PRODUCT",
      "queryCodeExp" : "t1.`PRODUCT`",
      "standardColumnName" : "`PRODUCT`",
      "valueAutoGen" : true
    } ],
    "getAllPSDEFSearchModes" : [ {
      "codeName" : "N_PRODUCT_EQ",
      "name" : "N_PRODUCT_EQ",
      "stdDataType" : 1,
      "valueOP" : "EQ"
    } ],
    "getAllPSDEFValueRules" : [ {
      "codeName" : "Default",
      "name" : "默认规则",
      "getPSDEFVRGroupCondition" : {
        "condOp" : "AND",
        "condType" : "GROUP",
        "name" : "默认组"
      },
      "getPSDEField" : {
        "name" : "PRODUCT",
        "codeName" : "Product"
      },
      "ruleInfo" : "默认规则",
      "checkDefault" : true,
      "defaultMode" : true,
      "enableBackend" : true,
      "enableFront" : true
    } ],
    "codeName" : "Product",
    "dEFType" : 1,
    "dataType" : "PICKUP",
    "defaultValue" : "0",
    "importOrder" : 1000,
    "length" : 8,
    "logicName" : "所属产品",
    "name" : "PRODUCT",
    "getPSDER" : {
      "modelref" : true,
      "path" : "PSMODULES/zentao/PSDATAENTITIES/TestReport/PSDERS/DER1N_ZT_TESTREPORT_ZT_PRODUCT_PRODUCT.json"
    },
    "getRelatedPSDEField" : {
      "name" : "ID",
      "codeName" : "Id"
    },
    "stdDataType" : 1,
    "valueFormat" : "%1$s",
    "linkDEField" : true
  }, {
    "getAllPSDEFDTColumns" : [ {
      "columnName" : "PROJECT",
      "dBType" : "MYSQL5",
      "name" : "PROJECT",
      "queryCodeExp" : "t1.`PROJECT`",
      "standardColumnName" : "`PROJECT`",
      "valueAutoGen" : true
    } ],
    "getAllPSDEFSearchModes" : [ {
      "codeName" : "N_PROJECT_EQ",
      "name" : "N_PROJECT_EQ",
      "stdDataType" : 1,
      "valueOP" : "EQ"
    } ],
    "getAllPSDEFValueRules" : [ {
      "codeName" : "Default",
      "name" : "默认规则",
      "getPSDEFVRGroupCondition" : {
        "condOp" : "AND",
        "condType" : "GROUP",
        "name" : "默认组"
      },
      "getPSDEField" : {
        "name" : "PROJECT",
        "codeName" : "Project"
      },
      "ruleInfo" : "默认规则",
      "checkDefault" : true,
      "defaultMode" : true,
      "enableBackend" : true,
      "enableFront" : true
    } ],
    "codeName" : "Project",
    "dEFType" : 1,
    "dataType" : "PICKUP",
    "defaultValue" : "0",
    "importOrder" : 1000,
    "length" : 8,
    "logicName" : "所属项目",
    "name" : "PROJECT",
    "getPSDER" : {
      "modelref" : true,
      "path" : "PSMODULES/zentao/PSDATAENTITIES/TestReport/PSDERS/DER1N_ZT_TESTREPORT_ZT_PROJECT_PROJECT.json"
    },
    "getRelatedPSDEField" : {
      "name" : "ID",
      "codeName" : "Id"
    },
    "stdDataType" : 1,
    "valueFormat" : "%1$s",
    "linkDEField" : true
  } ],
  "getAllPSDELogics" : [ {
    "codeName" : "GetInfoTestTask",
    "defaultParamName" : "Default",
    "dynaModelFilePath" : "PSMODULES/zentao/PSDATAENTITIES/TestReport/PSDELOGICS/GetInfoTestTask.json",
    "logicName" : "根据测试单获取相应信息",
    "name" : "根据测试单获取相应信息",
    "getPSDELogicNodes" : [ {
      "codeName" : "Rawsqlcall13",
      "getDstPSDELogicParam" : {
        "modelref" : true,
        "id" : "Default"
      },
      "logicNodeType" : "RAWSQLCALL",
      "name" : "产生的bug",
      "getPSDELogicLinks" : [ {
        "getDstPSDELogicNode" : {
          "modelref" : true,
          "id" : "Rawsqlcall14"
        },
        "name" : "连接6366",
        "getSrcPSDELogicNode" : {
          "modelref" : true,
          "id" : "Rawsqlcall13"
        },
        "defaultLink" : false
      } ],
      "getPSDELogicNodeParams" : [ {
        "name" : "Default[TASKS]",
        "paramAction" : "SQLPARAM",
        "srcFieldName" : "TASKS",
        "getSrcPSDELogicParam" : {
          "modelref" : true,
          "id" : "Default"
        },
        "srcValueType" : "SRCDLPARAM"
      }, {
        "name" : "Default[TASKS]",
        "paramAction" : "SQLPARAM",
        "srcFieldName" : "TASKS",
        "getSrcPSDELogicParam" : {
          "modelref" : true,
          "id" : "Default"
        },
        "srcValueType" : "SRCDLPARAM"
      }, {
        "name" : "Default[TASKS]",
        "paramAction" : "SQLPARAM",
        "srcFieldName" : "TASKS",
        "getSrcPSDELogicParam" : {
          "modelref" : true,
          "id" : "Default"
        },
        "srcValueType" : "SRCDLPARAM"
      } ],
      "sql" : "SELECT\nCOUNT(1) as bugcnt\nFROM `zt_bug` t1 \nwhere t1.OPENEDBUILD = (select build from  zt_testtask  where id = ?)  and t1.openedDate > (select `begin` from  zt_testtask   where id = ?\n) and t1.openedDate < (select CONCAT( DATE_FORMAT( tt.`end`, '%Y-%m-%d'),' 23:59:59') from  zt_testtask tt  where tt.id = ?)",
      "fillDstLogicParam" : true,
      "parallelOutput" : true
    }, {
      "codeName" : "Rawsqlcall11",
      "getDstPSDELogicParam" : {
        "modelref" : true,
        "id" : "Default"
      },
      "logicNodeType" : "RAWSQLCALL",
      "name" : "有效bug数",
      "getPSDELogicLinks" : [ {
        "getDstPSDELogicNode" : {
          "modelref" : true,
          "id" : "Rawsqlcall12"
        },
        "name" : "连接8948",
        "getSrcPSDELogicNode" : {
          "modelref" : true,
          "id" : "Rawsqlcall11"
        },
        "defaultLink" : false
      } ],
      "getPSDELogicNodeParams" : [ {
        "name" : "Default[TASKS]",
        "paramAction" : "SQLPARAM",
        "srcFieldName" : "TASKS",
        "getSrcPSDELogicParam" : {
          "modelref" : true,
          "id" : "Default"
        },
        "srcValueType" : "SRCDLPARAM"
      }, {
        "name" : "Default[TASKS]",
        "paramAction" : "SQLPARAM",
        "srcFieldName" : "TASKS",
        "getSrcPSDELogicParam" : {
          "modelref" : true,
          "id" : "Default"
        },
        "srcValueType" : "SRCDLPARAM"
      }, {
        "name" : "Default[TASKS]",
        "paramAction" : "SQLPARAM",
        "srcFieldName" : "TASKS",
        "getSrcPSDELogicParam" : {
          "modelref" : true,
          "id" : "Default"
        },
        "srcValueType" : "SRCDLPARAM"
      } ],
      "sql" : "SELECT\nCOUNT(1) as effective\nFROM `zt_bug` t1 \nwhere  t1.OPENEDBUILD = (select t.build from zt_testtask t  where t.id = ?)  and t1.openedDate > (select tt.`begin` from  zt_testtask tt  where tt.id = ?\n) and t1.openedDate < (select CONCAT( DATE_FORMAT( tt.`end`, '%Y-%m-%d'),' 23:59:59') from  zt_testtask tt  where tt.id = ?\n) and t1.`status` in ('resolved','closed') and t1.resolution in ('fixed','postponed')",
      "fillDstLogicParam" : true,
      "parallelOutput" : true
    }, {
      "codeName" : "Rawsqlcall3",
      "getDstPSDELogicParam" : {
        "modelref" : true,
        "id" : "Default"
      },
      "logicNodeType" : "RAWSQLCALL",
      "name" : "获取用例数",
      "getPSDELogicLinks" : [ {
        "getDstPSDELogicNode" : {
          "modelref" : true,
          "id" : "Rawsqlcall4"
        },
        "name" : "连接324",
        "getSrcPSDELogicNode" : {
          "modelref" : true,
          "id" : "Rawsqlcall3"
        },
        "defaultLink" : false
      } ],
      "getPSDELogicNodeParams" : [ {
        "name" : "Default[TASKS]",
        "paramAction" : "SQLPARAM",
        "srcFieldName" : "TASKS",
        "getSrcPSDELogicParam" : {
          "modelref" : true,
          "id" : "Default"
        },
        "srcValueType" : "SRCDLPARAM"
      } ],
      "sql" : "SELECT\nCOUNT(1) as casecnt\nFROM `zt_case` t1 \nleft join zt_testrun t11 on t1.id = t11.`case`\nLEFT JOIN zt_testtask t21 on t11.task = t21.id\nWHERE  t1.`DELETED` = '0' and t21.id = ?",
      "fillDstLogicParam" : true,
      "parallelOutput" : true
    }, {
      "codeName" : "Rawsqlcall5",
      "getDstPSDELogicParam" : {
        "modelref" : true,
        "id" : "Default"
      },
      "logicNodeType" : "RAWSQLCALL",
      "name" : "失败的用例数",
      "getPSDELogicLinks" : [ {
        "getDstPSDELogicNode" : {
          "modelref" : true,
          "id" : "Rawsqlcall6"
        },
        "name" : "连接6927",
        "getSrcPSDELogicNode" : {
          "modelref" : true,
          "id" : "Rawsqlcall5"
        },
        "defaultLink" : false
      } ],
      "getPSDELogicNodeParams" : [ {
        "name" : "Default[TASKS]",
        "paramAction" : "SQLPARAM",
        "srcFieldName" : "TASKS",
        "getSrcPSDELogicParam" : {
          "modelref" : true,
          "id" : "Default"
        },
        "srcValueType" : "SRCDLPARAM"
      }, {
        "name" : "Default[TASKS]",
        "paramAction" : "SQLPARAM",
        "srcFieldName" : "TASKS",
        "getSrcPSDELogicParam" : {
          "modelref" : true,
          "id" : "Default"
        },
        "srcValueType" : "SRCDLPARAM"
      }, {
        "name" : "Default[TASKS]",
        "paramAction" : "SQLPARAM",
        "srcFieldName" : "TASKS",
        "getSrcPSDELogicParam" : {
          "modelref" : true,
          "id" : "Default"
        },
        "srcValueType" : "SRCDLPARAM"
      } ],
      "sql" : "select COUNT(1) as failcase from (SELECT\nDISTINCT t1.id\nFROM `zt_case` t1 \nleft join zt_testrun t11 on t1.id = t11.`case`\nleft join zt_testresult t21 on t21.run = t11.id\nLEFT JOIN zt_testtask t31 on t31.id = t11.task\nWHERE  t1.`DELETED` = '0'  and t21.date > (SELECT `BEGIN` from zt_testtask where id =  ? ) and t21.date < (SELECT CONCAT(DATE_FORMAT(`end`,'%Y-%m-%d'),' 23:59:59') from zt_testtask where id = ? ) and t31.id = ?  and t21.caseResult = 'fail') t",
      "fillDstLogicParam" : true,
      "parallelOutput" : true
    }, {
      "codeName" : "Rawsqlcall15",
      "getDstPSDELogicParam" : {
        "modelref" : true,
        "id" : "Default"
      },
      "logicNodeType" : "RAWSQLCALL",
      "name" : "获取参与人员",
      "getPSDELogicLinks" : [ {
        "getDstPSDELogicNode" : {
          "modelref" : true,
          "id" : "Rawsqlcall16"
        },
        "name" : "连接6052",
        "getSrcPSDELogicNode" : {
          "modelref" : true,
          "id" : "Rawsqlcall15"
        },
        "defaultLink" : false
      } ],
      "getPSDELogicNodeParams" : [ {
        "name" : "Default[TASKS]",
        "paramAction" : "SQLPARAM",
        "srcFieldName" : "TASKS",
        "getSrcPSDELogicParam" : {
          "modelref" : true,
          "id" : "Default"
        },
        "srcValueType" : "SRCDLPARAM"
      } ],
      "sql" : "select case when t.members is null then '' else t.members  end as members from (SELECT  GROUP_CONCAT(DISTINCT t1.lastRunner) as members from zt_testrun t1  LEFT JOIN zt_testtask t21 on t21.id = t1.task where t21.id = ?) t\n",
      "fillDstLogicParam" : true,
      "parallelOutput" : true
    }, {
      "codeName" : "Begin",
      "logicNodeType" : "BEGIN",
      "name" : "开始",
      "getPSDELogicLinks" : [ {
        "getDstPSDELogicNode" : {
          "modelref" : true,
          "id" : "Rawsqlcall1"
        },
        "name" : "连接4268",
        "getSrcPSDELogicNode" : {
          "modelref" : true,
          "id" : "Begin"
        },
        "defaultLink" : false
      } ],
      "parallelOutput" : true
    }, {
      "codeName" : "Rawsqlcall12",
      "getDstPSDELogicParam" : {
        "modelref" : true,
        "id" : "Default"
      },
      "logicNodeType" : "RAWSQLCALL",
      "name" : "解决的bug",
      "getPSDELogicLinks" : [ {
        "getDstPSDELogicNode" : {
          "modelref" : true,
          "id" : "Rawsqlcall13"
        },
        "name" : "连接4883",
        "getSrcPSDELogicNode" : {
          "modelref" : true,
          "id" : "Rawsqlcall12"
        },
        "defaultLink" : false
      } ],
      "getPSDELogicNodeParams" : [ {
        "name" : "Default[TASKS]",
        "paramAction" : "SQLPARAM",
        "srcFieldName" : "TASKS",
        "getSrcPSDELogicParam" : {
          "modelref" : true,
          "id" : "Default"
        },
        "srcValueType" : "SRCDLPARAM"
      }, {
        "name" : "Default[TASKS]",
        "paramAction" : "SQLPARAM",
        "srcFieldName" : "TASKS",
        "getSrcPSDELogicParam" : {
          "modelref" : true,
          "id" : "Default"
        },
        "srcValueType" : "SRCDLPARAM"
      }, {
        "name" : "Default[TASKS]",
        "paramAction" : "SQLPARAM",
        "srcFieldName" : "TASKS",
        "getSrcPSDELogicParam" : {
          "modelref" : true,
          "id" : "Default"
        },
        "srcValueType" : "SRCDLPARAM"
      } ],
      "sql" : "SELECT\nCOUNT(1) as resolvedcnt\nFROM `zt_bug` t1 \nwhere  t1.OPENEDBUILD = (select t.build from zt_testtask t where t.id = ?)   and t1.openedDate > (select tt.`begin` from  zt_testtask tt  where tt.id = ?\n) and t1.openedDate < (select CONCAT( DATE_FORMAT( tt.`end`, '%Y-%m-%d'),' 23:59:59') from  zt_testtask tt  where tt.id = ?\n)  and t1.`status` in ('resolved','closed')",
      "fillDstLogicParam" : true,
      "parallelOutput" : true
    }, {
      "codeName" : "Rawsqlcall4",
      "getDstPSDELogicParam" : {
        "modelref" : true,
        "id" : "Default"
      },
      "logicNodeType" : "RAWSQLCALL",
      "name" : "执行的用例数",
      "getPSDELogicLinks" : [ {
        "getDstPSDELogicNode" : {
          "modelref" : true,
          "id" : "Rawsqlcall5"
        },
        "name" : "连接8909",
        "getSrcPSDELogicNode" : {
          "modelref" : true,
          "id" : "Rawsqlcall4"
        },
        "defaultLink" : false
      } ],
      "getPSDELogicNodeParams" : [ {
        "name" : "Default[TASKS]",
        "paramAction" : "SQLPARAM",
        "srcFieldName" : "TASKS",
        "getSrcPSDELogicParam" : {
          "modelref" : true,
          "id" : "Default"
        },
        "srcValueType" : "SRCDLPARAM"
      }, {
        "name" : "Default[TASKS]",
        "paramAction" : "SQLPARAM",
        "srcFieldName" : "TASKS",
        "getSrcPSDELogicParam" : {
          "modelref" : true,
          "id" : "Default"
        },
        "srcValueType" : "SRCDLPARAM"
      }, {
        "name" : "Default[TASKS]",
        "paramAction" : "SQLPARAM",
        "srcFieldName" : "TASKS",
        "getSrcPSDELogicParam" : {
          "modelref" : true,
          "id" : "Default"
        },
        "srcValueType" : "SRCDLPARAM"
      } ],
      "sql" : "select COUNT(1) as rencase from (SELECT\nDISTINCT t1.id\nFROM `zt_case` t1 \nleft join zt_testrun t11 on t1.id = t11.`case`\nINNER join zt_testresult t21 on t21.run = t11.id\nLEFT JOIN zt_testtask t31 on t31.id = t11.task\nWHERE  t1.`DELETED` = '0' and t21.date > (SELECT `BEGIN` from zt_testtask where id = ?) and t21.date < (SELECT CONCAT(DATE_FORMAT(`end`,'%Y-%m-%d'),' 23:59:59') from zt_testtask where id = ?) and t31.id =  ? ) t",
      "fillDstLogicParam" : true,
      "parallelOutput" : true
    }, {
      "codeName" : "Rawsqlcall9",
      "getDstPSDELogicParam" : {
        "modelref" : true,
        "id" : "Default"
      },
      "logicNodeType" : "RAWSQLCALL",
      "name" : "用例产生的bug",
      "getPSDELogicLinks" : [ {
        "getDstPSDELogicNode" : {
          "modelref" : true,
          "id" : "Rawsqlcall10"
        },
        "name" : "连接7101",
        "getSrcPSDELogicNode" : {
          "modelref" : true,
          "id" : "Rawsqlcall9"
        },
        "defaultLink" : false
      } ],
      "getPSDELogicNodeParams" : [ {
        "name" : "Default[TASKS]",
        "paramAction" : "SQLPARAM",
        "srcFieldName" : "TASKS",
        "getSrcPSDELogicParam" : {
          "modelref" : true,
          "id" : "Default"
        },
        "srcValueType" : "SRCDLPARAM"
      }, {
        "name" : "Default[TASKS]",
        "paramAction" : "SQLPARAM",
        "srcFieldName" : "TASKS",
        "getSrcPSDELogicParam" : {
          "modelref" : true,
          "id" : "Default"
        },
        "srcValueType" : "SRCDLPARAM"
      }, {
        "name" : "Default[TASKS]",
        "paramAction" : "SQLPARAM",
        "srcFieldName" : "TASKS",
        "getSrcPSDELogicParam" : {
          "modelref" : true,
          "id" : "Default"
        },
        "srcValueType" : "SRCDLPARAM"
      } ],
      "sql" : "SELECT\nCOUNT(1) as casebugcnt\nFROM `zt_bug` t1 \nwhere  t1.OPENEDBUILD = (select tt.build from zt_testtask tt where tt.id = ?)   and t1.openedDate > (select tt.`begin` from zt_testtask tt where tt.id = ? and t1.openedDate < (select CONCAT( DATE_FORMAT( tt.`end`, '%Y-%m-%d'),' 23:59:59') from  zt_testtask tt  where tt.id = ?\n)\n)  and t1.`case` > 0",
      "fillDstLogicParam" : true,
      "parallelOutput" : true
    }, {
      "codeName" : "Rawsqlcall14",
      "getDstPSDELogicParam" : {
        "modelref" : true,
        "id" : "Default"
      },
      "logicNodeType" : "RAWSQLCALL",
      "name" : "设置概况",
      "getPSDELogicLinks" : [ {
        "getDstPSDELogicNode" : {
          "modelref" : true,
          "id" : "Rawsqlcall15"
        },
        "name" : "连接6114",
        "getSrcPSDELogicNode" : {
          "modelref" : true,
          "id" : "Rawsqlcall14"
        },
        "defaultLink" : false
      } ],
      "getPSDELogicNodeParams" : [ {
        "name" : "Default[storycnt]",
        "paramAction" : "SQLPARAM",
        "srcFieldName" : "storycnt",
        "getSrcPSDELogicParam" : {
          "modelref" : true,
          "id" : "Default"
        },
        "srcValueType" : "SRCDLPARAM"
      }, {
        "name" : "Default[storyestimate]",
        "paramAction" : "SQLPARAM",
        "srcFieldName" : "storyestimate",
        "getSrcPSDELogicParam" : {
          "modelref" : true,
          "id" : "Default"
        },
        "srcValueType" : "SRCDLPARAM"
      }, {
        "name" : "Default[storyestimate]",
        "paramAction" : "SQLPARAM",
        "srcFieldName" : "storyestimate",
        "getSrcPSDELogicParam" : {
          "modelref" : true,
          "id" : "Default"
        },
        "srcValueType" : "SRCDLPARAM"
      }, {
        "name" : "Default[casecnts]",
        "paramAction" : "SQLPARAM",
        "srcFieldName" : "casecnts",
        "getSrcPSDELogicParam" : {
          "modelref" : true,
          "id" : "Default"
        },
        "srcValueType" : "SRCDLPARAM"
      }, {
        "name" : "Default[storycnts]",
        "paramAction" : "SQLPARAM",
        "srcFieldName" : "storycnts",
        "getSrcPSDELogicParam" : {
          "modelref" : true,
          "id" : "Default"
        },
        "srcValueType" : "SRCDLPARAM"
      }, {
        "name" : "Default[storycnts]",
        "paramAction" : "SQLPARAM",
        "srcFieldName" : "storycnts",
        "getSrcPSDELogicParam" : {
          "modelref" : true,
          "id" : "Default"
        },
        "srcValueType" : "SRCDLPARAM"
      }, {
        "name" : "Default[storycnts]",
        "paramAction" : "SQLPARAM",
        "srcFieldName" : "storycnts",
        "getSrcPSDELogicParam" : {
          "modelref" : true,
          "id" : "Default"
        },
        "srcValueType" : "SRCDLPARAM"
      }, {
        "name" : "Default[casecnt]",
        "paramAction" : "SQLPARAM",
        "srcFieldName" : "casecnt",
        "getSrcPSDELogicParam" : {
          "modelref" : true,
          "id" : "Default"
        },
        "srcValueType" : "SRCDLPARAM"
      }, {
        "name" : "Default[rencase]",
        "paramAction" : "SQLPARAM",
        "srcFieldName" : "rencase",
        "getSrcPSDELogicParam" : {
          "modelref" : true,
          "id" : "Default"
        },
        "srcValueType" : "SRCDLPARAM"
      }, {
        "name" : "Default[testresultcnt]",
        "paramAction" : "SQLPARAM",
        "srcFieldName" : "testresultcnt",
        "getSrcPSDELogicParam" : {
          "modelref" : true,
          "id" : "Default"
        },
        "srcValueType" : "SRCDLPARAM"
      }, {
        "name" : "Default[failcase]",
        "paramAction" : "SQLPARAM",
        "srcFieldName" : "failcase",
        "getSrcPSDELogicParam" : {
          "modelref" : true,
          "id" : "Default"
        },
        "srcValueType" : "SRCDLPARAM"
      }, {
        "name" : "Default[bugcnt]",
        "paramAction" : "SQLPARAM",
        "srcFieldName" : "bugcnt",
        "getSrcPSDELogicParam" : {
          "modelref" : true,
          "id" : "Default"
        },
        "srcValueType" : "SRCDLPARAM"
      }, {
        "name" : "Default[ylbugcnt]",
        "paramAction" : "SQLPARAM",
        "srcFieldName" : "ylbugcnt",
        "getSrcPSDELogicParam" : {
          "modelref" : true,
          "id" : "Default"
        },
        "srcValueType" : "SRCDLPARAM"
      }, {
        "name" : "Default[casebugcnt]",
        "paramAction" : "SQLPARAM",
        "srcFieldName" : "casebugcnt",
        "getSrcPSDELogicParam" : {
          "modelref" : true,
          "id" : "Default"
        },
        "srcValueType" : "SRCDLPARAM"
      }, {
        "name" : "Default[effective]",
        "paramAction" : "SQLPARAM",
        "srcFieldName" : "effective",
        "getSrcPSDELogicParam" : {
          "modelref" : true,
          "id" : "Default"
        },
        "srcValueType" : "SRCDLPARAM"
      }, {
        "name" : "Default[resolvedcnt]",
        "paramAction" : "SQLPARAM",
        "srcFieldName" : "resolvedcnt",
        "getSrcPSDELogicParam" : {
          "modelref" : true,
          "id" : "Default"
        },
        "srcValueType" : "SRCDLPARAM"
      }, {
        "name" : "Default[resolvedcnt]",
        "paramAction" : "SQLPARAM",
        "srcFieldName" : "resolvedcnt",
        "getSrcPSDELogicParam" : {
          "modelref" : true,
          "id" : "Default"
        },
        "srcValueType" : "SRCDLPARAM"
      }, {
        "name" : "Default[resolvedcnt]",
        "paramAction" : "SQLPARAM",
        "srcFieldName" : "resolvedcnt",
        "getSrcPSDELogicParam" : {
          "modelref" : true,
          "id" : "Default"
        },
        "srcValueType" : "SRCDLPARAM"
      }, {
        "name" : "Default[casebugcnt]",
        "paramAction" : "SQLPARAM",
        "srcFieldName" : "casebugcnt",
        "getSrcPSDELogicParam" : {
          "modelref" : true,
          "id" : "Default"
        },
        "srcValueType" : "SRCDLPARAM"
      }, {
        "name" : "Default[bugcnt]",
        "paramAction" : "SQLPARAM",
        "srcFieldName" : "bugcnt",
        "getSrcPSDELogicParam" : {
          "modelref" : true,
          "id" : "Default"
        },
        "srcValueType" : "SRCDLPARAM"
      }, {
        "name" : "Default[bugcnt]",
        "paramAction" : "SQLPARAM",
        "srcFieldName" : "bugcnt",
        "getSrcPSDELogicParam" : {
          "modelref" : true,
          "id" : "Default"
        },
        "srcValueType" : "SRCDLPARAM"
      }, {
        "name" : "Default[bugcnt]",
        "paramAction" : "SQLPARAM",
        "srcFieldName" : "bugcnt",
        "getSrcPSDELogicParam" : {
          "modelref" : true,
          "id" : "Default"
        },
        "srcValueType" : "SRCDLPARAM"
      } ],
      "sql" : "select CONCAT_WS('','本页共 ',?,' 个需求，预计 ',case when ? is null then 0 else ? end,' 个工时，用例覆盖率 ',CONCAT(ROUND(?/(case when ?= 0 or ? is null then 1 else ? end) * 100, 0)),'%。<br>','共测试了1个版本。共有',?,'个用例，共执行',?,'个用例，产生了',?,'个结果，失败的用例有',?,'个。<br>','共发现',?,'个Bug<a data-toggle=\"tooltip\" class=\"text-warning\" title=\"影响版本在测试轮次内，并且创建时间在测试时间范围内产生的Bug数。\" style=\"vertical-align: middle;padding: 2px;\"><i class=\"fa fa-question-circle\" style=\" color: #ff9800;\"></i></a>，遗留',?,'个Bug<a data-toggle=\"tooltip\" class=\"text-warning\" title=\"Bug状态是激活，或Bug的解决时间在测试结束时间之后。\" style=\"vertical-align: middle;padding: 2px;\"><i class=\"fa fa-question-circle\" style=\" color: #ff9800;\"></i></a>。 用例执行产生',?,'个Bug<a data-toggle=\"tooltip\" class=\"text-warning\" title=\"测试时间范围内，用例执行失败后创建的Bug。\" style=\"vertical-align: middle;padding: 2px;\"><i class=\"fa fa-question-circle\" style=\" color: #ff9800;\"></i></a>。 有效Bug率（方案为已解决或延期 / 状态为已解决或已关闭）：',CONCAT(ROUND(?/(case when ? = 0 or ? is null then 1 else ? end) * 100, 2), '%'),'，用例发现Bug率（用例创建的Bug / 发现Bug数）：',CONCAT(ROUND(?/(case when ? = 0 or ? is null then 1 else ? end)* 100, 2) , '%')) as OVERVIEWS from dual",
      "fillDstLogicParam" : true,
      "parallelOutput" : true
    }, {
      "codeName" : "Rawsqlcall10",
      "getDstPSDELogicParam" : {
        "modelref" : true,
        "id" : "Default"
      },
      "logicNodeType" : "RAWSQLCALL",
      "name" : "执行结果",
      "getPSDELogicLinks" : [ {
        "getDstPSDELogicNode" : {
          "modelref" : true,
          "id" : "Rawsqlcall11"
        },
        "name" : "连接7588",
        "getSrcPSDELogicNode" : {
          "modelref" : true,
          "id" : "Rawsqlcall10"
        },
        "defaultLink" : false
      } ],
      "getPSDELogicNodeParams" : [ {
        "name" : "Default[TASKS]",
        "paramAction" : "SQLPARAM",
        "srcFieldName" : "TASKS",
        "getSrcPSDELogicParam" : {
          "modelref" : true,
          "id" : "Default"
        },
        "srcValueType" : "SRCDLPARAM"
      }, {
        "name" : "Default[BEGIN]",
        "paramAction" : "SQLPARAM",
        "srcFieldName" : "BEGIN",
        "getSrcPSDELogicParam" : {
          "modelref" : true,
          "id" : "Default"
        },
        "srcValueType" : "SRCDLPARAM"
      }, {
        "name" : "Default[END]",
        "paramAction" : "SQLPARAM",
        "srcFieldName" : "END",
        "getSrcPSDELogicParam" : {
          "modelref" : true,
          "id" : "Default"
        },
        "srcValueType" : "SRCDLPARAM"
      } ],
      "sql" : "select COUNT(1) testresultcnt from zt_testresult t1 \nINNER JOIN zt_case t31 on t31.id = t1.`case`\ninner join zt_testrun t11 on t1.run = t11.id and t1.`case` = t11.`case`\nINNER JOIN zt_testtask t41 on t41.id = t11.task\nwhere t41.id = ?  and t31.deleted = '0' and t1.date >  ? and t1.date <  ?",
      "fillDstLogicParam" : true,
      "parallelOutput" : true
    }, {
      "codeName" : "Rawsqlcall7",
      "getDstPSDELogicParam" : {
        "modelref" : true,
        "id" : "Default"
      },
      "logicNodeType" : "RAWSQLCALL",
      "name" : "需求覆盖用例数",
      "getPSDELogicLinks" : [ {
        "getDstPSDELogicNode" : {
          "modelref" : true,
          "id" : "Rawsqlcall8"
        },
        "name" : "连接6981",
        "getSrcPSDELogicNode" : {
          "modelref" : true,
          "id" : "Rawsqlcall7"
        },
        "defaultLink" : false
      } ],
      "getPSDELogicNodeParams" : [ {
        "name" : "Default[TASKS]",
        "paramAction" : "SQLPARAM",
        "srcFieldName" : "TASKS",
        "getSrcPSDELogicParam" : {
          "modelref" : true,
          "id" : "Default"
        },
        "srcValueType" : "SRCDLPARAM"
      } ],
      "sql" : "SELECT\ncount(1) as casecnts\nFROM `zt_story` t1 \nLEFT JOIN zt_build t21 on FIND_IN_SET(t1.id,t21.stories)\nLEFT JOIN zt_testtask t31 on t31.build = t21.id\nWHERE t1.`DELETED` = '0'  and (t1.`status` <> 'closed' or (t1.`status` = 'closed' and t1.closedReason in ('done','postponed'))) and EXISTS(select 1 from zt_case t where t.deleted = '0' and t1.id = t.story) and t31.id = ?",
      "fillDstLogicParam" : true,
      "parallelOutput" : true
    }, {
      "codeName" : "Rawsqlcall2",
      "getDstPSDELogicParam" : {
        "modelref" : true,
        "id" : "Default"
      },
      "logicNodeType" : "RAWSQLCALL",
      "name" : "获取需求数",
      "getPSDELogicLinks" : [ {
        "getDstPSDELogicNode" : {
          "modelref" : true,
          "id" : "Rawsqlcall3"
        },
        "name" : "连接9595",
        "getSrcPSDELogicNode" : {
          "modelref" : true,
          "id" : "Rawsqlcall2"
        },
        "defaultLink" : false
      } ],
      "getPSDELogicNodeParams" : [ {
        "name" : "Default[TASKS]",
        "paramAction" : "SQLPARAM",
        "srcFieldName" : "TASKS",
        "getSrcPSDELogicParam" : {
          "modelref" : true,
          "id" : "Default"
        },
        "srcValueType" : "SRCDLPARAM"
      } ],
      "sql" : "SELECT\nCOUNT(1) as storycnt, sum(t1.ESTIMATE) as storyestimate,GROUP_CONCAT(DISTINCT t1.id ORDER BY t1.id asc) as stories\nFROM `zt_story` t1 \nLEFT JOIN zt_build t11 on FIND_IN_SET(t1.id,t11.stories)\nLEFT JOIN zt_testtask t21 on t21.build = t11.id\nWHERE t1.`DELETED` = '0' and t21.id = ?",
      "fillDstLogicParam" : true,
      "parallelOutput" : true
    }, {
      "codeName" : "Rawsqlcall8",
      "getDstPSDELogicParam" : {
        "modelref" : true,
        "id" : "Default"
      },
      "logicNodeType" : "RAWSQLCALL",
      "name" : "遗留的Bug",
      "getPSDELogicLinks" : [ {
        "getDstPSDELogicNode" : {
          "modelref" : true,
          "id" : "Rawsqlcall9"
        },
        "name" : "连接6924",
        "getSrcPSDELogicNode" : {
          "modelref" : true,
          "id" : "Rawsqlcall8"
        },
        "defaultLink" : false
      } ],
      "getPSDELogicNodeParams" : [ {
        "name" : "Default[TASKS]",
        "paramAction" : "SQLPARAM",
        "srcFieldName" : "TASKS",
        "getSrcPSDELogicParam" : {
          "modelref" : true,
          "id" : "Default"
        },
        "srcValueType" : "SRCDLPARAM"
      }, {
        "name" : "Default[TASKS]",
        "paramAction" : "SQLPARAM",
        "srcFieldName" : "TASKS",
        "getSrcPSDELogicParam" : {
          "modelref" : true,
          "id" : "Default"
        },
        "srcValueType" : "SRCDLPARAM"
      }, {
        "name" : "Default[TASKS]",
        "paramAction" : "SQLPARAM",
        "srcFieldName" : "TASKS",
        "getSrcPSDELogicParam" : {
          "modelref" : true,
          "id" : "Default"
        },
        "srcValueType" : "SRCDLPARAM"
      }, {
        "name" : "Default[TASKS]",
        "paramAction" : "SQLPARAM",
        "srcFieldName" : "TASKS",
        "getSrcPSDELogicParam" : {
          "modelref" : true,
          "id" : "Default"
        },
        "srcValueType" : "SRCDLPARAM"
      } ],
      "sql" : "SELECT\nCOUNT(1) as ylbugcnt\nFROM `zt_bug` t1 \nwhere  t1.OPENEDBUILD = (select t.build from zt_testtask t  where t.id = ?)   and t1.openedDate > (select tt.`begin` from  zt_testtask tt  where tt.id = ?\n) and t1.openedDate < (select CONCAT( DATE_FORMAT( tt.`end`, '%Y-%m-%d'),' 23:59:59') from  zt_testtask tt  where tt.id = ?\n) and (t1.`status` = 'active' or t1.resolvedDate > (select tt.`end` from zt_testtask tt where tt.id = ?))",
      "fillDstLogicParam" : true,
      "parallelOutput" : true
    }, {
      "codeName" : "Rawsqlcall1",
      "getDstPSDELogicParam" : {
        "modelref" : true,
        "id" : "Default"
      },
      "logicNodeType" : "RAWSQLCALL",
      "name" : "获取数据",
      "getPSDELogicLinks" : [ {
        "getDstPSDELogicNode" : {
          "modelref" : true,
          "id" : "Rawsqlcall2"
        },
        "name" : "连接9257",
        "getSrcPSDELogicNode" : {
          "modelref" : true,
          "id" : "Rawsqlcall1"
        },
        "defaultLink" : false
      } ],
      "getPSDELogicNodeParams" : [ {
        "name" : "Default[TASKS]",
        "paramAction" : "SQLPARAM",
        "srcFieldName" : "TASKS",
        "getSrcPSDELogicParam" : {
          "modelref" : true,
          "id" : "Default"
        },
        "srcValueType" : "SRCDLPARAM"
      } ],
      "sql" : "select CONCAT_WS(' ',DATE_FORMAT(now(),'%Y-%m-%d'),concat('TESTTASK#',t.id),t.`name`,'测试报告') as TITLE,t.`begin`,t.`end`,t.project,t.build as builds,(select GROUP_CONCAT(DISTINCT tt.`case` order by tt.`case` asc Separator ',') from zt_testrun tt where tt.task = t.id GROUP BY tt.task) as cases,t.id as objectID,'TESTTASK' as objectType,t.`OWNER` as `OWNER` from zt_testtask t where t.deleted = '0' and t.id = ?",
      "fillDstLogicParam" : true,
      "parallelOutput" : true
    }, {
      "codeName" : "Rawsqlcall6",
      "getDstPSDELogicParam" : {
        "modelref" : true,
        "id" : "Default"
      },
      "logicNodeType" : "RAWSQLCALL",
      "name" : "有效需求数",
      "getPSDELogicLinks" : [ {
        "getDstPSDELogicNode" : {
          "modelref" : true,
          "id" : "Rawsqlcall7"
        },
        "name" : "连接9430",
        "getSrcPSDELogicNode" : {
          "modelref" : true,
          "id" : "Rawsqlcall6"
        },
        "defaultLink" : false
      } ],
      "getPSDELogicNodeParams" : [ {
        "name" : "Default[TASKS]",
        "paramAction" : "SQLPARAM",
        "srcFieldName" : "TASKS",
        "getSrcPSDELogicParam" : {
          "modelref" : true,
          "id" : "Default"
        },
        "srcValueType" : "SRCDLPARAM"
      } ],
      "sql" : "SELECT\nCOUNT(1) as storycnts\nFROM `zt_story` t1 \nLEFT JOIN zt_build t21 on FIND_IN_SET(t1.id,t21.stories)\nLEFT JOIN zt_testtask t31 on t31.build = t21.id\nWHERE t1.`DELETED` = '0' and (t1.`status` <> 'closed' or (t1.`status` = 'closed' and t1.closedReason in ('done','postponed'))) and t31.id = ?",
      "fillDstLogicParam" : true,
      "parallelOutput" : true
    }, {
      "codeName" : "Rawsqlcall16",
      "getDstPSDELogicParam" : {
        "modelref" : true,
        "id" : "Default"
      },
      "logicNodeType" : "RAWSQLCALL",
      "name" : "获取项目名",
      "getPSDELogicNodeParams" : [ {
        "name" : "Default[PROJECT]",
        "paramAction" : "SQLPARAM",
        "srcFieldName" : "PROJECT",
        "getSrcPSDELogicParam" : {
          "modelref" : true,
          "id" : "Default"
        },
        "srcValueType" : "SRCDLPARAM"
      } ],
      "sql" : "select name  as projectname from zt_project where id = ?",
      "fillDstLogicParam" : true,
      "parallelOutput" : true
    } ],
    "getPSDELogicParams" : [ {
      "codeName" : "Default",
      "name" : "传入变量",
      "getParamPSDataEntity" : {
        "modelref" : true,
        "path" : "PSMODULES/zentao/PSDATAENTITIES/TestReport.json"
      },
      "default" : true
    }, {
      "codeName" : "testtask",
      "name" : "测试版本",
      "getParamPSDataEntity" : {
        "modelref" : true,
        "path" : "PSMODULES/zentao/PSDATAENTITIES/TestTask.json"
      }
    } ],
    "getStartPSDELogicNode" : {
      "modelref" : true,
      "id" : "Begin"
    },
    "enableBackend" : true,
    "enableFront" : false
  }, {
    "codeName" : "GetInfoTestTaskOvByTime",
    "defaultParamName" : "Default",
    "dynaModelFilePath" : "PSMODULES/zentao/PSDATAENTITIES/TestReport/PSDELOGICS/GetInfoTestTaskOvByTime.json",
    "logicName" : "根据报告起始时间更新概况信息",
    "name" : "根据报告起始时间更新概况信息",
    "getPSDELogicNodes" : [ {
      "codeName" : "Rawsqlcall3",
      "getDstPSDELogicParam" : {
        "modelref" : true,
        "id" : "Default"
      },
      "logicNodeType" : "RAWSQLCALL",
      "name" : "执行用例数",
      "getPSDELogicLinks" : [ {
        "getDstPSDELogicNode" : {
          "modelref" : true,
          "id" : "Rawsqlcall4"
        },
        "name" : "连接2597",
        "getSrcPSDELogicNode" : {
          "modelref" : true,
          "id" : "Rawsqlcall3"
        },
        "defaultLink" : false
      } ],
      "getPSDELogicNodeParams" : [ {
        "name" : "Default[CASES]",
        "paramAction" : "SQLPARAM",
        "srcFieldName" : "CASES",
        "getSrcPSDELogicParam" : {
          "modelref" : true,
          "id" : "Default"
        },
        "srcValueType" : "SRCDLPARAM"
      }, {
        "name" : "Default[TASKS]",
        "paramAction" : "SQLPARAM",
        "srcFieldName" : "TASKS",
        "getSrcPSDELogicParam" : {
          "modelref" : true,
          "id" : "Default"
        },
        "srcValueType" : "SRCDLPARAM"
      }, {
        "name" : "Default[BEGIN]",
        "paramAction" : "SQLPARAM",
        "srcFieldName" : "BEGIN",
        "getSrcPSDELogicParam" : {
          "modelref" : true,
          "id" : "Default"
        },
        "srcValueType" : "SRCDLPARAM"
      }, {
        "name" : "Default[END]",
        "paramAction" : "SQLPARAM",
        "srcFieldName" : "END",
        "getSrcPSDELogicParam" : {
          "modelref" : true,
          "id" : "Default"
        },
        "srcValueType" : "SRCDLPARAM"
      } ],
      "sql" : "select COUNT(1) as rencase from (SELECT\nDISTINCT t1.id\nFROM `zt_case` t1 \nleft join zt_testrun t11 on t1.id = t11.`case`\nINNER join zt_testresult t21 on t21.run = t11.id\nWHERE  t1.`DELETED` = '0' \n AND FIND_IN_SET ( t1.ID, ?) and FIND_IN_SET(t11.task ,?) \nand t21.date > ? and t21.date < (SELECT CONCAT(DATE_FORMAT(?,'%Y-%m-%d'),' 23:59:59') )  ) t",
      "fillDstLogicParam" : true,
      "parallelOutput" : true
    }, {
      "codeName" : "Rawsqlcall1",
      "getDstPSDELogicParam" : {
        "modelref" : true,
        "id" : "Default"
      },
      "logicNodeType" : "RAWSQLCALL",
      "name" : "获取需求数",
      "getPSDELogicLinks" : [ {
        "getDstPSDELogicNode" : {
          "modelref" : true,
          "id" : "Rawsqlcall2"
        },
        "name" : "连接2446",
        "getSrcPSDELogicNode" : {
          "modelref" : true,
          "id" : "Rawsqlcall1"
        },
        "defaultLink" : false
      } ],
      "getPSDELogicNodeParams" : [ {
        "name" : "Default[TASKS]",
        "paramAction" : "SQLPARAM",
        "srcFieldName" : "TASKS",
        "getSrcPSDELogicParam" : {
          "modelref" : true,
          "id" : "Default"
        },
        "srcValueType" : "SRCDLPARAM"
      } ],
      "sql" : "SELECT\nCOUNT(1) as storycnt, sum(t1.ESTIMATE) as storyestimate,GROUP_CONCAT(DISTINCT t1.id ORDER BY t1.id asc) as stories\nFROM `zt_story` t1 \nLEFT JOIN zt_build t11 on FIND_IN_SET(t1.id,t11.stories)\nLEFT JOIN zt_testtask t21 on t21.build = t11.id\nWHERE t1.`DELETED` = '0' and t21.id = ?",
      "fillDstLogicParam" : true,
      "parallelOutput" : true
    }, {
      "codeName" : "Rawsqlcall9",
      "getDstPSDELogicParam" : {
        "modelref" : true,
        "id" : "Default"
      },
      "logicNodeType" : "RAWSQLCALL",
      "name" : "执行结果",
      "getPSDELogicLinks" : [ {
        "getDstPSDELogicNode" : {
          "modelref" : true,
          "id" : "Rawsqlcall10"
        },
        "name" : "连接8002",
        "getSrcPSDELogicNode" : {
          "modelref" : true,
          "id" : "Rawsqlcall9"
        },
        "defaultLink" : false
      } ],
      "getPSDELogicNodeParams" : [ {
        "name" : "Default[BEGIN]",
        "paramAction" : "SQLPARAM",
        "srcFieldName" : "BEGIN",
        "getSrcPSDELogicParam" : {
          "modelref" : true,
          "id" : "Default"
        },
        "srcValueType" : "SRCDLPARAM"
      }, {
        "name" : "Default[END]",
        "paramAction" : "SQLPARAM",
        "srcFieldName" : "END",
        "getSrcPSDELogicParam" : {
          "modelref" : true,
          "id" : "Default"
        },
        "srcValueType" : "SRCDLPARAM"
      }, {
        "name" : "Default[CASES]",
        "paramAction" : "SQLPARAM",
        "srcFieldName" : "CASES",
        "getSrcPSDELogicParam" : {
          "modelref" : true,
          "id" : "Default"
        },
        "srcValueType" : "SRCDLPARAM"
      }, {
        "name" : "Default[TASKS]",
        "paramAction" : "SQLPARAM",
        "srcFieldName" : "TASKS",
        "getSrcPSDELogicParam" : {
          "modelref" : true,
          "id" : "Default"
        },
        "srcValueType" : "SRCDLPARAM"
      } ],
      "sql" : "select COUNT(1) testresultcnt from zt_testresult t1 \nINNER JOIN zt_case t31 on t31.id = t1.`case`\ninner join zt_testrun t11 on t1.run = t11.id and t1.`case` = t11.`case`\nwhere   t31.deleted = '0' and t1.date >  ? and t1.date <  ?  and find_in_set(t11.case,?) and find_in_set(t11.task,?)",
      "fillDstLogicParam" : true,
      "parallelOutput" : true
    }, {
      "codeName" : "Rawsqlcall11",
      "getDstPSDELogicParam" : {
        "modelref" : true,
        "id" : "Default"
      },
      "logicNodeType" : "RAWSQLCALL",
      "name" : "解决的bug",
      "getPSDELogicLinks" : [ {
        "getDstPSDELogicNode" : {
          "modelref" : true,
          "id" : "Rawsqlcall12"
        },
        "name" : "连接3893",
        "getSrcPSDELogicNode" : {
          "modelref" : true,
          "id" : "Rawsqlcall11"
        },
        "defaultLink" : false
      } ],
      "getPSDELogicNodeParams" : [ {
        "name" : "Default[TASKS]",
        "paramAction" : "SQLPARAM",
        "srcFieldName" : "TASKS",
        "getSrcPSDELogicParam" : {
          "modelref" : true,
          "id" : "Default"
        },
        "srcValueType" : "SRCDLPARAM"
      }, {
        "name" : "Default[BEGIN]",
        "paramAction" : "SQLPARAM",
        "srcFieldName" : "BEGIN",
        "getSrcPSDELogicParam" : {
          "modelref" : true,
          "id" : "Default"
        },
        "srcValueType" : "SRCDLPARAM"
      }, {
        "name" : "Default[END]",
        "paramAction" : "SQLPARAM",
        "srcFieldName" : "END",
        "getSrcPSDELogicParam" : {
          "modelref" : true,
          "id" : "Default"
        },
        "srcValueType" : "SRCDLPARAM"
      } ],
      "sql" : "SELECT\nCOUNT(1) as resolvedcnt\nFROM `zt_bug` t1 \nwhere  t1.OPENEDBUILD = (select t.build from zt_testtask t where t.id = ?)   and t1.openedDate > ? and t1.openedDate < (select CONCAT( DATE_FORMAT( ?, '%Y-%m-%d'),' 23:59:59') \n)  and t1.`status` in ('resolved','closed')",
      "fillDstLogicParam" : true,
      "parallelOutput" : true
    }, {
      "codeName" : "Rawsqlcall13",
      "getDstPSDELogicParam" : {
        "modelref" : true,
        "id" : "Default"
      },
      "logicNodeType" : "RAWSQLCALL",
      "name" : "设置概况",
      "getPSDELogicNodeParams" : [ {
        "name" : "Default[storycnt]",
        "paramAction" : "SQLPARAM",
        "srcFieldName" : "storycnt",
        "getSrcPSDELogicParam" : {
          "modelref" : true,
          "id" : "Default"
        },
        "srcValueType" : "SRCDLPARAM"
      }, {
        "name" : "Default[storyestimate]",
        "paramAction" : "SQLPARAM",
        "srcFieldName" : "storyestimate",
        "getSrcPSDELogicParam" : {
          "modelref" : true,
          "id" : "Default"
        },
        "srcValueType" : "SRCDLPARAM"
      }, {
        "name" : "Default[storyestimate]",
        "paramAction" : "SQLPARAM",
        "srcFieldName" : "storyestimate",
        "getSrcPSDELogicParam" : {
          "modelref" : true,
          "id" : "Default"
        },
        "srcValueType" : "SRCDLPARAM"
      }, {
        "name" : "Default[casecnts]",
        "paramAction" : "SQLPARAM",
        "srcFieldName" : "casecnts",
        "getSrcPSDELogicParam" : {
          "modelref" : true,
          "id" : "Default"
        },
        "srcValueType" : "SRCDLPARAM"
      }, {
        "name" : "Default[storycnts]",
        "paramAction" : "SQLPARAM",
        "srcFieldName" : "storycnts",
        "getSrcPSDELogicParam" : {
          "modelref" : true,
          "id" : "Default"
        },
        "srcValueType" : "SRCDLPARAM"
      }, {
        "name" : "Default[storycnts]",
        "paramAction" : "SQLPARAM",
        "srcFieldName" : "storycnts",
        "getSrcPSDELogicParam" : {
          "modelref" : true,
          "id" : "Default"
        },
        "srcValueType" : "SRCDLPARAM"
      }, {
        "name" : "Default[storycnts]",
        "paramAction" : "SQLPARAM",
        "srcFieldName" : "storycnts",
        "getSrcPSDELogicParam" : {
          "modelref" : true,
          "id" : "Default"
        },
        "srcValueType" : "SRCDLPARAM"
      }, {
        "name" : "Default[casecnt]",
        "paramAction" : "SQLPARAM",
        "srcFieldName" : "casecnt",
        "getSrcPSDELogicParam" : {
          "modelref" : true,
          "id" : "Default"
        },
        "srcValueType" : "SRCDLPARAM"
      }, {
        "name" : "Default[rencase]",
        "paramAction" : "SQLPARAM",
        "srcFieldName" : "rencase",
        "getSrcPSDELogicParam" : {
          "modelref" : true,
          "id" : "Default"
        },
        "srcValueType" : "SRCDLPARAM"
      }, {
        "name" : "Default[testresultcnt]",
        "paramAction" : "SQLPARAM",
        "srcFieldName" : "testresultcnt",
        "getSrcPSDELogicParam" : {
          "modelref" : true,
          "id" : "Default"
        },
        "srcValueType" : "SRCDLPARAM"
      }, {
        "name" : "Default[failcase]",
        "paramAction" : "SQLPARAM",
        "srcFieldName" : "failcase",
        "getSrcPSDELogicParam" : {
          "modelref" : true,
          "id" : "Default"
        },
        "srcValueType" : "SRCDLPARAM"
      }, {
        "name" : "Default[bugcnt]",
        "paramAction" : "SQLPARAM",
        "srcFieldName" : "bugcnt",
        "getSrcPSDELogicParam" : {
          "modelref" : true,
          "id" : "Default"
        },
        "srcValueType" : "SRCDLPARAM"
      }, {
        "name" : "Default[ylbugcnt]",
        "paramAction" : "SQLPARAM",
        "srcFieldName" : "ylbugcnt",
        "getSrcPSDELogicParam" : {
          "modelref" : true,
          "id" : "Default"
        },
        "srcValueType" : "SRCDLPARAM"
      }, {
        "name" : "Default[casebugcnt]",
        "paramAction" : "SQLPARAM",
        "srcFieldName" : "casebugcnt",
        "getSrcPSDELogicParam" : {
          "modelref" : true,
          "id" : "Default"
        },
        "srcValueType" : "SRCDLPARAM"
      }, {
        "name" : "Default[effective]",
        "paramAction" : "SQLPARAM",
        "srcFieldName" : "effective",
        "getSrcPSDELogicParam" : {
          "modelref" : true,
          "id" : "Default"
        },
        "srcValueType" : "SRCDLPARAM"
      }, {
        "name" : "Default[resolvedcnt]",
        "paramAction" : "SQLPARAM",
        "srcFieldName" : "resolvedcnt",
        "getSrcPSDELogicParam" : {
          "modelref" : true,
          "id" : "Default"
        },
        "srcValueType" : "SRCDLPARAM"
      }, {
        "name" : "Default[resolvedcnt]",
        "paramAction" : "SQLPARAM",
        "srcFieldName" : "resolvedcnt",
        "getSrcPSDELogicParam" : {
          "modelref" : true,
          "id" : "Default"
        },
        "srcValueType" : "SRCDLPARAM"
      }, {
        "name" : "Default[resolvedcnt]",
        "paramAction" : "SQLPARAM",
        "srcFieldName" : "resolvedcnt",
        "getSrcPSDELogicParam" : {
          "modelref" : true,
          "id" : "Default"
        },
        "srcValueType" : "SRCDLPARAM"
      }, {
        "name" : "Default[casebugcnt]",
        "paramAction" : "SQLPARAM",
        "srcFieldName" : "casebugcnt",
        "getSrcPSDELogicParam" : {
          "modelref" : true,
          "id" : "Default"
        },
        "srcValueType" : "SRCDLPARAM"
      }, {
        "name" : "Default[bugcnt]",
        "paramAction" : "SQLPARAM",
        "srcFieldName" : "bugcnt",
        "getSrcPSDELogicParam" : {
          "modelref" : true,
          "id" : "Default"
        },
        "srcValueType" : "SRCDLPARAM"
      }, {
        "name" : "Default[bugcnt]",
        "paramAction" : "SQLPARAM",
        "srcFieldName" : "bugcnt",
        "getSrcPSDELogicParam" : {
          "modelref" : true,
          "id" : "Default"
        },
        "srcValueType" : "SRCDLPARAM"
      }, {
        "name" : "Default[bugcnt]",
        "paramAction" : "SQLPARAM",
        "srcFieldName" : "bugcnt",
        "getSrcPSDELogicParam" : {
          "modelref" : true,
          "id" : "Default"
        },
        "srcValueType" : "SRCDLPARAM"
      } ],
      "sql" : "select CONCAT_WS('','本页共 ',?,' 个需求，预计 ',case when ? is null then 0 else ? end,' 个工时，用例覆盖率 ',CONCAT(ROUND(?/(case when ?= 0 or ? is null then 1 else ? end) * 100, 0)),'%。<br>','共测试了1个版本。共有',?,'个用例，共执行',?,'个用例，产生了',?,'个结果，失败的用例有',?,'个。<br>','共发现',?,'个Bug<a data-toggle=\"tooltip\" class=\"text-warning\" title=\"影响版本在测试轮次内，并且创建时间在测试时间范围内产生的Bug数。\" style=\"vertical-align: middle;padding: 2px;\"><i class=\"fa fa-question-circle\" style=\" color: #ff9800;\"></i></a>，遗留',?,'个Bug<a data-toggle=\"tooltip\" class=\"text-warning\" title=\"Bug状态是激活，或Bug的解决时间在测试结束时间之后。\" style=\"vertical-align: middle;padding: 2px;\"><i class=\"fa fa-question-circle\" style=\" color: #ff9800;\"></i></a>。 用例执行产生',?,'个Bug<a data-toggle=\"tooltip\" class=\"text-warning\" title=\"测试时间范围内，用例执行失败后创建的Bug。\" style=\"vertical-align: middle;padding: 2px;\"><i class=\"fa fa-question-circle\" style=\" color: #ff9800;\"></i></a>。 有效Bug率（方案为已解决或延期 / 状态为已解决或已关闭）：',CONCAT(ROUND(?/(case when ? = 0 or ? is null then 1 else ? end) * 100, 2), '%'),'，用例发现Bug率（用例创建的Bug / 发现Bug数）：',CONCAT(ROUND(?/(case when ? = 0 or ? is null then 1 else ? end)* 100, 2) , '%')) as OVERVIEWS from dual",
      "fillDstLogicParam" : true,
      "parallelOutput" : true
    }, {
      "codeName" : "Rawsqlcall5",
      "getDstPSDELogicParam" : {
        "modelref" : true,
        "id" : "Default"
      },
      "logicNodeType" : "RAWSQLCALL",
      "name" : "有效需求数",
      "getPSDELogicLinks" : [ {
        "getDstPSDELogicNode" : {
          "modelref" : true,
          "id" : "Rawsqlcall6"
        },
        "name" : "连接6946",
        "getSrcPSDELogicNode" : {
          "modelref" : true,
          "id" : "Rawsqlcall5"
        },
        "defaultLink" : false
      } ],
      "getPSDELogicNodeParams" : [ {
        "name" : "Default[TASKS]",
        "paramAction" : "SQLPARAM",
        "srcFieldName" : "TASKS",
        "getSrcPSDELogicParam" : {
          "modelref" : true,
          "id" : "Default"
        },
        "srcValueType" : "SRCDLPARAM"
      } ],
      "sql" : "SELECT\nCOUNT(1) as storycnts\nFROM `zt_story` t1 \nLEFT JOIN zt_build t21 on FIND_IN_SET(t1.id,t21.stories)\nLEFT JOIN zt_testtask t31 on t31.build = t21.id\nWHERE t1.`DELETED` = '0' and (t1.`status` <> 'closed' or (t1.`status` = 'closed' and t1.closedReason in ('done','postponed'))) and t31.id = ?",
      "fillDstLogicParam" : true,
      "parallelOutput" : true
    }, {
      "codeName" : "Rawsqlcall6",
      "getDstPSDELogicParam" : {
        "modelref" : true,
        "id" : "Default"
      },
      "logicNodeType" : "RAWSQLCALL",
      "name" : "用例覆盖数",
      "getPSDELogicLinks" : [ {
        "getDstPSDELogicNode" : {
          "modelref" : true,
          "id" : "Rawsqlcall7"
        },
        "name" : "连接513",
        "getSrcPSDELogicNode" : {
          "modelref" : true,
          "id" : "Rawsqlcall6"
        },
        "defaultLink" : false
      } ],
      "getPSDELogicNodeParams" : [ {
        "name" : "Default[TASKS]",
        "paramAction" : "SQLPARAM",
        "srcFieldName" : "TASKS",
        "getSrcPSDELogicParam" : {
          "modelref" : true,
          "id" : "Default"
        },
        "srcValueType" : "SRCDLPARAM"
      } ],
      "sql" : "SELECT\ncount(1) as casecnts\nFROM `zt_story` t1 \nLEFT JOIN zt_build t21 on FIND_IN_SET(t1.id,t21.stories)\nLEFT JOIN zt_testtask t31 on t31.build = t21.id\nWHERE t1.`DELETED` = '0'  and (t1.`status` <> 'closed' or (t1.`status` = 'closed' and t1.closedReason in ('done','postponed'))) and EXISTS(select 1 from zt_case t where t.deleted = '0' and t1.id = t.story) and t31.id = ?",
      "fillDstLogicParam" : true,
      "parallelOutput" : true
    }, {
      "codeName" : "Rawsqlcall8",
      "getDstPSDELogicParam" : {
        "modelref" : true,
        "id" : "Default"
      },
      "logicNodeType" : "RAWSQLCALL",
      "name" : "用例产生的bug",
      "getPSDELogicLinks" : [ {
        "getDstPSDELogicNode" : {
          "modelref" : true,
          "id" : "Rawsqlcall9"
        },
        "name" : "连接3946",
        "getSrcPSDELogicNode" : {
          "modelref" : true,
          "id" : "Rawsqlcall8"
        },
        "defaultLink" : false
      } ],
      "getPSDELogicNodeParams" : [ {
        "name" : "Default[TASKS]",
        "paramAction" : "SQLPARAM",
        "srcFieldName" : "TASKS",
        "getSrcPSDELogicParam" : {
          "modelref" : true,
          "id" : "Default"
        },
        "srcValueType" : "SRCDLPARAM"
      }, {
        "name" : "Default[BEGIN]",
        "paramAction" : "SQLPARAM",
        "srcFieldName" : "BEGIN",
        "getSrcPSDELogicParam" : {
          "modelref" : true,
          "id" : "Default"
        },
        "srcValueType" : "SRCDLPARAM"
      }, {
        "name" : "Default[END]",
        "paramAction" : "SQLPARAM",
        "srcFieldName" : "END",
        "getSrcPSDELogicParam" : {
          "modelref" : true,
          "id" : "Default"
        },
        "srcValueType" : "SRCDLPARAM"
      } ],
      "sql" : "SELECT\nCOUNT(1) as casebugcnt\nFROM `zt_bug` t1 \nwhere  t1.OPENEDBUILD = (select tt.build from zt_testtask tt where tt.id = ?)   and t1.openedDate > ? and t1.openedDate < (select CONCAT( DATE_FORMAT( ?, '%Y-%m-%d'),' 23:59:59') )  and t1.`case` > 0",
      "fillDstLogicParam" : true,
      "parallelOutput" : true
    }, {
      "codeName" : "Begin",
      "logicNodeType" : "BEGIN",
      "name" : "开始",
      "getPSDELogicLinks" : [ {
        "getDstPSDELogicNode" : {
          "modelref" : true,
          "id" : "Rawsqlcall1"
        },
        "name" : "连接3650",
        "getSrcPSDELogicNode" : {
          "modelref" : true,
          "id" : "Begin"
        },
        "defaultLink" : false
      } ],
      "parallelOutput" : true
    }, {
      "codeName" : "Rawsqlcall4",
      "getDstPSDELogicParam" : {
        "modelref" : true,
        "id" : "Default"
      },
      "logicNodeType" : "RAWSQLCALL",
      "name" : "获取失败的用例数",
      "getPSDELogicLinks" : [ {
        "getDstPSDELogicNode" : {
          "modelref" : true,
          "id" : "Rawsqlcall5"
        },
        "name" : "连接3127",
        "getSrcPSDELogicNode" : {
          "modelref" : true,
          "id" : "Rawsqlcall4"
        },
        "defaultLink" : false
      } ],
      "getPSDELogicNodeParams" : [ {
        "name" : "Default[CASES]",
        "paramAction" : "SQLPARAM",
        "srcFieldName" : "CASES",
        "getSrcPSDELogicParam" : {
          "modelref" : true,
          "id" : "Default"
        },
        "srcValueType" : "SRCDLPARAM"
      }, {
        "name" : "Default[TASKS]",
        "paramAction" : "SQLPARAM",
        "srcFieldName" : "TASKS",
        "getSrcPSDELogicParam" : {
          "modelref" : true,
          "id" : "Default"
        },
        "srcValueType" : "SRCDLPARAM"
      }, {
        "name" : "Default[BEGIN]",
        "paramAction" : "SQLPARAM",
        "srcFieldName" : "BEGIN",
        "getSrcPSDELogicParam" : {
          "modelref" : true,
          "id" : "Default"
        },
        "srcValueType" : "SRCDLPARAM"
      }, {
        "name" : "Default[END]",
        "paramAction" : "SQLPARAM",
        "srcFieldName" : "END",
        "getSrcPSDELogicParam" : {
          "modelref" : true,
          "id" : "Default"
        },
        "srcValueType" : "SRCDLPARAM"
      } ],
      "sql" : "select COUNT(1) as failcase from (SELECT\nDISTINCT t1.id\nFROM `zt_case` t1 \nleft join zt_testrun t11 on t1.id = t11.`case`\nleft join zt_testresult t21 on t21.run = t11.id\nLEFT JOIN zt_testtask t31 on t31.id = t11.task\nWHERE  t1.`DELETED` = '0'  \nAND FIND_IN_SET ( t1.ID, ?) and FIND_IN_SET(t11.task , ?)  and t21.date > ? \nand t21.date < (SELECT CONCAT(DATE_FORMAT(?,'%Y-%m-%d'),' 23:59:59') )   and t21.caseResult = 'fail') t",
      "fillDstLogicParam" : true,
      "parallelOutput" : true
    }, {
      "codeName" : "Rawsqlcall10",
      "getDstPSDELogicParam" : {
        "modelref" : true,
        "id" : "Default"
      },
      "logicNodeType" : "RAWSQLCALL",
      "name" : "有效bug数",
      "getPSDELogicLinks" : [ {
        "getDstPSDELogicNode" : {
          "modelref" : true,
          "id" : "Rawsqlcall11"
        },
        "name" : "连接217",
        "getSrcPSDELogicNode" : {
          "modelref" : true,
          "id" : "Rawsqlcall10"
        },
        "defaultLink" : false
      } ],
      "getPSDELogicNodeParams" : [ {
        "name" : "Default[TASKS]",
        "paramAction" : "SQLPARAM",
        "srcFieldName" : "TASKS",
        "getSrcPSDELogicParam" : {
          "modelref" : true,
          "id" : "Default"
        },
        "srcValueType" : "SRCDLPARAM"
      }, {
        "name" : "Default[BEGIN]",
        "paramAction" : "SQLPARAM",
        "srcFieldName" : "BEGIN",
        "getSrcPSDELogicParam" : {
          "modelref" : true,
          "id" : "Default"
        },
        "srcValueType" : "SRCDLPARAM"
      }, {
        "name" : "Default[END]",
        "paramAction" : "SQLPARAM",
        "srcFieldName" : "END",
        "getSrcPSDELogicParam" : {
          "modelref" : true,
          "id" : "Default"
        },
        "srcValueType" : "SRCDLPARAM"
      } ],
      "sql" : "SELECT\nCOUNT(1) as effective\nFROM `zt_bug` t1 \nwhere  t1.OPENEDBUILD = (select t.build from zt_testtask t  where t.id = ?)  and t1.openedDate > ? and t1.openedDate < (select CONCAT( DATE_FORMAT( ?, '%Y-%m-%d'),' 23:59:59') \n) and t1.`status` in ('resolved','closed') and t1.resolution in ('fixed','postponed')",
      "fillDstLogicParam" : true,
      "parallelOutput" : true
    }, {
      "codeName" : "Rawsqlcall2",
      "getDstPSDELogicParam" : {
        "modelref" : true,
        "id" : "Default"
      },
      "logicNodeType" : "RAWSQLCALL",
      "name" : "获取用例数",
      "getPSDELogicLinks" : [ {
        "getDstPSDELogicNode" : {
          "modelref" : true,
          "id" : "Rawsqlcall3"
        },
        "name" : "连接9778",
        "getSrcPSDELogicNode" : {
          "modelref" : true,
          "id" : "Rawsqlcall2"
        },
        "defaultLink" : false
      } ],
      "getPSDELogicNodeParams" : [ {
        "name" : "Default[CASES]",
        "paramAction" : "SQLPARAM",
        "srcFieldName" : "CASES",
        "getSrcPSDELogicParam" : {
          "modelref" : true,
          "id" : "Default"
        },
        "srcValueType" : "SRCDLPARAM"
      }, {
        "name" : "Default[TASKS]",
        "paramAction" : "SQLPARAM",
        "srcFieldName" : "TASKS",
        "getSrcPSDELogicParam" : {
          "modelref" : true,
          "id" : "Default"
        },
        "srcValueType" : "SRCDLPARAM"
      } ],
      "sql" : "select COUNT(1) as casecnt from ( SELECT\nDISTINCT t1.*\nFROM `zt_case` t1 \nleft join zt_testrun t11 on t1.id = t11.`case`\nWHERE  t1.`DELETED` = '0' AND FIND_IN_SET ( t1.ID, ?) and FIND_IN_SET(t11.task ,?) )t",
      "fillDstLogicParam" : true,
      "parallelOutput" : true
    }, {
      "codeName" : "Rawsqlcall12",
      "getDstPSDELogicParam" : {
        "modelref" : true,
        "id" : "Default"
      },
      "logicNodeType" : "RAWSQLCALL",
      "name" : "产生的bug",
      "getPSDELogicLinks" : [ {
        "getDstPSDELogicNode" : {
          "modelref" : true,
          "id" : "Rawsqlcall13"
        },
        "name" : "连接2863",
        "getSrcPSDELogicNode" : {
          "modelref" : true,
          "id" : "Rawsqlcall12"
        },
        "defaultLink" : false
      } ],
      "getPSDELogicNodeParams" : [ {
        "name" : "Default[TASKS]",
        "paramAction" : "SQLPARAM",
        "srcFieldName" : "TASKS",
        "getSrcPSDELogicParam" : {
          "modelref" : true,
          "id" : "Default"
        },
        "srcValueType" : "SRCDLPARAM"
      }, {
        "name" : "Default[BEGIN]",
        "paramAction" : "SQLPARAM",
        "srcFieldName" : "BEGIN",
        "getSrcPSDELogicParam" : {
          "modelref" : true,
          "id" : "Default"
        },
        "srcValueType" : "SRCDLPARAM"
      }, {
        "name" : "Default[END]",
        "paramAction" : "SQLPARAM",
        "srcFieldName" : "END",
        "getSrcPSDELogicParam" : {
          "modelref" : true,
          "id" : "Default"
        },
        "srcValueType" : "SRCDLPARAM"
      } ],
      "sql" : "SELECT\nCOUNT(1) as bugcnt\nFROM `zt_bug` t1 \nwhere t1.OPENEDBUILD = (select build from  zt_testtask  where id = ?)  and t1.openedDate > ?\n and t1.openedDate < (select CONCAT( DATE_FORMAT( ?, '%Y-%m-%d'),' 23:59:59') )",
      "fillDstLogicParam" : true,
      "parallelOutput" : true
    }, {
      "codeName" : "Rawsqlcall7",
      "getDstPSDELogicParam" : {
        "modelref" : true,
        "id" : "Default"
      },
      "logicNodeType" : "RAWSQLCALL",
      "name" : "遗留的bug",
      "getPSDELogicLinks" : [ {
        "getDstPSDELogicNode" : {
          "modelref" : true,
          "id" : "Rawsqlcall8"
        },
        "name" : "连接6863",
        "getSrcPSDELogicNode" : {
          "modelref" : true,
          "id" : "Rawsqlcall7"
        },
        "defaultLink" : false
      } ],
      "getPSDELogicNodeParams" : [ {
        "name" : "Default[TASKS]",
        "paramAction" : "SQLPARAM",
        "srcFieldName" : "TASKS",
        "getSrcPSDELogicParam" : {
          "modelref" : true,
          "id" : "Default"
        },
        "srcValueType" : "SRCDLPARAM"
      }, {
        "name" : "Default[BEGIN]",
        "paramAction" : "SQLPARAM",
        "srcFieldName" : "BEGIN",
        "getSrcPSDELogicParam" : {
          "modelref" : true,
          "id" : "Default"
        },
        "srcValueType" : "SRCDLPARAM"
      }, {
        "name" : "Default[END]",
        "paramAction" : "SQLPARAM",
        "srcFieldName" : "END",
        "getSrcPSDELogicParam" : {
          "modelref" : true,
          "id" : "Default"
        },
        "srcValueType" : "SRCDLPARAM"
      }, {
        "name" : "Default[END]",
        "paramAction" : "SQLPARAM",
        "srcFieldName" : "END",
        "getSrcPSDELogicParam" : {
          "modelref" : true,
          "id" : "Default"
        },
        "srcValueType" : "SRCDLPARAM"
      } ],
      "sql" : "SELECT\nCOUNT(1) as ylbugcnt\nFROM `zt_bug` t1 \nwhere  t1.OPENEDBUILD = (select t.build from zt_testtask t  where t.id = ?)   and t1.openedDate > ? and t1.openedDate < (select CONCAT( DATE_FORMAT( ?, '%Y-%m-%d'),' 23:59:59') \n) and (t1.`status` = 'active' or t1.resolvedDate > ?)",
      "fillDstLogicParam" : true,
      "parallelOutput" : true
    } ],
    "getPSDELogicParams" : [ {
      "codeName" : "Default",
      "name" : "传入变量",
      "getParamPSDataEntity" : {
        "modelref" : true,
        "path" : "PSMODULES/zentao/PSDATAENTITIES/TestReport.json"
      },
      "default" : true
    } ],
    "getStartPSDELogicNode" : {
      "modelref" : true,
      "id" : "Begin"
    },
    "enableBackend" : true,
    "enableFront" : false
  }, {
    "codeName" : "GetInfoTestTaskOvProject",
    "defaultParamName" : "Default",
    "dynaModelFilePath" : "PSMODULES/zentao/PSDATAENTITIES/TestReport/PSDELOGICS/GetInfoTestTaskOvProject.json",
    "logicName" : "根据测试报告概况信息（项目报告）",
    "name" : "根据测试报告概况信息（项目报告）",
    "getPSDELogicNodes" : [ {
      "codeName" : "Rawsqlcall2",
      "getDstPSDELogicParam" : {
        "modelref" : true,
        "id" : "Default"
      },
      "logicNodeType" : "RAWSQLCALL",
      "name" : "获取用例数",
      "getPSDELogicLinks" : [ {
        "getDstPSDELogicNode" : {
          "modelref" : true,
          "id" : "Rawsqlcall3"
        },
        "name" : "连接4999",
        "getSrcPSDELogicNode" : {
          "modelref" : true,
          "id" : "Rawsqlcall2"
        },
        "defaultLink" : false
      } ],
      "getPSDELogicNodeParams" : [ {
        "name" : "Default[CASES]",
        "paramAction" : "SQLPARAM",
        "srcFieldName" : "CASES",
        "getSrcPSDELogicParam" : {
          "modelref" : true,
          "id" : "Default"
        },
        "srcValueType" : "SRCDLPARAM"
      }, {
        "name" : "Default[TASKS]",
        "paramAction" : "SQLPARAM",
        "srcFieldName" : "TASKS",
        "getSrcPSDELogicParam" : {
          "modelref" : true,
          "id" : "Default"
        },
        "srcValueType" : "SRCDLPARAM"
      } ],
      "sql" : "select COUNT(1) as casecnt from ( SELECT\nDISTINCT t1.*\nFROM `zt_case` t1 \nleft join zt_testrun t11 on t1.id = t11.`case`\nWHERE  t1.`DELETED` = '0' AND FIND_IN_SET ( t1.ID, ?) and FIND_IN_SET(t11.task ,?) )t",
      "fillDstLogicParam" : true,
      "parallelOutput" : true
    }, {
      "codeName" : "Begin",
      "logicNodeType" : "BEGIN",
      "name" : "开始",
      "getPSDELogicLinks" : [ {
        "getDstPSDELogicNode" : {
          "modelref" : true,
          "id" : "Rawsqlcall1"
        },
        "name" : "连接2885",
        "getSrcPSDELogicNode" : {
          "modelref" : true,
          "id" : "Begin"
        },
        "defaultLink" : false
      } ],
      "parallelOutput" : true
    }, {
      "codeName" : "Rawsqlcall12",
      "getDstPSDELogicParam" : {
        "modelref" : true,
        "id" : "Default"
      },
      "logicNodeType" : "RAWSQLCALL",
      "name" : "测试版本",
      "getPSDELogicLinks" : [ {
        "getDstPSDELogicNode" : {
          "modelref" : true,
          "id" : "Rawsqlcall13"
        },
        "name" : "连接7154",
        "getSrcPSDELogicNode" : {
          "modelref" : true,
          "id" : "Rawsqlcall12"
        },
        "defaultLink" : false
      } ],
      "getPSDELogicNodeParams" : [ {
        "name" : "Default[BUILDS]",
        "paramAction" : "SQLPARAM",
        "srcFieldName" : "BUILDS",
        "getSrcPSDELogicParam" : {
          "modelref" : true,
          "id" : "Default"
        },
        "srcValueType" : "SRCDLPARAM"
      } ],
      "sql" : "select count(1) as buildcnt from zt_build t where FIND_IN_SET(t.id,?)",
      "fillDstLogicParam" : true,
      "parallelOutput" : true
    }, {
      "codeName" : "Rawsqlcall3",
      "getDstPSDELogicParam" : {
        "modelref" : true,
        "id" : "Default"
      },
      "logicNodeType" : "RAWSQLCALL",
      "name" : "执行的用例数",
      "getPSDELogicLinks" : [ {
        "getDstPSDELogicNode" : {
          "modelref" : true,
          "id" : "Rawsqlcall4"
        },
        "name" : "连接715",
        "getSrcPSDELogicNode" : {
          "modelref" : true,
          "id" : "Rawsqlcall3"
        },
        "defaultLink" : false
      } ],
      "getPSDELogicNodeParams" : [ {
        "name" : "Default[CASES]",
        "paramAction" : "SQLPARAM",
        "srcFieldName" : "CASES",
        "getSrcPSDELogicParam" : {
          "modelref" : true,
          "id" : "Default"
        },
        "srcValueType" : "SRCDLPARAM"
      }, {
        "name" : "Default[TASKS]",
        "paramAction" : "SQLPARAM",
        "srcFieldName" : "TASKS",
        "getSrcPSDELogicParam" : {
          "modelref" : true,
          "id" : "Default"
        },
        "srcValueType" : "SRCDLPARAM"
      }, {
        "name" : "Default[BEGIN]",
        "paramAction" : "SQLPARAM",
        "srcFieldName" : "BEGIN",
        "getSrcPSDELogicParam" : {
          "modelref" : true,
          "id" : "Default"
        },
        "srcValueType" : "SRCDLPARAM"
      }, {
        "name" : "Default[END]",
        "paramAction" : "SQLPARAM",
        "srcFieldName" : "END",
        "getSrcPSDELogicParam" : {
          "modelref" : true,
          "id" : "Default"
        },
        "srcValueType" : "SRCDLPARAM"
      } ],
      "sql" : "select COUNT(1) as rencase from (SELECT\nDISTINCT t1.id\nFROM `zt_case` t1 \nleft join zt_testrun t11 on t1.id = t11.`case`\nINNER join zt_testresult t21 on t21.run = t11.id\nWHERE  t1.`DELETED` = '0' AND FIND_IN_SET ( t1.ID, ?) and FIND_IN_SET(t11.task ,?) and t21.date >   ? and t21.date <  ? ) t",
      "fillDstLogicParam" : true,
      "parallelOutput" : true
    }, {
      "codeName" : "Rawsqlcall5",
      "getDstPSDELogicParam" : {
        "modelref" : true,
        "id" : "Default"
      },
      "logicNodeType" : "RAWSQLCALL",
      "name" : "执行结果",
      "getPSDELogicLinks" : [ {
        "getDstPSDELogicNode" : {
          "modelref" : true,
          "id" : "Rawsqlcall6"
        },
        "name" : "连接7149",
        "getSrcPSDELogicNode" : {
          "modelref" : true,
          "id" : "Rawsqlcall5"
        },
        "defaultLink" : false
      } ],
      "getPSDELogicNodeParams" : [ {
        "name" : "Default[TASKS]",
        "paramAction" : "SQLPARAM",
        "srcFieldName" : "TASKS",
        "getSrcPSDELogicParam" : {
          "modelref" : true,
          "id" : "Default"
        },
        "srcValueType" : "SRCDLPARAM"
      }, {
        "name" : "Default[CASES]",
        "paramAction" : "SQLPARAM",
        "srcFieldName" : "CASES",
        "getSrcPSDELogicParam" : {
          "modelref" : true,
          "id" : "Default"
        },
        "srcValueType" : "SRCDLPARAM"
      }, {
        "name" : "Default[BEGIN]",
        "paramAction" : "SQLPARAM",
        "srcFieldName" : "BEGIN",
        "getSrcPSDELogicParam" : {
          "modelref" : true,
          "id" : "Default"
        },
        "srcValueType" : "SRCDLPARAM"
      }, {
        "name" : "Default[END]",
        "paramAction" : "SQLPARAM",
        "srcFieldName" : "END",
        "getSrcPSDELogicParam" : {
          "modelref" : true,
          "id" : "Default"
        },
        "srcValueType" : "SRCDLPARAM"
      } ],
      "sql" : "select COUNT(1) testresultcnt from zt_testresult t1 \nINNER JOIN zt_case t31 on t31.id = t1.`case`\ninner join zt_testrun t11 on t1.run = t11.id and t1.`case` = t11.`case`\nwhere FIND_IN_SET(t11.task, ?) and FIND_IN_SET(t11.`case`,?) and t31.deleted = '0' and t1.date >   ?  and t1.date <  CONCAT( DATE_FORMAT( ?, '%Y-%m-%d'),' 23:59:59')",
      "fillDstLogicParam" : true,
      "parallelOutput" : true
    }, {
      "codeName" : "Rawsqlcall7",
      "getDstPSDELogicParam" : {
        "modelref" : true,
        "id" : "Default"
      },
      "logicNodeType" : "RAWSQLCALL",
      "name" : "解决的Bug",
      "getPSDELogicLinks" : [ {
        "getDstPSDELogicNode" : {
          "modelref" : true,
          "id" : "Rawsqlcall8"
        },
        "name" : "连接1248",
        "getSrcPSDELogicNode" : {
          "modelref" : true,
          "id" : "Rawsqlcall7"
        },
        "defaultLink" : false
      } ],
      "getPSDELogicNodeParams" : [ {
        "name" : "Default[TASKS]",
        "paramAction" : "SQLPARAM",
        "srcFieldName" : "TASKS",
        "getSrcPSDELogicParam" : {
          "modelref" : true,
          "id" : "Default"
        },
        "srcValueType" : "SRCDLPARAM"
      }, {
        "name" : "Default[BEGIN]",
        "paramAction" : "SQLPARAM",
        "srcFieldName" : "BEGIN",
        "getSrcPSDELogicParam" : {
          "modelref" : true,
          "id" : "Default"
        },
        "srcValueType" : "SRCDLPARAM"
      }, {
        "name" : "Default[END]",
        "paramAction" : "SQLPARAM",
        "srcFieldName" : "END",
        "getSrcPSDELogicParam" : {
          "modelref" : true,
          "id" : "Default"
        },
        "srcValueType" : "SRCDLPARAM"
      }, {
        "name" : "Default[TASKS]",
        "paramAction" : "SQLPARAM",
        "srcFieldName" : "TASKS",
        "getSrcPSDELogicParam" : {
          "modelref" : true,
          "id" : "Default"
        },
        "srcValueType" : "SRCDLPARAM"
      } ],
      "sql" : "select count(1) as \tresolvedcnt from (\nSELECT\nDISTINCT t1.*\nFROM `zt_bug` t1 \n\tINNER JOIN (select tt.id from zt_build tt where tt.deleted = '0' and tt.id in (\n\tselect t1.build from zt_testtask t1 where FIND_IN_SET(t1.id,?))) t71 on FIND_IN_SET(t71.id,t1.openedBuild)\nwhere  t1.openedDate > ? and t1.openedDate < CONCAT( DATE_FORMAT( ?, '%Y-%m-%d'),' 23:59:59') and not EXISTS(select 1 from zt_build t where FIND_IN_SET(t.id,t1.openedBuild) and FIND_IN_SET(t.id,(select GROUP_CONCAT(tt.id) from (select tt.* from zt_build tt where  tt.id in (\n\tselect t1.build from zt_testtask t1 where FIND_IN_SET(t1.id,?))) tt GROUP BY tt.product)) = 0) and FIND_IN_SET('trunk',t1.openedBuild) = 0 and FIND_IN_SET('trunk',t1.openedBuild) = 0 and  t1.`status` in ('resolved','closed')) t",
      "fillDstLogicParam" : true,
      "parallelOutput" : true
    }, {
      "codeName" : "Rawsqlcall6",
      "getDstPSDELogicParam" : {
        "modelref" : true,
        "id" : "Default"
      },
      "logicNodeType" : "RAWSQLCALL",
      "name" : "有效Bug数",
      "getPSDELogicLinks" : [ {
        "getDstPSDELogicNode" : {
          "modelref" : true,
          "id" : "Rawsqlcall7"
        },
        "name" : "连接6472",
        "getSrcPSDELogicNode" : {
          "modelref" : true,
          "id" : "Rawsqlcall6"
        },
        "defaultLink" : false
      } ],
      "getPSDELogicNodeParams" : [ {
        "name" : "Default[TASKS]",
        "paramAction" : "SQLPARAM",
        "srcFieldName" : "TASKS",
        "getSrcPSDELogicParam" : {
          "modelref" : true,
          "id" : "Default"
        },
        "srcValueType" : "SRCDLPARAM"
      }, {
        "name" : "Default[BEGIN]",
        "paramAction" : "SQLPARAM",
        "srcFieldName" : "BEGIN",
        "getSrcPSDELogicParam" : {
          "modelref" : true,
          "id" : "Default"
        },
        "srcValueType" : "SRCDLPARAM"
      }, {
        "name" : "Default[END]",
        "paramAction" : "SQLPARAM",
        "srcFieldName" : "END",
        "getSrcPSDELogicParam" : {
          "modelref" : true,
          "id" : "Default"
        },
        "srcValueType" : "SRCDLPARAM"
      }, {
        "name" : "Default[TASKS]",
        "paramAction" : "SQLPARAM",
        "srcFieldName" : "TASKS",
        "getSrcPSDELogicParam" : {
          "modelref" : true,
          "id" : "Default"
        },
        "srcValueType" : "SRCDLPARAM"
      } ],
      "sql" : "select count(1) as\teffective from (\nSELECT\nDISTINCT t1.*\nFROM `zt_bug` t1 \n\tINNER JOIN (select tt.id from zt_build tt where tt.deleted = '0' and tt.id in (\n\tselect t1.build from zt_testtask t1 where FIND_IN_SET(t1.id,?))) t71 on FIND_IN_SET(t71.id,t1.openedBuild)\nwhere  t1.openedDate > ? and t1.openedDate < CONCAT( DATE_FORMAT( ?, '%Y-%m-%d'),' 23:59:59') and not EXISTS(select 1 from zt_build t where FIND_IN_SET(t.id,t1.openedBuild) and FIND_IN_SET(t.id,(select GROUP_CONCAT(tt.id) from (select tt.* from zt_build tt where  tt.id in (\n\tselect t1.build from zt_testtask t1 where FIND_IN_SET(t1.id,?))) tt GROUP BY tt.product)) = 0) and FIND_IN_SET('trunk',t1.openedBuild) = 0 and t1.`status` in ('resolved','closed') and t1.resolution in ('fixed','postponed')) t",
      "fillDstLogicParam" : true,
      "parallelOutput" : true
    }, {
      "codeName" : "Rawsqlcall14",
      "getDstPSDELogicParam" : {
        "modelref" : true,
        "id" : "Default"
      },
      "logicNodeType" : "RAWSQLCALL",
      "name" : "需求覆盖用例数",
      "getPSDELogicLinks" : [ {
        "getDstPSDELogicNode" : {
          "modelref" : true,
          "id" : "Rawsqlcall10"
        },
        "name" : "连接8440",
        "getSrcPSDELogicNode" : {
          "modelref" : true,
          "id" : "Rawsqlcall14"
        },
        "defaultLink" : false
      } ],
      "getPSDELogicNodeParams" : [ {
        "name" : "Default[STORIES]",
        "paramAction" : "SQLPARAM",
        "srcFieldName" : "STORIES",
        "getSrcPSDELogicParam" : {
          "modelref" : true,
          "id" : "Default"
        },
        "srcValueType" : "SRCDLPARAM"
      } ],
      "sql" : "SELECT\ncount(1) as casecnts\nFROM `zt_story` t1 \nWHERE t1.`DELETED` = '0' AND FIND_IN_SET ( t1.ID, ?) and (t1.`status` <> 'closed' or (t1.`status` = 'closed' and t1.closedReason in ('done','postponed'))) and EXISTS(select 1 from zt_case t where t.deleted = '0' and t1.id = t.story)",
      "fillDstLogicParam" : true,
      "parallelOutput" : true
    }, {
      "codeName" : "Rawsqlcall8",
      "getDstPSDELogicParam" : {
        "modelref" : true,
        "id" : "Default"
      },
      "logicNodeType" : "RAWSQLCALL",
      "name" : "产生的Bug",
      "getPSDELogicLinks" : [ {
        "getDstPSDELogicNode" : {
          "modelref" : true,
          "id" : "Rawsqlcall9"
        },
        "name" : "连接8691",
        "getSrcPSDELogicNode" : {
          "modelref" : true,
          "id" : "Rawsqlcall8"
        },
        "defaultLink" : false
      } ],
      "getPSDELogicNodeParams" : [ {
        "name" : "Default[TASKS]",
        "paramAction" : "SQLPARAM",
        "srcFieldName" : "TASKS",
        "getSrcPSDELogicParam" : {
          "modelref" : true,
          "id" : "Default"
        },
        "srcValueType" : "SRCDLPARAM"
      }, {
        "name" : "Default[BEGIN]",
        "paramAction" : "SQLPARAM",
        "srcFieldName" : "BEGIN",
        "getSrcPSDELogicParam" : {
          "modelref" : true,
          "id" : "Default"
        },
        "srcValueType" : "SRCDLPARAM"
      }, {
        "name" : "Default[END]",
        "paramAction" : "SQLPARAM",
        "srcFieldName" : "END",
        "getSrcPSDELogicParam" : {
          "modelref" : true,
          "id" : "Default"
        },
        "srcValueType" : "SRCDLPARAM"
      }, {
        "name" : "Default[TASKS]",
        "paramAction" : "SQLPARAM",
        "srcFieldName" : "TASKS",
        "getSrcPSDELogicParam" : {
          "modelref" : true,
          "id" : "Default"
        },
        "srcValueType" : "SRCDLPARAM"
      } ],
      "sql" : "select count(1) as \tbugcnt from (\nSELECT\nDISTINCT t1.*\nFROM `zt_bug` t1 \n\tINNER JOIN (select tt.id from zt_build tt where tt.deleted = '0' and tt.id in (\n\tselect t1.build from zt_testtask t1 where FIND_IN_SET(t1.id,?))) t71 on FIND_IN_SET(t71.id,t1.openedBuild)\nwhere  t1.openedDate > ? and t1.openedDate < CONCAT( DATE_FORMAT( ?, '%Y-%m-%d'),' 23:59:59') and not EXISTS(select 1 from zt_build t where FIND_IN_SET(t.id,t1.openedBuild) and FIND_IN_SET(t.id,(select GROUP_CONCAT(tt.id) from (select tt.* from zt_build tt where  tt.id in (\n\tselect t1.build from zt_testtask t1 where FIND_IN_SET(t1.id,?))) tt GROUP BY tt.product)) = 0) and FIND_IN_SET('trunk',t1.openedBuild) = 0) t",
      "fillDstLogicParam" : true,
      "parallelOutput" : true
    }, {
      "codeName" : "Rawsqlcall9",
      "getDstPSDELogicParam" : {
        "modelref" : true,
        "id" : "Default"
      },
      "logicNodeType" : "RAWSQLCALL",
      "name" : "设置概况",
      "getPSDELogicNodeParams" : [ {
        "name" : "Default[storycnt]",
        "paramAction" : "SQLPARAM",
        "srcFieldName" : "storycnt",
        "getSrcPSDELogicParam" : {
          "modelref" : true,
          "id" : "Default"
        },
        "srcValueType" : "SRCDLPARAM"
      }, {
        "name" : "Default[storyestimate]",
        "paramAction" : "SQLPARAM",
        "srcFieldName" : "storyestimate",
        "getSrcPSDELogicParam" : {
          "modelref" : true,
          "id" : "Default"
        },
        "srcValueType" : "SRCDLPARAM"
      }, {
        "name" : "Default[storyestimate]",
        "paramAction" : "SQLPARAM",
        "srcFieldName" : "storyestimate",
        "getSrcPSDELogicParam" : {
          "modelref" : true,
          "id" : "Default"
        },
        "srcValueType" : "SRCDLPARAM"
      }, {
        "name" : "Default[casecnts]",
        "paramAction" : "SQLPARAM",
        "srcFieldName" : "casecnts",
        "getSrcPSDELogicParam" : {
          "modelref" : true,
          "id" : "Default"
        },
        "srcValueType" : "SRCDLPARAM"
      }, {
        "name" : "Default[storycnts]",
        "paramAction" : "SQLPARAM",
        "srcFieldName" : "storycnts",
        "getSrcPSDELogicParam" : {
          "modelref" : true,
          "id" : "Default"
        },
        "srcValueType" : "SRCDLPARAM"
      }, {
        "name" : "Default[storycnts]",
        "paramAction" : "SQLPARAM",
        "srcFieldName" : "storycnts",
        "getSrcPSDELogicParam" : {
          "modelref" : true,
          "id" : "Default"
        },
        "srcValueType" : "SRCDLPARAM"
      }, {
        "name" : "Default[storycnts]",
        "paramAction" : "SQLPARAM",
        "srcFieldName" : "storycnts",
        "getSrcPSDELogicParam" : {
          "modelref" : true,
          "id" : "Default"
        },
        "srcValueType" : "SRCDLPARAM"
      }, {
        "name" : "Default[buildcnt]",
        "paramAction" : "SQLPARAM",
        "srcFieldName" : "buildcnt",
        "getSrcPSDELogicParam" : {
          "modelref" : true,
          "id" : "Default"
        },
        "srcValueType" : "SRCDLPARAM"
      }, {
        "name" : "Default[casecnt]",
        "paramAction" : "SQLPARAM",
        "srcFieldName" : "casecnt",
        "getSrcPSDELogicParam" : {
          "modelref" : true,
          "id" : "Default"
        },
        "srcValueType" : "SRCDLPARAM"
      }, {
        "name" : "Default[rencase]",
        "paramAction" : "SQLPARAM",
        "srcFieldName" : "rencase",
        "getSrcPSDELogicParam" : {
          "modelref" : true,
          "id" : "Default"
        },
        "srcValueType" : "SRCDLPARAM"
      }, {
        "name" : "Default[testresultcnt]",
        "paramAction" : "SQLPARAM",
        "srcFieldName" : "testresultcnt",
        "getSrcPSDELogicParam" : {
          "modelref" : true,
          "id" : "Default"
        },
        "srcValueType" : "SRCDLPARAM"
      }, {
        "name" : "Default[failcase]",
        "paramAction" : "SQLPARAM",
        "srcFieldName" : "failcase",
        "getSrcPSDELogicParam" : {
          "modelref" : true,
          "id" : "Default"
        },
        "srcValueType" : "SRCDLPARAM"
      }, {
        "name" : "Default[bugcnt]",
        "paramAction" : "SQLPARAM",
        "srcFieldName" : "bugcnt",
        "getSrcPSDELogicParam" : {
          "modelref" : true,
          "id" : "Default"
        },
        "srcValueType" : "SRCDLPARAM"
      }, {
        "name" : "Default[ylbugcnt]",
        "paramAction" : "SQLPARAM",
        "srcFieldName" : "ylbugcnt",
        "getSrcPSDELogicParam" : {
          "modelref" : true,
          "id" : "Default"
        },
        "srcValueType" : "SRCDLPARAM"
      }, {
        "name" : "Default[casebugcnt]",
        "paramAction" : "SQLPARAM",
        "srcFieldName" : "casebugcnt",
        "getSrcPSDELogicParam" : {
          "modelref" : true,
          "id" : "Default"
        },
        "srcValueType" : "SRCDLPARAM"
      }, {
        "name" : "Default[resolvedcnt]",
        "paramAction" : "SQLPARAM",
        "srcFieldName" : "resolvedcnt",
        "getSrcPSDELogicParam" : {
          "modelref" : true,
          "id" : "Default"
        },
        "srcValueType" : "SRCDLPARAM"
      }, {
        "name" : "Default[resolvedcnt]",
        "paramAction" : "SQLPARAM",
        "srcFieldName" : "resolvedcnt",
        "getSrcPSDELogicParam" : {
          "modelref" : true,
          "id" : "Default"
        },
        "srcValueType" : "SRCDLPARAM"
      }, {
        "name" : "Default[effective]",
        "paramAction" : "SQLPARAM",
        "srcFieldName" : "effective",
        "getSrcPSDELogicParam" : {
          "modelref" : true,
          "id" : "Default"
        },
        "srcValueType" : "SRCDLPARAM"
      }, {
        "name" : "Default[resolvedcnt]",
        "paramAction" : "SQLPARAM",
        "srcFieldName" : "resolvedcnt",
        "getSrcPSDELogicParam" : {
          "modelref" : true,
          "id" : "Default"
        },
        "srcValueType" : "SRCDLPARAM"
      }, {
        "name" : "Default[resolvedcnt]",
        "paramAction" : "SQLPARAM",
        "srcFieldName" : "resolvedcnt",
        "getSrcPSDELogicParam" : {
          "modelref" : true,
          "id" : "Default"
        },
        "srcValueType" : "SRCDLPARAM"
      }, {
        "name" : "Default[resolvedcnt]",
        "paramAction" : "SQLPARAM",
        "srcFieldName" : "resolvedcnt",
        "getSrcPSDELogicParam" : {
          "modelref" : true,
          "id" : "Default"
        },
        "srcValueType" : "SRCDLPARAM"
      }, {
        "name" : "Default[bugcnt]",
        "paramAction" : "SQLPARAM",
        "srcFieldName" : "bugcnt",
        "getSrcPSDELogicParam" : {
          "modelref" : true,
          "id" : "Default"
        },
        "srcValueType" : "SRCDLPARAM"
      }, {
        "name" : "Default[bugcnt]",
        "paramAction" : "SQLPARAM",
        "srcFieldName" : "bugcnt",
        "getSrcPSDELogicParam" : {
          "modelref" : true,
          "id" : "Default"
        },
        "srcValueType" : "SRCDLPARAM"
      }, {
        "name" : "Default[casebugcnt]",
        "paramAction" : "SQLPARAM",
        "srcFieldName" : "casebugcnt",
        "getSrcPSDELogicParam" : {
          "modelref" : true,
          "id" : "Default"
        },
        "srcValueType" : "SRCDLPARAM"
      }, {
        "name" : "Default[bugcnt]",
        "paramAction" : "SQLPARAM",
        "srcFieldName" : "bugcnt",
        "getSrcPSDELogicParam" : {
          "modelref" : true,
          "id" : "Default"
        },
        "srcValueType" : "SRCDLPARAM"
      }, {
        "name" : "Default[bugcnt]",
        "paramAction" : "SQLPARAM",
        "srcFieldName" : "bugcnt",
        "getSrcPSDELogicParam" : {
          "modelref" : true,
          "id" : "Default"
        },
        "srcValueType" : "SRCDLPARAM"
      }, {
        "name" : "Default[bugcnt]",
        "paramAction" : "SQLPARAM",
        "srcFieldName" : "bugcnt",
        "getSrcPSDELogicParam" : {
          "modelref" : true,
          "id" : "Default"
        },
        "srcValueType" : "SRCDLPARAM"
      } ],
      "sql" : "select CONCAT_WS('','本页共 ',?,' 个需求，预计 ',case when ? is null then 0 else ? end,' 个工时，用例覆盖率 ',CONCAT(ROUND(?/(case when ?= 0 or ? is null then 1 else ? end) * 100, 0)),'%。<br>','共测试了',?,'个版本。共有',?,'个用例，共执行',?,'个用例，产生了',?,'个结果，失败的用例有',?,'个。<br>','共发现',?,'个Bug<a data-toggle=\"tooltip\" class=\"text-warning\" title=\"影响版本在测试轮次内，并且创建时间在测试时间范围内产生的Bug数。\" style=\"vertical-align: middle;padding: 2px;\"><i class=\"fa fa-question-circle\" style=\" color: #ff9800;\"></i></a>，遗留',?,'个Bug<a data-toggle=\"tooltip\" class=\"text-warning\" title=\"Bug状态是激活，或Bug的解决时间在测试结束时间之后。\" style=\"vertical-align: middle;padding: 2px;\"><i class=\"fa fa-question-circle\" style=\" color: #ff9800;\"></i></a>。 用例执行产生',?,'个Bug<a data-toggle=\"tooltip\" class=\"text-warning\" title=\"测试时间范围内，用例执行失败后创建的Bug。\" style=\"vertical-align: middle;padding: 2px;\"><i class=\"fa fa-question-circle\" style=\" color: #ff9800;\"></i></a>。 有效Bug率（方案为已解决或延期 / 状态为已解决或已关闭）：',CONCAT(case when ? = 0 or ? is null then 0 else ROUND(?/(case when ? = 0 or ? is null then 1 else ? end) * 100, 2) end, '%'),'，用例发现Bug率（用例创建的Bug / 发现Bug数）：',CONCAT(case when ? = 0 or ? is null then 0 else ROUND(?/(case when ? = 0 or ? is null then 1 else ? end)* 100, 2)  end, '%')) as OVERVIEWS from dual",
      "fillDstLogicParam" : true,
      "parallelOutput" : true
    }, {
      "codeName" : "Rawsqlcall11",
      "getDstPSDELogicParam" : {
        "modelref" : true,
        "id" : "Default"
      },
      "logicNodeType" : "RAWSQLCALL",
      "name" : "用例产生的Bug",
      "getPSDELogicLinks" : [ {
        "getDstPSDELogicNode" : {
          "modelref" : true,
          "id" : "Rawsqlcall5"
        },
        "name" : "连接3617",
        "getSrcPSDELogicNode" : {
          "modelref" : true,
          "id" : "Rawsqlcall11"
        },
        "defaultLink" : false
      } ],
      "getPSDELogicNodeParams" : [ {
        "name" : "Default[TASKS]",
        "paramAction" : "SQLPARAM",
        "srcFieldName" : "TASKS",
        "getSrcPSDELogicParam" : {
          "modelref" : true,
          "id" : "Default"
        },
        "srcValueType" : "SRCDLPARAM"
      }, {
        "name" : "Default[BEGIN]",
        "paramAction" : "SQLPARAM",
        "srcFieldName" : "BEGIN",
        "getSrcPSDELogicParam" : {
          "modelref" : true,
          "id" : "Default"
        },
        "srcValueType" : "SRCDLPARAM"
      }, {
        "name" : "Default[END]",
        "paramAction" : "SQLPARAM",
        "srcFieldName" : "END",
        "getSrcPSDELogicParam" : {
          "modelref" : true,
          "id" : "Default"
        },
        "srcValueType" : "SRCDLPARAM"
      }, {
        "name" : "Default[TASKS]",
        "paramAction" : "SQLPARAM",
        "srcFieldName" : "TASKS",
        "getSrcPSDELogicParam" : {
          "modelref" : true,
          "id" : "Default"
        },
        "srcValueType" : "SRCDLPARAM"
      } ],
      "sql" : "select count(1) as \tcasebugcnt from (\nSELECT\nDISTINCT t1.*\nFROM `zt_bug` t1 \n\tINNER JOIN (select tt.id from zt_build tt where tt.deleted = '0' and tt.id in (\n\tselect t1.build from zt_testtask t1 where FIND_IN_SET(t1.id,?))) t71 on FIND_IN_SET(t71.id,t1.openedBuild)\nwhere  t1.openedDate > ? and t1.openedDate <CONCAT(DATE_FORMAT(?,'%Y-%m-%d'),' 23:59:59') and not EXISTS(select 1 from zt_build t where FIND_IN_SET(t.id,t1.openedBuild) and FIND_IN_SET(t.id,(select GROUP_CONCAT(tt.id) from (select tt.* from zt_build tt where  tt.id in (\n\tselect t1.build from zt_testtask t1 where FIND_IN_SET(t1.id,?))) tt GROUP BY tt.product)) = 0) and FIND_IN_SET('trunk',t1.openedBuild) = 0 and t1.`case` > 0) t",
      "fillDstLogicParam" : true,
      "parallelOutput" : true
    }, {
      "codeName" : "Rawsqlcall4",
      "getDstPSDELogicParam" : {
        "modelref" : true,
        "id" : "Default"
      },
      "logicNodeType" : "RAWSQLCALL",
      "name" : "失败的用例数",
      "getPSDELogicLinks" : [ {
        "getDstPSDELogicNode" : {
          "modelref" : true,
          "id" : "Rawsqlcall12"
        },
        "name" : "连接1775",
        "getSrcPSDELogicNode" : {
          "modelref" : true,
          "id" : "Rawsqlcall4"
        },
        "defaultLink" : false
      } ],
      "getPSDELogicNodeParams" : [ {
        "name" : "Default[CASES]",
        "paramAction" : "SQLPARAM",
        "srcFieldName" : "CASES",
        "getSrcPSDELogicParam" : {
          "modelref" : true,
          "id" : "Default"
        },
        "srcValueType" : "SRCDLPARAM"
      }, {
        "name" : "Default[TASKS]",
        "paramAction" : "SQLPARAM",
        "srcFieldName" : "TASKS",
        "getSrcPSDELogicParam" : {
          "modelref" : true,
          "id" : "Default"
        },
        "srcValueType" : "SRCDLPARAM"
      }, {
        "name" : "Default[BEGIN]",
        "paramAction" : "SQLPARAM",
        "srcFieldName" : "BEGIN",
        "getSrcPSDELogicParam" : {
          "modelref" : true,
          "id" : "Default"
        },
        "srcValueType" : "SRCDLPARAM"
      }, {
        "name" : "Default[END]",
        "paramAction" : "SQLPARAM",
        "srcFieldName" : "END",
        "getSrcPSDELogicParam" : {
          "modelref" : true,
          "id" : "Default"
        },
        "srcValueType" : "SRCDLPARAM"
      } ],
      "sql" : "select COUNT(1) as failcase from (SELECT\nDISTINCT t1.id\nFROM `zt_case` t1 \nleft join zt_testrun t11 on t1.id = t11.`case`\nleft join zt_testresult t21 on t21.run = t11.id\nWHERE  t1.`DELETED` = '0' AND FIND_IN_SET ( t1.ID, ?) and FIND_IN_SET(t11.task , ?) and t21.caseResult = 'fail' and t21.date >  ? and t21.date <  ? ) t",
      "fillDstLogicParam" : true,
      "parallelOutput" : true
    }, {
      "codeName" : "Rawsqlcall10",
      "getDstPSDELogicParam" : {
        "modelref" : true,
        "id" : "Default"
      },
      "logicNodeType" : "RAWSQLCALL",
      "name" : "遗留Bug",
      "getPSDELogicLinks" : [ {
        "getDstPSDELogicNode" : {
          "modelref" : true,
          "id" : "Rawsqlcall11"
        },
        "name" : "连接4549",
        "getSrcPSDELogicNode" : {
          "modelref" : true,
          "id" : "Rawsqlcall10"
        },
        "defaultLink" : false
      } ],
      "getPSDELogicNodeParams" : [ {
        "name" : "Default[TASKS]",
        "paramAction" : "SQLPARAM",
        "srcFieldName" : "TASKS",
        "getSrcPSDELogicParam" : {
          "modelref" : true,
          "id" : "Default"
        },
        "srcValueType" : "SRCDLPARAM"
      }, {
        "name" : "Default[BEGIN]",
        "paramAction" : "SQLPARAM",
        "srcFieldName" : "BEGIN",
        "getSrcPSDELogicParam" : {
          "modelref" : true,
          "id" : "Default"
        },
        "srcValueType" : "SRCDLPARAM"
      }, {
        "name" : "Default[END]",
        "paramAction" : "SQLPARAM",
        "srcFieldName" : "END",
        "getSrcPSDELogicParam" : {
          "modelref" : true,
          "id" : "Default"
        },
        "srcValueType" : "SRCDLPARAM"
      }, {
        "name" : "Default[TASKS]",
        "paramAction" : "SQLPARAM",
        "srcFieldName" : "TASKS",
        "getSrcPSDELogicParam" : {
          "modelref" : true,
          "id" : "Default"
        },
        "srcValueType" : "SRCDLPARAM"
      }, {
        "name" : "Default[END]",
        "paramAction" : "SQLPARAM",
        "srcFieldName" : "END",
        "getSrcPSDELogicParam" : {
          "modelref" : true,
          "id" : "Default"
        },
        "srcValueType" : "SRCDLPARAM"
      } ],
      "sql" : "select count(1) as \tylbugcnt from (\nSELECT\nDISTINCT t1.*\nFROM `zt_bug` t1 \n\tINNER JOIN (select tt.id from zt_build tt where tt.deleted = '0' and tt.id in (\n\tselect t1.build from zt_testtask t1 where FIND_IN_SET(t1.id,?))) t71 on FIND_IN_SET(t71.id,t1.openedBuild)\nwhere  t1.openedDate > ? and t1.openedDate < CONCAT( DATE_FORMAT( ?, '%Y-%m-%d'),' 23:59:59') and not EXISTS(select 1 from zt_build t where FIND_IN_SET(t.id,t1.openedBuild) and FIND_IN_SET(t.id,(select GROUP_CONCAT(tt.id) from (select tt.* from zt_build tt where  tt.id in (\n\tselect t1.build from zt_testtask t1 where FIND_IN_SET(t1.id,?))) tt GROUP BY tt.product)) = 0) and FIND_IN_SET('trunk',t1.openedBuild) = 0 and  (t1.`status` = 'active' or t1.resolvedDate > CONCAT( DATE_FORMAT( ?, '%Y-%m-%d'),' 23:59:59'))) t\n",
      "fillDstLogicParam" : true,
      "parallelOutput" : true
    }, {
      "codeName" : "Rawsqlcall13",
      "getDstPSDELogicParam" : {
        "modelref" : true,
        "id" : "Default"
      },
      "logicNodeType" : "RAWSQLCALL",
      "name" : "有效需求数",
      "getPSDELogicLinks" : [ {
        "getDstPSDELogicNode" : {
          "modelref" : true,
          "id" : "Rawsqlcall14"
        },
        "name" : "连接6952",
        "getSrcPSDELogicNode" : {
          "modelref" : true,
          "id" : "Rawsqlcall13"
        },
        "defaultLink" : false
      } ],
      "getPSDELogicNodeParams" : [ {
        "name" : "Default[STORIES]",
        "paramAction" : "SQLPARAM",
        "srcFieldName" : "STORIES",
        "getSrcPSDELogicParam" : {
          "modelref" : true,
          "id" : "Default"
        },
        "srcValueType" : "SRCDLPARAM"
      } ],
      "sql" : "SELECT\nCOUNT(1) as storycnts\nFROM `zt_story` t1 \nWHERE t1.`DELETED` = '0' AND FIND_IN_SET ( t1.ID,?) and (t1.`status` <> 'closed' or (t1.`status` = 'closed' and t1.closedReason in ('done','postponed')))",
      "fillDstLogicParam" : true,
      "parallelOutput" : true
    }, {
      "codeName" : "Rawsqlcall1",
      "getDstPSDELogicParam" : {
        "modelref" : true,
        "id" : "Default"
      },
      "logicNodeType" : "RAWSQLCALL",
      "name" : "获取需求数",
      "getPSDELogicLinks" : [ {
        "getDstPSDELogicNode" : {
          "modelref" : true,
          "id" : "Rawsqlcall2"
        },
        "name" : "连接9019",
        "getSrcPSDELogicNode" : {
          "modelref" : true,
          "id" : "Rawsqlcall1"
        },
        "defaultLink" : false
      } ],
      "getPSDELogicNodeParams" : [ {
        "name" : "Default[STORIES]",
        "paramAction" : "SQLPARAM",
        "srcFieldName" : "STORIES",
        "getSrcPSDELogicParam" : {
          "modelref" : true,
          "id" : "Default"
        },
        "srcValueType" : "SRCDLPARAM"
      } ],
      "sql" : "SELECT\nCOUNT(1) as storycnt, sum(t1.ESTIMATE) as storyestimate\nFROM `zt_story` t1 \nWHERE t1.`DELETED` = '0' AND FIND_IN_SET ( t1.ID, ?)",
      "fillDstLogicParam" : true,
      "parallelOutput" : true
    } ],
    "getPSDELogicParams" : [ {
      "codeName" : "Default",
      "name" : "传入变量",
      "getParamPSDataEntity" : {
        "modelref" : true,
        "path" : "PSMODULES/zentao/PSDATAENTITIES/TestReport.json"
      },
      "default" : true
    } ],
    "getStartPSDELogicNode" : {
      "modelref" : true,
      "id" : "Begin"
    },
    "enableBackend" : true,
    "enableFront" : false
  }, {
    "codeName" : "GetInfoTestTaskProject",
    "defaultParamName" : "Default",
    "dynaModelFilePath" : "PSMODULES/zentao/PSDATAENTITIES/TestReport/PSDELOGICS/GetInfoTestTaskProject.json",
    "logicName" : "根据测试单获取相应信息（项目报告）",
    "name" : "根据测试单获取相应信息（项目报告）",
    "getPSDELogicNodes" : [ {
      "codeName" : "Rawsqlcall1",
      "getDstPSDELogicParam" : {
        "modelref" : true,
        "id" : "Default"
      },
      "logicNodeType" : "RAWSQLCALL",
      "name" : "获取数据",
      "getPSDELogicLinks" : [ {
        "getDstPSDELogicNode" : {
          "modelref" : true,
          "id" : "Deaction1"
        },
        "name" : "连接3605",
        "getSrcPSDELogicNode" : {
          "modelref" : true,
          "id" : "Rawsqlcall1"
        },
        "defaultLink" : false
      } ],
      "getPSDELogicNodeParams" : [ {
        "name" : "Default[PROJECT]",
        "paramAction" : "SQLPARAM",
        "srcFieldName" : "PROJECT",
        "getSrcPSDELogicParam" : {
          "modelref" : true,
          "id" : "Default"
        },
        "srcValueType" : "SRCDLPARAM"
      }, {
        "name" : "Default[PROJECT]",
        "paramAction" : "SQLPARAM",
        "srcFieldName" : "PROJECT",
        "getSrcPSDELogicParam" : {
          "modelref" : true,
          "id" : "Default"
        },
        "srcValueType" : "SRCDLPARAM"
      } ],
      "sql" : "select case when GROUP_CONCAT(DISTINCT t1.`case` order by t1.`case` asc) is null then '' else GROUP_CONCAT(DISTINCT t1.`case` order by t1.`case` asc) end as cases,case when GROUP_CONCAT(DISTINCT t1.lastRunner) is null then '' else GROUP_CONCAT(DISTINCT t1.lastRunner) end  as MEMBERS\tfrom (select t1.*,? as project from zt_testrun t1 left join zt_case t11 on t1.`case` = t11.id where t11.deleted = '0' and FIND_IN_SET(t1.task,(select GROUP_CONCAT(t1.id) as tasks from zt_testtask t1 where t1.project = ? and t1.deleted = '0' GROUP BY t1.project))) t1 GROUP BY t1.project\n",
      "fillDstLogicParam" : true,
      "parallelOutput" : true
    }, {
      "codeName" : "Rawsqlcall2",
      "getDstPSDELogicParam" : {
        "modelref" : true,
        "id" : "Default"
      },
      "logicNodeType" : "RAWSQLCALL",
      "name" : "获取测试单",
      "getPSDELogicLinks" : [ {
        "getDstPSDELogicNode" : {
          "modelref" : true,
          "id" : "Rawsqlcall6"
        },
        "name" : "连接6994",
        "getSrcPSDELogicNode" : {
          "modelref" : true,
          "id" : "Rawsqlcall2"
        },
        "defaultLink" : false
      } ],
      "getPSDELogicNodeParams" : [ {
        "name" : "Default[PROJECT]",
        "paramAction" : "SQLPARAM",
        "srcFieldName" : "PROJECT",
        "getSrcPSDELogicParam" : {
          "modelref" : true,
          "id" : "Default"
        },
        "srcValueType" : "SRCDLPARAM"
      } ],
      "sql" : "select GROUP_CONCAT(t1.id) as tasks,GROUP_CONCAT(DISTINCT t1.build) as builds  from zt_testtask t1 where t1.project = ? and t1.deleted = '0' GROUP BY t1.project",
      "fillDstLogicParam" : true,
      "parallelOutput" : true
    }, {
      "codeName" : "Rawsqlcall5",
      "getDstPSDELogicParam" : {
        "modelref" : true,
        "id" : "Default"
      },
      "logicNodeType" : "RAWSQLCALL",
      "name" : "获取影响Bug",
      "getPSDELogicLinks" : [ {
        "getDstPSDELogicNode" : {
          "modelref" : true,
          "id" : "Rawsqlcall1"
        },
        "name" : "连接8985",
        "getSrcPSDELogicNode" : {
          "modelref" : true,
          "id" : "Rawsqlcall5"
        },
        "defaultLink" : false
      } ],
      "getPSDELogicNodeParams" : [ {
        "name" : "Default[PRODUCT]",
        "paramAction" : "SQLPARAM",
        "srcFieldName" : "PRODUCT",
        "getSrcPSDELogicParam" : {
          "modelref" : true,
          "id" : "Default"
        },
        "srcValueType" : "SRCDLPARAM"
      }, {
        "name" : "Default[BEGIN]",
        "paramAction" : "SQLPARAM",
        "srcFieldName" : "BEGIN",
        "getSrcPSDELogicParam" : {
          "modelref" : true,
          "id" : "Default"
        },
        "srcValueType" : "SRCDLPARAM"
      }, {
        "name" : "Default[PROJECT]",
        "paramAction" : "SQLPARAM",
        "srcFieldName" : "PROJECT",
        "getSrcPSDELogicParam" : {
          "modelref" : true,
          "id" : "Default"
        },
        "srcValueType" : "SRCDLPARAM"
      }, {
        "name" : "Default[BEGIN]",
        "paramAction" : "SQLPARAM",
        "srcFieldName" : "BEGIN",
        "getSrcPSDELogicParam" : {
          "modelref" : true,
          "id" : "Default"
        },
        "srcValueType" : "SRCDLPARAM"
      }, {
        "name" : "Default[END]",
        "paramAction" : "SQLPARAM",
        "srcFieldName" : "END",
        "getSrcPSDELogicParam" : {
          "modelref" : true,
          "id" : "Default"
        },
        "srcValueType" : "SRCDLPARAM"
      } ],
      "sql" : "select GROUP_CONCAT(t1.id) as bugs from zt_bug t1 where t1.deleted = '0' and t1.product = ? and t1.RESOLUTION in('fixed','postponed') and t1.openedDate < ? and (FIND_IN_SET(t1.id,(select GROUP_CONCAT(t2.bugs) from zt_build t2 where t2.id in (select build from zt_testtask t3 where t3.deleted = '0' and t3.project = ?) ORDER BY t2.product)) or (t1.resolvedBuild = 'trunk' and t1.resolvedDate >= ? and t1.resolvedDate <= CONCAT(?,' 23:59:59'))) GROUP BY t1.product",
      "fillDstLogicParam" : true,
      "parallelOutput" : true
    }, {
      "codeName" : "Rawsqlcall3",
      "getDstPSDELogicParam" : {
        "modelref" : true,
        "id" : "Default"
      },
      "logicNodeType" : "RAWSQLCALL",
      "name" : "获取项目周期",
      "getPSDELogicLinks" : [ {
        "getDstPSDELogicNode" : {
          "modelref" : true,
          "id" : "Rawsqlcall5"
        },
        "name" : "连接4809",
        "getSrcPSDELogicNode" : {
          "modelref" : true,
          "id" : "Rawsqlcall3"
        },
        "defaultLink" : false
      } ],
      "getPSDELogicNodeParams" : [ {
        "name" : "Default[PROJECT]",
        "paramAction" : "SQLPARAM",
        "srcFieldName" : "PROJECT",
        "getSrcPSDELogicParam" : {
          "modelref" : true,
          "id" : "Default"
        },
        "srcValueType" : "SRCDLPARAM"
      } ],
      "sql" : "select  t1.`begin`,t1.`end` , CONCAT_WS( ' ', DATE_FORMAT( now( ), '%Y-%m-%d' ), concat( 'PROJECT#', t1.id ), t1.`name`, '测试报告' ) AS TITLE,t1.name as projectname from zt_project t1 where t1.id = ?",
      "fillDstLogicParam" : true,
      "parallelOutput" : true
    }, {
      "codeName" : "Begin",
      "logicNodeType" : "BEGIN",
      "name" : "开始",
      "getPSDELogicLinks" : [ {
        "getDstPSDELogicNode" : {
          "modelref" : true,
          "id" : "Prepareparam1"
        },
        "name" : "连接4268",
        "getSrcPSDELogicNode" : {
          "modelref" : true,
          "id" : "Begin"
        },
        "defaultLink" : false
      } ],
      "parallelOutput" : true
    }, {
      "codeName" : "Rawsqlcall7",
      "getDstPSDELogicParam" : {
        "modelref" : true,
        "id" : "Default"
      },
      "logicNodeType" : "RAWSQLCALL",
      "name" : "获取产品",
      "getPSDELogicLinks" : [ {
        "getDstPSDELogicNode" : {
          "modelref" : true,
          "id" : "Rawsqlcall4"
        },
        "name" : "连接2910",
        "getSrcPSDELogicNode" : {
          "modelref" : true,
          "id" : "Rawsqlcall7"
        },
        "defaultLink" : false
      } ],
      "getPSDELogicNodeParams" : [ {
        "name" : "Default[PROJECT]",
        "paramAction" : "SQLPARAM",
        "srcFieldName" : "PROJECT",
        "getSrcPSDELogicParam" : {
          "modelref" : true,
          "id" : "Default"
        },
        "srcValueType" : "SRCDLPARAM"
      } ],
      "sql" : "select t.product  from (select DISTINCT t.product from zt_testtask t where t.deleted = '0' and FIND_IN_SET(t.id,(select GROUP_CONCAT(t1.id) as tasks from zt_testtask t1 where t1.project = ? and t1.deleted = '0' GROUP BY t1.project))) t  LIMIT 0,1",
      "fillDstLogicParam" : true,
      "parallelOutput" : true
    }, {
      "codeName" : "Rawsqlcall6",
      "getDstPSDELogicParam" : {
        "modelref" : true,
        "id" : "Default"
      },
      "logicNodeType" : "RAWSQLCALL",
      "name" : "获取产品数",
      "getPSDELogicLinks" : [ {
        "getDstPSDELogicNode" : {
          "modelref" : true,
          "id" : "Rawsqlcall7"
        },
        "name" : "连接9359",
        "getSrcPSDELogicNode" : {
          "modelref" : true,
          "id" : "Rawsqlcall6"
        },
        "defaultLink" : false
      } ],
      "getPSDELogicNodeParams" : [ {
        "name" : "Default[PROJECT]",
        "paramAction" : "SQLPARAM",
        "srcFieldName" : "PROJECT",
        "getSrcPSDELogicParam" : {
          "modelref" : true,
          "id" : "Default"
        },
        "srcValueType" : "SRCDLPARAM"
      } ],
      "sql" : "select COUNT(1) as productcnt from ( select DISTINCT t.product from zt_testtask t where t.deleted = '0' and FIND_IN_SET(t.id,(select GROUP_CONCAT(t1.id) as tasks from zt_testtask t1 where t1.project = ? and t1.deleted = '0' GROUP BY t1.project))) t",
      "fillDstLogicParam" : true,
      "parallelOutput" : true
    }, {
      "codeName" : "Deaction1",
      "getDstPSDEAction" : {
        "modelref" : true,
        "path" : "PSMODULES/zentao/PSDATAENTITIES/TestReport/PSDEACTIONS/GetInfoTestTaskOvProject.json"
      },
      "getDstPSDELogicParam" : {
        "modelref" : true,
        "id" : "Default"
      },
      "getDstPSDataEntity" : {
        "modelref" : true,
        "path" : "PSMODULES/zentao/PSDATAENTITIES/TestReport.json"
      },
      "logicNodeType" : "DEACTION",
      "name" : "获取概况信息",
      "parallelOutput" : true
    }, {
      "codeName" : "Prepareparam1",
      "logicNodeType" : "PREPAREPARAM",
      "name" : "准备参数",
      "getPSDELogicLinks" : [ {
        "getDstPSDELogicNode" : {
          "modelref" : true,
          "id" : "Rawsqlcall2"
        },
        "name" : "连接3676",
        "getSrcPSDELogicNode" : {
          "modelref" : true,
          "id" : "Prepareparam1"
        },
        "defaultLink" : false
      } ],
      "getPSDELogicNodeParams" : [ {
        "dstFieldName" : "OBJECTID",
        "getDstPSDELogicParam" : {
          "modelref" : true,
          "id" : "Default"
        },
        "name" : "Default[PROJECT] ==> Default[OBJECTID]",
        "paramAction" : "SETPARAMVALUE",
        "srcFieldName" : "PROJECT",
        "getSrcPSDELogicParam" : {
          "modelref" : true,
          "id" : "Default"
        },
        "srcValueType" : "SRCDLPARAM"
      }, {
        "dstFieldName" : "OBJECTTYPE",
        "getDstPSDELogicParam" : {
          "modelref" : true,
          "id" : "Default"
        },
        "name" : "直接值[project] ==> Default[OBJECTTYPE]",
        "paramAction" : "SETPARAMVALUE",
        "srcValue" : "project",
        "srcValueType" : "SRCVALUE"
      } ],
      "parallelOutput" : true
    }, {
      "codeName" : "Rawsqlcall4",
      "getDstPSDELogicParam" : {
        "modelref" : true,
        "id" : "Default"
      },
      "logicNodeType" : "RAWSQLCALL",
      "name" : "获取影响需求",
      "getPSDELogicLinks" : [ {
        "getDstPSDELogicNode" : {
          "modelref" : true,
          "id" : "Rawsqlcall3"
        },
        "name" : "连接7844",
        "getSrcPSDELogicNode" : {
          "modelref" : true,
          "id" : "Rawsqlcall4"
        },
        "defaultLink" : false
      } ],
      "getPSDELogicNodeParams" : [ {
        "name" : "Default[PROJECT]",
        "paramAction" : "SQLPARAM",
        "srcFieldName" : "PROJECT",
        "getSrcPSDELogicParam" : {
          "modelref" : true,
          "id" : "Default"
        },
        "srcValueType" : "SRCDLPARAM"
      } ],
      "sql" : "select GROUP_CONCAT(t1.id) as stories from ( select DISTINCT t1.* from zt_story t1 \nleft join zt_build t11 on FIND_IN_SET(t1.id,t11.stories)\nwhere t1.deleted = '0' and  FIND_IN_SET(t11.id,(select GROUP_CONCAT(DISTINCT t1.build) as builds  from zt_testtask t1 where t1.project = ? and t1.deleted = '0' GROUP BY t1.project )) ) t1 GROUP BY t1.product",
      "fillDstLogicParam" : true,
      "parallelOutput" : true
    } ],
    "getPSDELogicParams" : [ {
      "codeName" : "testtask",
      "name" : "测试版本",
      "getParamPSDataEntity" : {
        "modelref" : true,
        "path" : "PSMODULES/zentao/PSDATAENTITIES/TestTask.json"
      }
    }, {
      "codeName" : "Default",
      "name" : "传入变量",
      "getParamPSDataEntity" : {
        "modelref" : true,
        "path" : "PSMODULES/zentao/PSDATAENTITIES/TestReport.json"
      },
      "default" : true
    } ],
    "getStartPSDELogicNode" : {
      "modelref" : true,
      "id" : "Begin"
    },
    "enableBackend" : true,
    "enableFront" : false
  }, {
    "codeName" : "GetInfoTestTaskR",
    "defaultParamName" : "Default",
    "dynaModelFilePath" : "PSMODULES/zentao/PSDATAENTITIES/TestReport/PSDELOGICS/GetInfoTestTaskR.json",
    "logicName" : "根据测试单获取相应信息（项目报告）（单测试）",
    "name" : "根据测试单获取相应信息（项目报告）（单测试）",
    "getPSDELogicNodes" : [ {
      "codeName" : "Prepareparam1",
      "logicNodeType" : "PREPAREPARAM",
      "name" : "准备参数",
      "getPSDELogicLinks" : [ {
        "getDstPSDELogicNode" : {
          "modelref" : true,
          "id" : "Rawsqlcall2"
        },
        "name" : "连接3676",
        "getSrcPSDELogicNode" : {
          "modelref" : true,
          "id" : "Prepareparam1"
        },
        "defaultLink" : false
      } ],
      "getPSDELogicNodeParams" : [ {
        "dstFieldName" : "OBJECTID",
        "getDstPSDELogicParam" : {
          "modelref" : true,
          "id" : "Default"
        },
        "name" : "Default[TASKS] ==> Default[OBJECTID]",
        "paramAction" : "SETPARAMVALUE",
        "srcFieldName" : "TASKS",
        "getSrcPSDELogicParam" : {
          "modelref" : true,
          "id" : "Default"
        },
        "srcValueType" : "SRCDLPARAM"
      }, {
        "dstFieldName" : "OBJECTTYPE",
        "getDstPSDELogicParam" : {
          "modelref" : true,
          "id" : "Default"
        },
        "name" : "直接值[testtask] ==> Default[OBJECTTYPE]",
        "paramAction" : "SETPARAMVALUE",
        "srcValue" : "testtask",
        "srcValueType" : "SRCVALUE"
      } ],
      "parallelOutput" : true
    }, {
      "codeName" : "Rawsqlcall4",
      "getDstPSDELogicParam" : {
        "modelref" : true,
        "id" : "Default"
      },
      "logicNodeType" : "RAWSQLCALL",
      "name" : "获取相应需求",
      "getPSDELogicLinks" : [ {
        "getDstPSDELogicNode" : {
          "modelref" : true,
          "id" : "Rawsqlcall3"
        },
        "name" : "连接7844",
        "getSrcPSDELogicNode" : {
          "modelref" : true,
          "id" : "Rawsqlcall4"
        },
        "defaultLink" : false
      } ],
      "getPSDELogicNodeParams" : [ {
        "name" : "Default[BUILDS]",
        "paramAction" : "SQLPARAM",
        "srcFieldName" : "BUILDS",
        "getSrcPSDELogicParam" : {
          "modelref" : true,
          "id" : "Default"
        },
        "srcValueType" : "SRCDLPARAM"
      } ],
      "sql" : "select case when GROUP_CONCAT(t1.id) is null then '' else GROUP_CONCAT(t1.id) end as stories from ( select DISTINCT t1.* from zt_story t1 \nleft join zt_build t11 on FIND_IN_SET(t1.id,t11.stories)\nwhere t1.deleted = '0' and  FIND_IN_SET(t11.id,?) ) t1 GROUP BY t1.product",
      "fillDstLogicParam" : true,
      "parallelOutput" : true
    }, {
      "codeName" : "Rawsqlcall2",
      "getDstPSDELogicParam" : {
        "modelref" : true,
        "id" : "Default"
      },
      "logicNodeType" : "RAWSQLCALL",
      "name" : "获取测试单",
      "getPSDELogicLinks" : [ {
        "getDstPSDELogicNode" : {
          "modelref" : true,
          "id" : "Rawsqlcall6"
        },
        "name" : "连接502",
        "getSrcPSDELogicNode" : {
          "modelref" : true,
          "id" : "Rawsqlcall2"
        },
        "defaultLink" : false
      } ],
      "getPSDELogicNodeParams" : [ {
        "name" : "Default[TASKS]",
        "paramAction" : "SQLPARAM",
        "srcFieldName" : "TASKS",
        "getSrcPSDELogicParam" : {
          "modelref" : true,
          "id" : "Default"
        },
        "srcValueType" : "SRCDLPARAM"
      } ],
      "sql" : "select case when GROUP_CONCAT(DISTINCT t1.build) is null then '' else GROUP_CONCAT(DISTINCT t1.build) end as builds  from zt_testtask t1 where FIND_IN_SET(t1.id, ?) and t1.deleted = '0' GROUP BY t1.project",
      "fillDstLogicParam" : true,
      "parallelOutput" : true
    }, {
      "codeName" : "Deaction1",
      "getDstPSDEAction" : {
        "modelref" : true,
        "path" : "PSMODULES/zentao/PSDATAENTITIES/TestReport/PSDEACTIONS/GetInfoTestTaskOvProject.json"
      },
      "getDstPSDELogicParam" : {
        "modelref" : true,
        "id" : "Default"
      },
      "getDstPSDataEntity" : {
        "modelref" : true,
        "path" : "PSMODULES/zentao/PSDATAENTITIES/TestReport.json"
      },
      "logicNodeType" : "DEACTION",
      "name" : "获取概况信息",
      "parallelOutput" : true
    }, {
      "codeName" : "Rawsqlcall6",
      "getDstPSDELogicParam" : {
        "modelref" : true,
        "id" : "Default"
      },
      "logicNodeType" : "RAWSQLCALL",
      "name" : "获取项目和产品",
      "getPSDELogicLinks" : [ {
        "getDstPSDELogicNode" : {
          "modelref" : true,
          "id" : "Rawsqlcall4"
        },
        "name" : "连接9632",
        "getSrcPSDELogicNode" : {
          "modelref" : true,
          "id" : "Rawsqlcall6"
        },
        "defaultLink" : false
      } ],
      "getPSDELogicNodeParams" : [ {
        "name" : "Default[TASKS]",
        "paramAction" : "SQLPARAM",
        "srcFieldName" : "TASKS",
        "getSrcPSDELogicParam" : {
          "modelref" : true,
          "id" : "Default"
        },
        "srcValueType" : "SRCDLPARAM"
      } ],
      "sql" : "select t.product,t.project,tt.`name` as productname,ttt.`name` as projectname,t.`OWNER` as `OWNER` from zt_testtask t left join zt_product tt on t.product = tt.id left join zt_project ttt on t.project = ttt.id where t.id = ?",
      "fillDstLogicParam" : true,
      "parallelOutput" : true
    }, {
      "codeName" : "Begin",
      "logicNodeType" : "BEGIN",
      "name" : "开始",
      "getPSDELogicLinks" : [ {
        "getDstPSDELogicNode" : {
          "modelref" : true,
          "id" : "Prepareparam1"
        },
        "name" : "连接4268",
        "getSrcPSDELogicNode" : {
          "modelref" : true,
          "id" : "Begin"
        },
        "defaultLink" : false
      } ],
      "parallelOutput" : true
    }, {
      "codeName" : "Rawsqlcall5",
      "getDstPSDELogicParam" : {
        "modelref" : true,
        "id" : "Default"
      },
      "logicNodeType" : "RAWSQLCALL",
      "name" : "获取影响Bug",
      "getPSDELogicLinks" : [ {
        "getDstPSDELogicNode" : {
          "modelref" : true,
          "id" : "Rawsqlcall1"
        },
        "name" : "连接8985",
        "getSrcPSDELogicNode" : {
          "modelref" : true,
          "id" : "Rawsqlcall5"
        },
        "defaultLink" : false
      } ],
      "getPSDELogicNodeParams" : [ {
        "name" : "Default[PRODUCT]",
        "paramAction" : "SQLPARAM",
        "srcFieldName" : "PRODUCT",
        "getSrcPSDELogicParam" : {
          "modelref" : true,
          "id" : "Default"
        },
        "srcValueType" : "SRCDLPARAM"
      }, {
        "name" : "Default[BEGIN]",
        "paramAction" : "SQLPARAM",
        "srcFieldName" : "BEGIN",
        "getSrcPSDELogicParam" : {
          "modelref" : true,
          "id" : "Default"
        },
        "srcValueType" : "SRCDLPARAM"
      }, {
        "name" : "Default[TASKS]",
        "paramAction" : "SQLPARAM",
        "srcFieldName" : "TASKS",
        "getSrcPSDELogicParam" : {
          "modelref" : true,
          "id" : "Default"
        },
        "srcValueType" : "SRCDLPARAM"
      }, {
        "name" : "Default[BEGIN]",
        "paramAction" : "SQLPARAM",
        "srcFieldName" : "BEGIN",
        "getSrcPSDELogicParam" : {
          "modelref" : true,
          "id" : "Default"
        },
        "srcValueType" : "SRCDLPARAM"
      }, {
        "name" : "Default[END]",
        "paramAction" : "SQLPARAM",
        "srcFieldName" : "END",
        "getSrcPSDELogicParam" : {
          "modelref" : true,
          "id" : "Default"
        },
        "srcValueType" : "SRCDLPARAM"
      } ],
      "sql" : "select GROUP_CONCAT(t1.id) as bugs from zt_bug t1 where t1.deleted = '0' and t1.product = ? and t1.RESOLUTION in('fixed','postponed') and t1.openedDate < ? and (FIND_IN_SET(t1.id,(select GROUP_CONCAT(t2.bugs) from zt_build t2 where t2.id in (select build from zt_testtask t3 where t3.deleted = '0' and FIND_IN_SET(t3.id,?)) ORDER BY t2.product)) or (t1.resolvedBuild = 'trunk' and t1.resolvedDate >= ? and t1.resolvedDate <= CONCAT(?,' 23:59:59'))) GROUP BY t1.product",
      "fillDstLogicParam" : true,
      "parallelOutput" : true
    }, {
      "codeName" : "Rawsqlcall3",
      "getDstPSDELogicParam" : {
        "modelref" : true,
        "id" : "Default"
      },
      "logicNodeType" : "RAWSQLCALL",
      "name" : "获取测试单周期",
      "getPSDELogicLinks" : [ {
        "getDstPSDELogicNode" : {
          "modelref" : true,
          "id" : "Rawsqlcall5"
        },
        "name" : "连接4809",
        "getSrcPSDELogicNode" : {
          "modelref" : true,
          "id" : "Rawsqlcall3"
        },
        "defaultLink" : false
      } ],
      "getPSDELogicNodeParams" : [ {
        "name" : "Default[TASKS]",
        "paramAction" : "SQLPARAM",
        "srcFieldName" : "TASKS",
        "getSrcPSDELogicParam" : {
          "modelref" : true,
          "id" : "Default"
        },
        "srcValueType" : "SRCDLPARAM"
      } ],
      "sql" : "select CONCAT_WS(' ',DATE_FORMAT(now(),'%Y-%m-%d'),concat('TESTTASK#',t.id),t.`name`,'测试报告') as TITLE,t.`begin`,t.`end`,t.project,t.build as builds,(select GROUP_CONCAT(DISTINCT tt.`case` order by tt.`case` asc Separator ',') from zt_testrun tt where tt.task = t.id GROUP BY tt.task) as cases,t.id as objectID,'TESTTASK' as objectType from zt_testtask t where t.deleted = '0' and t.id = ?",
      "fillDstLogicParam" : true,
      "parallelOutput" : true
    }, {
      "codeName" : "Rawsqlcall1",
      "getDstPSDELogicParam" : {
        "modelref" : true,
        "id" : "Default"
      },
      "logicNodeType" : "RAWSQLCALL",
      "name" : "获取数据",
      "getPSDELogicLinks" : [ {
        "getDstPSDELogicNode" : {
          "modelref" : true,
          "id" : "Deaction1"
        },
        "name" : "连接3605",
        "getSrcPSDELogicNode" : {
          "modelref" : true,
          "id" : "Rawsqlcall1"
        },
        "defaultLink" : false
      } ],
      "getPSDELogicNodeParams" : [ {
        "name" : "Default[PROJECT]",
        "paramAction" : "SQLPARAM",
        "srcFieldName" : "PROJECT",
        "getSrcPSDELogicParam" : {
          "modelref" : true,
          "id" : "Default"
        },
        "srcValueType" : "SRCDLPARAM"
      }, {
        "name" : "Default[TASKS]",
        "paramAction" : "SQLPARAM",
        "srcFieldName" : "TASKS",
        "getSrcPSDELogicParam" : {
          "modelref" : true,
          "id" : "Default"
        },
        "srcValueType" : "SRCDLPARAM"
      } ],
      "sql" : "select case when GROUP_CONCAT(DISTINCT t1.`case` order by t1.`case` asc) is null then '' else GROUP_CONCAT(DISTINCT t1.`case` order by t1.`case` asc) end as cases,case when GROUP_CONCAT(DISTINCT t1.lastRunner) is null then '' else GROUP_CONCAT(DISTINCT t1.lastRunner) end  as MEMBERS\tfrom (select t1.*,? as project from zt_testrun t1 left join zt_case t11 on t1.`case` = t11.id where t11.deleted = '0' and FIND_IN_SET(t1.task, ?)) t1 GROUP BY t1.project",
      "fillDstLogicParam" : true,
      "parallelOutput" : true
    } ],
    "getPSDELogicParams" : [ {
      "codeName" : "Default",
      "name" : "传入变量",
      "getParamPSDataEntity" : {
        "modelref" : true,
        "path" : "PSMODULES/zentao/PSDATAENTITIES/TestReport.json"
      },
      "default" : true
    }, {
      "codeName" : "testtask",
      "name" : "测试版本",
      "getParamPSDataEntity" : {
        "modelref" : true,
        "path" : "PSMODULES/zentao/PSDATAENTITIES/TestTask.json"
      }
    } ],
    "getStartPSDELogicNode" : {
      "modelref" : true,
      "id" : "Begin"
    },
    "enableBackend" : true,
    "enableFront" : false
  }, {
    "codeName" : "GetInfoTestTaskS",
    "defaultParamName" : "Default",
    "dynaModelFilePath" : "PSMODULES/zentao/PSDATAENTITIES/TestReport/PSDELOGICS/GetInfoTestTaskS.json",
    "logicName" : "根据测试单获取相应信息（项目报告）（多测试）",
    "name" : "根据测试单获取相应信息（项目报告）（多测试）",
    "getPSDELogicNodes" : [ {
      "codeName" : "Rawsqlcall4",
      "getDstPSDELogicParam" : {
        "modelref" : true,
        "id" : "Default"
      },
      "logicNodeType" : "RAWSQLCALL",
      "name" : "获取相应需求",
      "getPSDELogicLinks" : [ {
        "getDstPSDELogicNode" : {
          "modelref" : true,
          "id" : "Rawsqlcall3"
        },
        "name" : "连接7844",
        "getSrcPSDELogicNode" : {
          "modelref" : true,
          "id" : "Rawsqlcall4"
        },
        "defaultLink" : false
      } ],
      "getPSDELogicNodeParams" : [ {
        "name" : "Default[BUILDS]",
        "paramAction" : "SQLPARAM",
        "srcFieldName" : "BUILDS",
        "getSrcPSDELogicParam" : {
          "modelref" : true,
          "id" : "Default"
        },
        "srcValueType" : "SRCDLPARAM"
      } ],
      "sql" : "select case when GROUP_CONCAT(t1.id) is null then '' else GROUP_CONCAT(t1.id) end as stories from ( select DISTINCT t1.* from zt_story t1 \nleft join zt_build t11 on FIND_IN_SET(t1.id,t11.stories)\nwhere t1.deleted = '0' and  FIND_IN_SET(t11.id,?) ) t1 GROUP BY t1.product",
      "fillDstLogicParam" : true,
      "parallelOutput" : true
    }, {
      "codeName" : "Prepareparam1",
      "logicNodeType" : "PREPAREPARAM",
      "name" : "准备参数",
      "getPSDELogicLinks" : [ {
        "getDstPSDELogicNode" : {
          "modelref" : true,
          "id" : "Rawsqlcall2"
        },
        "name" : "连接3676",
        "getSrcPSDELogicNode" : {
          "modelref" : true,
          "id" : "Prepareparam1"
        },
        "defaultLink" : false
      } ],
      "getPSDELogicNodeParams" : [ {
        "dstFieldName" : "OBJECTID",
        "getDstPSDELogicParam" : {
          "modelref" : true,
          "id" : "Default"
        },
        "name" : "Default[PROJECT] ==> Default[OBJECTID]",
        "paramAction" : "SETPARAMVALUE",
        "srcFieldName" : "PROJECT",
        "getSrcPSDELogicParam" : {
          "modelref" : true,
          "id" : "Default"
        },
        "srcValueType" : "SRCDLPARAM"
      }, {
        "dstFieldName" : "OBJECTTYPE",
        "getDstPSDELogicParam" : {
          "modelref" : true,
          "id" : "Default"
        },
        "name" : "直接值[project] ==> Default[OBJECTTYPE]",
        "paramAction" : "SETPARAMVALUE",
        "srcValue" : "project",
        "srcValueType" : "SRCVALUE"
      } ],
      "parallelOutput" : true
    }, {
      "codeName" : "Rawsqlcall7",
      "getDstPSDELogicParam" : {
        "modelref" : true,
        "id" : "Default"
      },
      "logicNodeType" : "RAWSQLCALL",
      "name" : "获取产品",
      "getPSDELogicLinks" : [ {
        "getDstPSDELogicNode" : {
          "modelref" : true,
          "id" : "Rawsqlcall4"
        },
        "name" : "连接2910",
        "getSrcPSDELogicNode" : {
          "modelref" : true,
          "id" : "Rawsqlcall7"
        },
        "defaultLink" : false
      } ],
      "getPSDELogicNodeParams" : [ {
        "name" : "Default[TASKS]",
        "paramAction" : "SQLPARAM",
        "srcFieldName" : "TASKS",
        "getSrcPSDELogicParam" : {
          "modelref" : true,
          "id" : "Default"
        },
        "srcValueType" : "SRCDLPARAM"
      } ],
      "sql" : "select t.product  from (select DISTINCT t.product from zt_testtask t where t.deleted = '0' and FIND_IN_SET(t.id,?)) t  LIMIT 0,1",
      "fillDstLogicParam" : true,
      "parallelOutput" : true
    }, {
      "codeName" : "Rawsqlcall5",
      "getDstPSDELogicParam" : {
        "modelref" : true,
        "id" : "Default"
      },
      "logicNodeType" : "RAWSQLCALL",
      "name" : "获取影响Bug",
      "getPSDELogicLinks" : [ {
        "getDstPSDELogicNode" : {
          "modelref" : true,
          "id" : "Rawsqlcall1"
        },
        "name" : "连接8985",
        "getSrcPSDELogicNode" : {
          "modelref" : true,
          "id" : "Rawsqlcall5"
        },
        "defaultLink" : false
      } ],
      "getPSDELogicNodeParams" : [ {
        "name" : "Default[PRODUCT]",
        "paramAction" : "SQLPARAM",
        "srcFieldName" : "PRODUCT",
        "getSrcPSDELogicParam" : {
          "modelref" : true,
          "id" : "Default"
        },
        "srcValueType" : "SRCDLPARAM"
      }, {
        "name" : "Default[BEGIN]",
        "paramAction" : "SQLPARAM",
        "srcFieldName" : "BEGIN",
        "getSrcPSDELogicParam" : {
          "modelref" : true,
          "id" : "Default"
        },
        "srcValueType" : "SRCDLPARAM"
      }, {
        "name" : "Default[TASKS]",
        "paramAction" : "SQLPARAM",
        "srcFieldName" : "TASKS",
        "getSrcPSDELogicParam" : {
          "modelref" : true,
          "id" : "Default"
        },
        "srcValueType" : "SRCDLPARAM"
      }, {
        "name" : "Default[BEGIN]",
        "paramAction" : "SQLPARAM",
        "srcFieldName" : "BEGIN",
        "getSrcPSDELogicParam" : {
          "modelref" : true,
          "id" : "Default"
        },
        "srcValueType" : "SRCDLPARAM"
      }, {
        "name" : "Default[END]",
        "paramAction" : "SQLPARAM",
        "srcFieldName" : "END",
        "getSrcPSDELogicParam" : {
          "modelref" : true,
          "id" : "Default"
        },
        "srcValueType" : "SRCDLPARAM"
      } ],
      "sql" : "select GROUP_CONCAT(t1.id) as bugs from zt_bug t1 where t1.deleted = '0' and t1.product = ? and t1.RESOLUTION in('fixed','postponed') and t1.openedDate < ? and (FIND_IN_SET(t1.id,(select GROUP_CONCAT(t2.bugs) from zt_build t2 where t2.id in (select build from zt_testtask t3 where t3.deleted = '0' and FIND_IN_SET(t3.id,?)) ORDER BY t2.product)) or (t1.resolvedBuild = 'trunk' and t1.resolvedDate >= ? and t1.resolvedDate <= CONCAT(?,' 23:59:59'))) GROUP BY t1.product",
      "fillDstLogicParam" : true,
      "parallelOutput" : true
    }, {
      "codeName" : "Rawsqlcall3",
      "getDstPSDELogicParam" : {
        "modelref" : true,
        "id" : "Default"
      },
      "logicNodeType" : "RAWSQLCALL",
      "name" : "获取项目周期",
      "getPSDELogicLinks" : [ {
        "getDstPSDELogicNode" : {
          "modelref" : true,
          "id" : "Rawsqlcall5"
        },
        "name" : "连接4809",
        "getSrcPSDELogicNode" : {
          "modelref" : true,
          "id" : "Rawsqlcall3"
        },
        "defaultLink" : false
      } ],
      "getPSDELogicNodeParams" : [ {
        "name" : "Default[PROJECT]",
        "paramAction" : "SQLPARAM",
        "srcFieldName" : "PROJECT",
        "getSrcPSDELogicParam" : {
          "modelref" : true,
          "id" : "Default"
        },
        "srcValueType" : "SRCDLPARAM"
      } ],
      "sql" : "select  t1.`begin`,t1.`end` , CONCAT_WS( ' ', DATE_FORMAT( now( ), '%Y-%m-%d' ), concat( 'PROJECT#', t1.id ), t1.`name`, '测试报告' ) AS TITLE,t1.name as projectname from zt_project t1 where t1.id = ?",
      "fillDstLogicParam" : true,
      "parallelOutput" : true
    }, {
      "codeName" : "Rawsqlcall6",
      "getDstPSDELogicParam" : {
        "modelref" : true,
        "id" : "Default"
      },
      "logicNodeType" : "RAWSQLCALL",
      "name" : "获取产品数",
      "getPSDELogicLinks" : [ {
        "getDstPSDELogicNode" : {
          "modelref" : true,
          "id" : "Rawsqlcall7"
        },
        "name" : "连接9359",
        "getSrcPSDELogicNode" : {
          "modelref" : true,
          "id" : "Rawsqlcall6"
        },
        "defaultLink" : false
      } ],
      "getPSDELogicNodeParams" : [ {
        "name" : "Default[TASKS]",
        "paramAction" : "SQLPARAM",
        "srcFieldName" : "TASKS",
        "getSrcPSDELogicParam" : {
          "modelref" : true,
          "id" : "Default"
        },
        "srcValueType" : "SRCDLPARAM"
      } ],
      "sql" : "select COUNT(1) as productcnt from ( select DISTINCT t.product from zt_testtask t where t.deleted = '0' and FIND_IN_SET(t.id,?)) t",
      "fillDstLogicParam" : true,
      "parallelOutput" : true
    }, {
      "codeName" : "Deaction1",
      "getDstPSDEAction" : {
        "modelref" : true,
        "path" : "PSMODULES/zentao/PSDATAENTITIES/TestReport/PSDEACTIONS/GetInfoTestTaskOvProject.json"
      },
      "getDstPSDELogicParam" : {
        "modelref" : true,
        "id" : "Default"
      },
      "getDstPSDataEntity" : {
        "modelref" : true,
        "path" : "PSMODULES/zentao/PSDATAENTITIES/TestReport.json"
      },
      "logicNodeType" : "DEACTION",
      "name" : "获取概况信息",
      "parallelOutput" : true
    }, {
      "codeName" : "Begin",
      "logicNodeType" : "BEGIN",
      "name" : "开始",
      "getPSDELogicLinks" : [ {
        "getDstPSDELogicNode" : {
          "modelref" : true,
          "id" : "Prepareparam1"
        },
        "name" : "连接4268",
        "getSrcPSDELogicNode" : {
          "modelref" : true,
          "id" : "Begin"
        },
        "defaultLink" : false
      } ],
      "parallelOutput" : true
    }, {
      "codeName" : "Rawsqlcall1",
      "getDstPSDELogicParam" : {
        "modelref" : true,
        "id" : "Default"
      },
      "logicNodeType" : "RAWSQLCALL",
      "name" : "获取数据",
      "getPSDELogicLinks" : [ {
        "getDstPSDELogicNode" : {
          "modelref" : true,
          "id" : "Deaction1"
        },
        "name" : "连接3605",
        "getSrcPSDELogicNode" : {
          "modelref" : true,
          "id" : "Rawsqlcall1"
        },
        "defaultLink" : false
      } ],
      "getPSDELogicNodeParams" : [ {
        "name" : "Default[PROJECT]",
        "paramAction" : "SQLPARAM",
        "srcFieldName" : "PROJECT",
        "getSrcPSDELogicParam" : {
          "modelref" : true,
          "id" : "Default"
        },
        "srcValueType" : "SRCDLPARAM"
      }, {
        "name" : "Default[TASKS]",
        "paramAction" : "SQLPARAM",
        "srcFieldName" : "TASKS",
        "getSrcPSDELogicParam" : {
          "modelref" : true,
          "id" : "Default"
        },
        "srcValueType" : "SRCDLPARAM"
      } ],
      "sql" : "select case when GROUP_CONCAT(DISTINCT t1.`case` order by t1.`case` asc) is null then '' else GROUP_CONCAT(DISTINCT t1.`case` order by t1.`case` asc) end as cases,case when GROUP_CONCAT(DISTINCT t1.lastRunner) is null then '' else GROUP_CONCAT(DISTINCT t1.lastRunner) end  as MEMBERS\tfrom (select t1.*,? as project from zt_testrun t1 left join zt_case t11 on t1.`case` = t11.id where t11.deleted = '0' and FIND_IN_SET(t1.task, ?)) t1 GROUP BY t1.project",
      "fillDstLogicParam" : true,
      "parallelOutput" : true
    }, {
      "codeName" : "Rawsqlcall2",
      "getDstPSDELogicParam" : {
        "modelref" : true,
        "id" : "Default"
      },
      "logicNodeType" : "RAWSQLCALL",
      "name" : "获取测试单",
      "getPSDELogicLinks" : [ {
        "getDstPSDELogicNode" : {
          "modelref" : true,
          "id" : "Rawsqlcall6"
        },
        "name" : "连接6994",
        "getSrcPSDELogicNode" : {
          "modelref" : true,
          "id" : "Rawsqlcall2"
        },
        "defaultLink" : false
      } ],
      "getPSDELogicNodeParams" : [ {
        "name" : "Default[TASKS]",
        "paramAction" : "SQLPARAM",
        "srcFieldName" : "TASKS",
        "getSrcPSDELogicParam" : {
          "modelref" : true,
          "id" : "Default"
        },
        "srcValueType" : "SRCDLPARAM"
      } ],
      "sql" : "select case when GROUP_CONCAT(DISTINCT t1.build) is null then '' else GROUP_CONCAT(DISTINCT t1.build) end as builds  from zt_testtask t1 where FIND_IN_SET(t1.id, ?) and t1.deleted = '0' GROUP BY t1.project",
      "fillDstLogicParam" : true,
      "parallelOutput" : true
    } ],
    "getPSDELogicParams" : [ {
      "codeName" : "Default",
      "name" : "传入变量",
      "getParamPSDataEntity" : {
        "modelref" : true,
        "path" : "PSMODULES/zentao/PSDATAENTITIES/TestReport.json"
      },
      "default" : true
    }, {
      "codeName" : "testtask",
      "name" : "测试版本",
      "getParamPSDataEntity" : {
        "modelref" : true,
        "path" : "PSMODULES/zentao/PSDATAENTITIES/TestTask.json"
      }
    } ],
    "getStartPSDELogicNode" : {
      "modelref" : true,
      "id" : "Begin"
    },
    "enableBackend" : true,
    "enableFront" : false
  }, {
    "codeName" : "GetTestReportBasicInfo",
    "defaultParamName" : "Default",
    "dynaModelFilePath" : "PSMODULES/zentao/PSDATAENTITIES/TestReport/PSDELOGICS/GetTestReportBasicInfo.json",
    "logicName" : "根据测试报告获取基本信息",
    "name" : "根据测试报告获取基本信息",
    "getPSDELogicNodes" : [ {
      "codeName" : "Rawsqlcall13",
      "getDstPSDELogicParam" : {
        "modelref" : true,
        "id" : "Default"
      },
      "logicNodeType" : "RAWSQLCALL",
      "name" : "需求覆盖用例数",
      "getPSDELogicLinks" : [ {
        "getDstPSDELogicNode" : {
          "modelref" : true,
          "id" : "Rawsqlcall10"
        },
        "name" : "连接9959",
        "getSrcPSDELogicNode" : {
          "modelref" : true,
          "id" : "Rawsqlcall13"
        },
        "defaultLink" : false
      } ],
      "getPSDELogicNodeParams" : [ {
        "name" : "Default[ID]",
        "paramAction" : "SQLPARAM",
        "srcFieldName" : "ID",
        "getSrcPSDELogicParam" : {
          "modelref" : true,
          "id" : "Default"
        },
        "srcValueType" : "SRCDLPARAM"
      } ],
      "sql" : "SELECT\ncount(1) as casecnts\nFROM `zt_story` t1 \nWHERE t1.`DELETED` = '0' AND FIND_IN_SET ( t1.ID, (SELECT STORIES FROM ZT_TESTREPORT WHERE ID= ?)) and (t1.`status` <> 'closed' or (t1.`status` = 'closed' and t1.closedReason in ('done','postponed'))) and EXISTS(select 1 from zt_case t where t.deleted = '0' and t1.id = t.story)",
      "fillDstLogicParam" : true,
      "parallelOutput" : true
    }, {
      "codeName" : "Rawsqlcall11",
      "getDstPSDELogicParam" : {
        "modelref" : true,
        "id" : "Default"
      },
      "logicNodeType" : "RAWSQLCALL",
      "name" : "用例产生的Bug",
      "getPSDELogicLinks" : [ {
        "getDstPSDELogicNode" : {
          "modelref" : true,
          "id" : "Rawsqlcall5"
        },
        "name" : "连接3617",
        "getSrcPSDELogicNode" : {
          "modelref" : true,
          "id" : "Rawsqlcall11"
        },
        "defaultLink" : false
      } ],
      "getPSDELogicNodeParams" : [ {
        "name" : "Default[ID]",
        "paramAction" : "SQLPARAM",
        "srcFieldName" : "ID",
        "getSrcPSDELogicParam" : {
          "modelref" : true,
          "id" : "Default"
        },
        "srcValueType" : "SRCDLPARAM"
      }, {
        "name" : "Default[ID]",
        "paramAction" : "SQLPARAM",
        "srcFieldName" : "ID",
        "getSrcPSDELogicParam" : {
          "modelref" : true,
          "id" : "Default"
        },
        "srcValueType" : "SRCDLPARAM"
      }, {
        "name" : "Default[ID]",
        "paramAction" : "SQLPARAM",
        "srcFieldName" : "ID",
        "getSrcPSDELogicParam" : {
          "modelref" : true,
          "id" : "Default"
        },
        "srcValueType" : "SRCDLPARAM"
      } ],
      "sql" : "SELECT\nCOUNT(1) as casebugcnt\nFROM `zt_bug` t1 \nwhere  t1.OPENEDBUILD = (select t.build from zt_testtask t inner join zt_testreport tt on t.id = tt.tasks where tt.id = ?)   and t1.openedDate > (select tt.`begin` from zt_testreport tt where tt.id = ? and t1.openedDate < (select CONCAT( DATE_FORMAT( tt.`end`, '%Y-%m-%d'),' 23:59:59') from  zt_testreport tt  where tt.id = ?\n)\n)  and t1.`case` > 0",
      "fillDstLogicParam" : true,
      "parallelOutput" : true
    }, {
      "codeName" : "Rawsqlcall1",
      "getDstPSDELogicParam" : {
        "modelref" : true,
        "id" : "Default"
      },
      "logicNodeType" : "RAWSQLCALL",
      "name" : "获取需求数",
      "getPSDELogicLinks" : [ {
        "getDstPSDELogicNode" : {
          "modelref" : true,
          "id" : "Rawsqlcall2"
        },
        "name" : "连接9019",
        "getSrcPSDELogicNode" : {
          "modelref" : true,
          "id" : "Rawsqlcall1"
        },
        "defaultLink" : false
      } ],
      "getPSDELogicNodeParams" : [ {
        "name" : "Default[ID]",
        "paramAction" : "SQLPARAM",
        "srcFieldName" : "ID",
        "getSrcPSDELogicParam" : {
          "modelref" : true,
          "id" : "Default"
        },
        "srcValueType" : "SRCDLPARAM"
      } ],
      "sql" : "SELECT\nCOUNT(1) as storycnt, sum(t1.ESTIMATE) as storyestimate,GROUP_CONCAT(DISTINCT t1.id ORDER BY t1.id asc) as stories\nFROM `zt_story` t1 \nWHERE t1.`DELETED` = '0' AND FIND_IN_SET ( t1.ID, (SELECT STORIES FROM ZT_TESTREPORT WHERE ID= ?))",
      "fillDstLogicParam" : true,
      "parallelOutput" : true
    }, {
      "codeName" : "Rawsqlcall3",
      "getDstPSDELogicParam" : {
        "modelref" : true,
        "id" : "Default"
      },
      "logicNodeType" : "RAWSQLCALL",
      "name" : "执行的用例数",
      "getPSDELogicLinks" : [ {
        "getDstPSDELogicNode" : {
          "modelref" : true,
          "id" : "Rawsqlcall4"
        },
        "name" : "连接715",
        "getSrcPSDELogicNode" : {
          "modelref" : true,
          "id" : "Rawsqlcall3"
        },
        "defaultLink" : false
      } ],
      "getPSDELogicNodeParams" : [ {
        "name" : "Default[ID]",
        "paramAction" : "SQLPARAM",
        "srcFieldName" : "ID",
        "getSrcPSDELogicParam" : {
          "modelref" : true,
          "id" : "Default"
        },
        "srcValueType" : "SRCDLPARAM"
      }, {
        "name" : "Default[ID]",
        "paramAction" : "SQLPARAM",
        "srcFieldName" : "ID",
        "getSrcPSDELogicParam" : {
          "modelref" : true,
          "id" : "Default"
        },
        "srcValueType" : "SRCDLPARAM"
      }, {
        "name" : "Default[ID]",
        "paramAction" : "SQLPARAM",
        "srcFieldName" : "ID",
        "getSrcPSDELogicParam" : {
          "modelref" : true,
          "id" : "Default"
        },
        "srcValueType" : "SRCDLPARAM"
      }, {
        "name" : "Default[ID]",
        "paramAction" : "SQLPARAM",
        "srcFieldName" : "ID",
        "getSrcPSDELogicParam" : {
          "modelref" : true,
          "id" : "Default"
        },
        "srcValueType" : "SRCDLPARAM"
      } ],
      "sql" : "select COUNT(1) as rencase from (SELECT\nDISTINCT t1.id\nFROM `zt_case` t1 \nleft join zt_testrun t11 on t1.id = t11.`case`\nINNER join zt_testresult t21 on t21.run = t11.id\nWHERE  t1.`DELETED` = '0' AND FIND_IN_SET ( t1.ID, (SELECT cases FROM ZT_TESTREPORT WHERE ID= ?)) and t11.task = (SELECT tasks FROM ZT_TESTREPORT WHERE ID= ?) and t21.date >   (SELECT `BEGIN` FROM ZT_TESTREPORT WHERE ID= ?) and t21.date <  (SELECT CONCAT( DATE_FORMAT( `end`, '%Y-%m-%d'),' 23:59:59') FROM ZT_TESTREPORT WHERE ID= ?) ) t",
      "fillDstLogicParam" : true,
      "parallelOutput" : true
    }, {
      "codeName" : "Rawsqlcall2",
      "getDstPSDELogicParam" : {
        "modelref" : true,
        "id" : "Default"
      },
      "logicNodeType" : "RAWSQLCALL",
      "name" : "获取用例数",
      "getPSDELogicLinks" : [ {
        "getDstPSDELogicNode" : {
          "modelref" : true,
          "id" : "Rawsqlcall3"
        },
        "name" : "连接4999",
        "getSrcPSDELogicNode" : {
          "modelref" : true,
          "id" : "Rawsqlcall2"
        },
        "defaultLink" : false
      } ],
      "getPSDELogicNodeParams" : [ {
        "name" : "Default[ID]",
        "paramAction" : "SQLPARAM",
        "srcFieldName" : "ID",
        "getSrcPSDELogicParam" : {
          "modelref" : true,
          "id" : "Default"
        },
        "srcValueType" : "SRCDLPARAM"
      }, {
        "name" : "Default[ID]",
        "paramAction" : "SQLPARAM",
        "srcFieldName" : "ID",
        "getSrcPSDELogicParam" : {
          "modelref" : true,
          "id" : "Default"
        },
        "srcValueType" : "SRCDLPARAM"
      } ],
      "sql" : "SELECT\nCOUNT(1) as casecnt\nFROM `zt_case` t1 \nleft join zt_testrun t11 on t1.id = t11.`case`\nWHERE  t1.`DELETED` = '0' AND FIND_IN_SET ( t1.ID, (SELECT cases FROM ZT_TESTREPORT WHERE ID= ?)) and t11.task = (SELECT tasks FROM ZT_TESTREPORT WHERE ID= ?)",
      "fillDstLogicParam" : true,
      "parallelOutput" : true
    }, {
      "codeName" : "Rawsqlcall12",
      "getDstPSDELogicParam" : {
        "modelref" : true,
        "id" : "Default"
      },
      "logicNodeType" : "RAWSQLCALL",
      "name" : "有效需求数",
      "getPSDELogicLinks" : [ {
        "getDstPSDELogicNode" : {
          "modelref" : true,
          "id" : "Rawsqlcall13"
        },
        "name" : "连接6900",
        "getSrcPSDELogicNode" : {
          "modelref" : true,
          "id" : "Rawsqlcall12"
        },
        "defaultLink" : false
      } ],
      "getPSDELogicNodeParams" : [ {
        "name" : "Default[ID]",
        "paramAction" : "SQLPARAM",
        "srcFieldName" : "ID",
        "getSrcPSDELogicParam" : {
          "modelref" : true,
          "id" : "Default"
        },
        "srcValueType" : "SRCDLPARAM"
      } ],
      "sql" : "SELECT\nCOUNT(1) as storycnts\nFROM `zt_story` t1 \nWHERE t1.`DELETED` = '0' AND FIND_IN_SET ( t1.ID, (SELECT STORIES FROM ZT_TESTREPORT WHERE ID= ?)) and (t1.`status` <> 'closed' or (t1.`status` = 'closed' and t1.closedReason in ('done','postponed')))",
      "fillDstLogicParam" : true,
      "parallelOutput" : true
    }, {
      "codeName" : "Rawsqlcall5",
      "getDstPSDELogicParam" : {
        "modelref" : true,
        "id" : "Default"
      },
      "logicNodeType" : "RAWSQLCALL",
      "name" : "执行结果",
      "getPSDELogicLinks" : [ {
        "getDstPSDELogicNode" : {
          "modelref" : true,
          "id" : "Rawsqlcall6"
        },
        "name" : "连接7149",
        "getSrcPSDELogicNode" : {
          "modelref" : true,
          "id" : "Rawsqlcall5"
        },
        "defaultLink" : false
      } ],
      "getPSDELogicNodeParams" : [ {
        "name" : "Default[ID]",
        "paramAction" : "SQLPARAM",
        "srcFieldName" : "ID",
        "getSrcPSDELogicParam" : {
          "modelref" : true,
          "id" : "Default"
        },
        "srcValueType" : "SRCDLPARAM"
      } ],
      "sql" : "select COUNT(1) testresultcnt from zt_testresult t1 \nINNER JOIN zt_case t31 on t31.id = t1.`case`\ninner join zt_testrun t11 on t1.run = t11.id and t1.`case` = t11.`case`\ninner join zt_testreport t21 on t11.task = t21.tasks\nwhere t21.id = ? and FIND_IN_SET(t11.`case`,t21.cases) and t31.deleted = '0' and t1.date >   t21.`begin` and t1.date <  CONCAT( DATE_FORMAT( t21.`end`, '%Y-%m-%d'),' 23:59:59')",
      "fillDstLogicParam" : true,
      "parallelOutput" : true
    }, {
      "codeName" : "Rawsqlcall4",
      "getDstPSDELogicParam" : {
        "modelref" : true,
        "id" : "Default"
      },
      "logicNodeType" : "RAWSQLCALL",
      "name" : "失败的用例数",
      "getPSDELogicLinks" : [ {
        "getDstPSDELogicNode" : {
          "modelref" : true,
          "id" : "Rawsqlcall12"
        },
        "name" : "连接1775",
        "getSrcPSDELogicNode" : {
          "modelref" : true,
          "id" : "Rawsqlcall4"
        },
        "defaultLink" : false
      } ],
      "getPSDELogicNodeParams" : [ {
        "name" : "Default[ID]",
        "paramAction" : "SQLPARAM",
        "srcFieldName" : "ID",
        "getSrcPSDELogicParam" : {
          "modelref" : true,
          "id" : "Default"
        },
        "srcValueType" : "SRCDLPARAM"
      }, {
        "name" : "Default[ID]",
        "paramAction" : "SQLPARAM",
        "srcFieldName" : "ID",
        "getSrcPSDELogicParam" : {
          "modelref" : true,
          "id" : "Default"
        },
        "srcValueType" : "SRCDLPARAM"
      }, {
        "name" : "Default[ID]",
        "paramAction" : "SQLPARAM",
        "srcFieldName" : "ID",
        "getSrcPSDELogicParam" : {
          "modelref" : true,
          "id" : "Default"
        },
        "srcValueType" : "SRCDLPARAM"
      }, {
        "name" : "Default[ID]",
        "paramAction" : "SQLPARAM",
        "srcFieldName" : "ID",
        "getSrcPSDELogicParam" : {
          "modelref" : true,
          "id" : "Default"
        },
        "srcValueType" : "SRCDLPARAM"
      } ],
      "sql" : "select COUNT(1) as failcase from (SELECT\nDISTINCT t1.id\nFROM `zt_case` t1 \nleft join zt_testrun t11 on t1.id = t11.`case`\nleft join zt_testresult t21 on t21.run = t11.id\nWHERE  t1.`DELETED` = '0' AND FIND_IN_SET ( t1.ID, (SELECT cases FROM ZT_TESTREPORT WHERE ID= ?)) and t11.task = (SELECT tasks FROM ZT_TESTREPORT WHERE ID= ?) and t21.caseResult = 'fail' and t21.date >   (SELECT `BEGIN` FROM ZT_TESTREPORT WHERE ID= ?) and t21.date <  (SELECT CONCAT( DATE_FORMAT( `end`, '%Y-%m-%d'),' 23:59:59') FROM ZT_TESTREPORT WHERE ID= ?)) t",
      "fillDstLogicParam" : true,
      "parallelOutput" : true
    }, {
      "codeName" : "Rawsqlcall9",
      "getDstPSDELogicParam" : {
        "modelref" : true,
        "id" : "Default"
      },
      "logicNodeType" : "RAWSQLCALL",
      "name" : "设置概况",
      "getPSDELogicNodeParams" : [ {
        "name" : "Default[storycnt]",
        "paramAction" : "SQLPARAM",
        "srcFieldName" : "storycnt",
        "getSrcPSDELogicParam" : {
          "modelref" : true,
          "id" : "Default"
        },
        "srcValueType" : "SRCDLPARAM"
      }, {
        "name" : "Default[storyestimate]",
        "paramAction" : "SQLPARAM",
        "srcFieldName" : "storyestimate",
        "getSrcPSDELogicParam" : {
          "modelref" : true,
          "id" : "Default"
        },
        "srcValueType" : "SRCDLPARAM"
      }, {
        "name" : "Default[storyestimate]",
        "paramAction" : "SQLPARAM",
        "srcFieldName" : "storyestimate",
        "getSrcPSDELogicParam" : {
          "modelref" : true,
          "id" : "Default"
        },
        "srcValueType" : "SRCDLPARAM"
      }, {
        "name" : "Default[casecnts]",
        "paramAction" : "SQLPARAM",
        "srcFieldName" : "casecnts",
        "getSrcPSDELogicParam" : {
          "modelref" : true,
          "id" : "Default"
        },
        "srcValueType" : "SRCDLPARAM"
      }, {
        "name" : "Default[storycnts]",
        "paramAction" : "SQLPARAM",
        "srcFieldName" : "storycnts",
        "getSrcPSDELogicParam" : {
          "modelref" : true,
          "id" : "Default"
        },
        "srcValueType" : "SRCDLPARAM"
      }, {
        "name" : "Default[storycnts]",
        "paramAction" : "SQLPARAM",
        "srcFieldName" : "storycnts",
        "getSrcPSDELogicParam" : {
          "modelref" : true,
          "id" : "Default"
        },
        "srcValueType" : "SRCDLPARAM"
      }, {
        "name" : "Default[storycnts]",
        "paramAction" : "SQLPARAM",
        "srcFieldName" : "storycnts",
        "getSrcPSDELogicParam" : {
          "modelref" : true,
          "id" : "Default"
        },
        "srcValueType" : "SRCDLPARAM"
      }, {
        "name" : "Default[casecnt]",
        "paramAction" : "SQLPARAM",
        "srcFieldName" : "casecnt",
        "getSrcPSDELogicParam" : {
          "modelref" : true,
          "id" : "Default"
        },
        "srcValueType" : "SRCDLPARAM"
      }, {
        "name" : "Default[rencase]",
        "paramAction" : "SQLPARAM",
        "srcFieldName" : "rencase",
        "getSrcPSDELogicParam" : {
          "modelref" : true,
          "id" : "Default"
        },
        "srcValueType" : "SRCDLPARAM"
      }, {
        "name" : "Default[testresultcnt]",
        "paramAction" : "SQLPARAM",
        "srcFieldName" : "testresultcnt",
        "getSrcPSDELogicParam" : {
          "modelref" : true,
          "id" : "Default"
        },
        "srcValueType" : "SRCDLPARAM"
      }, {
        "name" : "Default[failcase]",
        "paramAction" : "SQLPARAM",
        "srcFieldName" : "failcase",
        "getSrcPSDELogicParam" : {
          "modelref" : true,
          "id" : "Default"
        },
        "srcValueType" : "SRCDLPARAM"
      }, {
        "name" : "Default[bugcnt]",
        "paramAction" : "SQLPARAM",
        "srcFieldName" : "bugcnt",
        "getSrcPSDELogicParam" : {
          "modelref" : true,
          "id" : "Default"
        },
        "srcValueType" : "SRCDLPARAM"
      }, {
        "name" : "Default[ylbugcnt]",
        "paramAction" : "SQLPARAM",
        "srcFieldName" : "ylbugcnt",
        "getSrcPSDELogicParam" : {
          "modelref" : true,
          "id" : "Default"
        },
        "srcValueType" : "SRCDLPARAM"
      }, {
        "name" : "Default[casebugcnt]",
        "paramAction" : "SQLPARAM",
        "srcFieldName" : "casebugcnt",
        "getSrcPSDELogicParam" : {
          "modelref" : true,
          "id" : "Default"
        },
        "srcValueType" : "SRCDLPARAM"
      }, {
        "name" : "Default[effective]",
        "paramAction" : "SQLPARAM",
        "srcFieldName" : "effective",
        "getSrcPSDELogicParam" : {
          "modelref" : true,
          "id" : "Default"
        },
        "srcValueType" : "SRCDLPARAM"
      }, {
        "name" : "Default[resolvedcnt]",
        "paramAction" : "SQLPARAM",
        "srcFieldName" : "resolvedcnt",
        "getSrcPSDELogicParam" : {
          "modelref" : true,
          "id" : "Default"
        },
        "srcValueType" : "SRCDLPARAM"
      }, {
        "name" : "Default[resolvedcnt]",
        "paramAction" : "SQLPARAM",
        "srcFieldName" : "resolvedcnt",
        "getSrcPSDELogicParam" : {
          "modelref" : true,
          "id" : "Default"
        },
        "srcValueType" : "SRCDLPARAM"
      }, {
        "name" : "Default[resolvedcnt]",
        "paramAction" : "SQLPARAM",
        "srcFieldName" : "resolvedcnt",
        "getSrcPSDELogicParam" : {
          "modelref" : true,
          "id" : "Default"
        },
        "srcValueType" : "SRCDLPARAM"
      }, {
        "name" : "Default[casebugcnt]",
        "paramAction" : "SQLPARAM",
        "srcFieldName" : "casebugcnt",
        "getSrcPSDELogicParam" : {
          "modelref" : true,
          "id" : "Default"
        },
        "srcValueType" : "SRCDLPARAM"
      }, {
        "name" : "Default[bugcnt]",
        "paramAction" : "SQLPARAM",
        "srcFieldName" : "bugcnt",
        "getSrcPSDELogicParam" : {
          "modelref" : true,
          "id" : "Default"
        },
        "srcValueType" : "SRCDLPARAM"
      }, {
        "name" : "Default[bugcnt]",
        "paramAction" : "SQLPARAM",
        "srcFieldName" : "bugcnt",
        "getSrcPSDELogicParam" : {
          "modelref" : true,
          "id" : "Default"
        },
        "srcValueType" : "SRCDLPARAM"
      }, {
        "name" : "Default[bugcnt]",
        "paramAction" : "SQLPARAM",
        "srcFieldName" : "bugcnt",
        "getSrcPSDELogicParam" : {
          "modelref" : true,
          "id" : "Default"
        },
        "srcValueType" : "SRCDLPARAM"
      } ],
      "sql" : "select CONCAT_WS('','本页共 ',?,' 个需求，预计 ',case when ? is null then 0 else ? end,' 个工时，用例覆盖率 ',CONCAT(ROUND(?/(case when ?= 0 or ? is null then 1 else ? end) * 100, 0)),'%。<br>','共测试了1个版本。共有',?,'个用例，共执行',?,'个用例，产生了',?,'个结果，失败的用例有',?,'个。<br>','共发现',?,'个Bug<a data-toggle=\"tooltip\" class=\"text-warning\" title=\"影响版本在测试轮次内，并且创建时间在测试时间范围内产生的Bug数。\" style=\"vertical-align: middle;padding: 2px;\"><i class=\"fa fa-question-circle\" style=\" color: #ff9800;\"></i></a>，遗留',?,'个Bug<a data-toggle=\"tooltip\" class=\"text-warning\" title=\"Bug状态是激活，或Bug的解决时间在测试结束时间之后。\" style=\"vertical-align: middle;padding: 2px;\"><i class=\"fa fa-question-circle\" style=\" color: #ff9800;\"></i></a>。 用例执行产生',?,'个Bug<a data-toggle=\"tooltip\" class=\"text-warning\" title=\"测试时间范围内，用例执行失败后创建的Bug。\" style=\"vertical-align: middle;padding: 2px;\"><i class=\"fa fa-question-circle\" style=\" color: #ff9800;\"></i></a>。 有效Bug率（方案为已解决或延期 / 状态为已解决或已关闭）：',CONCAT(ROUND(?/(case when ? = 0 or ? is null then 1 else ? end) * 100, 2), '%'),'，用例发现Bug率（用例创建的Bug / 发现Bug数）：',CONCAT(ROUND(?/(case when ? = 0 or ? is null then 1 else ? end)* 100, 2) , '%')) as OVERVIEWS from dual",
      "fillDstLogicParam" : true,
      "parallelOutput" : true
    }, {
      "codeName" : "Rawsqlcall6",
      "getDstPSDELogicParam" : {
        "modelref" : true,
        "id" : "Default"
      },
      "logicNodeType" : "RAWSQLCALL",
      "name" : "有效Bug数",
      "getPSDELogicLinks" : [ {
        "getDstPSDELogicNode" : {
          "modelref" : true,
          "id" : "Rawsqlcall7"
        },
        "name" : "连接6472",
        "getSrcPSDELogicNode" : {
          "modelref" : true,
          "id" : "Rawsqlcall6"
        },
        "defaultLink" : false
      } ],
      "getPSDELogicNodeParams" : [ {
        "name" : "Default[ID]",
        "paramAction" : "SQLPARAM",
        "srcFieldName" : "ID",
        "getSrcPSDELogicParam" : {
          "modelref" : true,
          "id" : "Default"
        },
        "srcValueType" : "SRCDLPARAM"
      }, {
        "name" : "Default[ID]",
        "paramAction" : "SQLPARAM",
        "srcFieldName" : "ID",
        "getSrcPSDELogicParam" : {
          "modelref" : true,
          "id" : "Default"
        },
        "srcValueType" : "SRCDLPARAM"
      }, {
        "name" : "Default[ID]",
        "paramAction" : "SQLPARAM",
        "srcFieldName" : "ID",
        "getSrcPSDELogicParam" : {
          "modelref" : true,
          "id" : "Default"
        },
        "srcValueType" : "SRCDLPARAM"
      } ],
      "sql" : "SELECT\nCOUNT(1) as effective\nFROM `zt_bug` t1 \nwhere  t1.OPENEDBUILD = (select t.build from zt_testtask t inner join zt_testreport tt on t.id = tt.tasks where tt.id = ?)  and t1.openedDate > (select tt.`begin` from  zt_testreport tt  where tt.id = ?\n) and t1.openedDate < (select CONCAT( DATE_FORMAT( tt.`end`, '%Y-%m-%d'),' 23:59:59') from  zt_testreport tt  where tt.id = ?\n) and t1.`status` in ('resolved','closed') and t1.resolution in ('fixed','postponed')",
      "fillDstLogicParam" : true,
      "parallelOutput" : true
    }, {
      "codeName" : "Rawsqlcall7",
      "getDstPSDELogicParam" : {
        "modelref" : true,
        "id" : "Default"
      },
      "logicNodeType" : "RAWSQLCALL",
      "name" : "解决的Bug",
      "getPSDELogicLinks" : [ {
        "getDstPSDELogicNode" : {
          "modelref" : true,
          "id" : "Rawsqlcall8"
        },
        "name" : "连接1248",
        "getSrcPSDELogicNode" : {
          "modelref" : true,
          "id" : "Rawsqlcall7"
        },
        "defaultLink" : false
      } ],
      "getPSDELogicNodeParams" : [ {
        "name" : "Default[ID]",
        "paramAction" : "SQLPARAM",
        "srcFieldName" : "ID",
        "getSrcPSDELogicParam" : {
          "modelref" : true,
          "id" : "Default"
        },
        "srcValueType" : "SRCDLPARAM"
      }, {
        "name" : "Default[ID]",
        "paramAction" : "SQLPARAM",
        "srcFieldName" : "ID",
        "getSrcPSDELogicParam" : {
          "modelref" : true,
          "id" : "Default"
        },
        "srcValueType" : "SRCDLPARAM"
      }, {
        "name" : "Default[ID]",
        "paramAction" : "SQLPARAM",
        "srcFieldName" : "ID",
        "getSrcPSDELogicParam" : {
          "modelref" : true,
          "id" : "Default"
        },
        "srcValueType" : "SRCDLPARAM"
      } ],
      "sql" : "SELECT\nCOUNT(1) as resolvedcnt\nFROM `zt_bug` t1 \nwhere  t1.OPENEDBUILD = (select t.build from zt_testtask t inner join zt_testreport tt on t.id = tt.tasks where tt.id = ?)   and t1.openedDate > (select tt.`begin` from  zt_testreport tt  where tt.id = ?\n) and t1.openedDate < (select CONCAT( DATE_FORMAT( tt.`end`, '%Y-%m-%d'),' 23:59:59') from  zt_testreport tt  where tt.id = ?\n)  and t1.`status` in ('resolved','closed')",
      "fillDstLogicParam" : true,
      "parallelOutput" : true
    }, {
      "codeName" : "Rawsqlcall8",
      "getDstPSDELogicParam" : {
        "modelref" : true,
        "id" : "Default"
      },
      "logicNodeType" : "RAWSQLCALL",
      "name" : "产生的Bug",
      "getPSDELogicLinks" : [ {
        "getDstPSDELogicNode" : {
          "modelref" : true,
          "id" : "Rawsqlcall9"
        },
        "name" : "连接8691",
        "getSrcPSDELogicNode" : {
          "modelref" : true,
          "id" : "Rawsqlcall8"
        },
        "defaultLink" : false
      } ],
      "getPSDELogicNodeParams" : [ {
        "name" : "Default[ID]",
        "paramAction" : "SQLPARAM",
        "srcFieldName" : "ID",
        "getSrcPSDELogicParam" : {
          "modelref" : true,
          "id" : "Default"
        },
        "srcValueType" : "SRCDLPARAM"
      }, {
        "name" : "Default[ID]",
        "paramAction" : "SQLPARAM",
        "srcFieldName" : "ID",
        "getSrcPSDELogicParam" : {
          "modelref" : true,
          "id" : "Default"
        },
        "srcValueType" : "SRCDLPARAM"
      }, {
        "name" : "Default[ID]",
        "paramAction" : "SQLPARAM",
        "srcFieldName" : "ID",
        "getSrcPSDELogicParam" : {
          "modelref" : true,
          "id" : "Default"
        },
        "srcValueType" : "SRCDLPARAM"
      } ],
      "sql" : "SELECT\nCOUNT(1) as bugcnt\nFROM `zt_bug` t1 \nwhere t1.OPENEDBUILD = (select t.build from zt_testtask t inner join zt_testreport tt on t.id = tt.tasks where tt.id = ?)  and t1.openedDate > (select tt.`begin` from  zt_testreport tt  where tt.id = ?\n) and t1.openedDate < (select CONCAT( DATE_FORMAT( tt.`end`, '%Y-%m-%d'),' 23:59:59') from  zt_testreport tt  where tt.id = ?\n)",
      "fillDstLogicParam" : true,
      "parallelOutput" : true
    }, {
      "codeName" : "Begin",
      "logicNodeType" : "BEGIN",
      "name" : "开始",
      "getPSDELogicLinks" : [ {
        "getDstPSDELogicNode" : {
          "modelref" : true,
          "id" : "Deaction1"
        },
        "name" : "连接4377",
        "getSrcPSDELogicNode" : {
          "modelref" : true,
          "id" : "Begin"
        },
        "defaultLink" : false
      } ],
      "parallelOutput" : true
    }, {
      "codeName" : "Rawsqlcall10",
      "getDstPSDELogicParam" : {
        "modelref" : true,
        "id" : "Default"
      },
      "logicNodeType" : "RAWSQLCALL",
      "name" : "遗留Bug",
      "getPSDELogicLinks" : [ {
        "getDstPSDELogicNode" : {
          "modelref" : true,
          "id" : "Rawsqlcall11"
        },
        "name" : "连接4549",
        "getSrcPSDELogicNode" : {
          "modelref" : true,
          "id" : "Rawsqlcall10"
        },
        "defaultLink" : false
      } ],
      "getPSDELogicNodeParams" : [ {
        "name" : "Default[ID]",
        "paramAction" : "SQLPARAM",
        "srcFieldName" : "ID",
        "getSrcPSDELogicParam" : {
          "modelref" : true,
          "id" : "Default"
        },
        "srcValueType" : "SRCDLPARAM"
      }, {
        "name" : "Default[ID]",
        "paramAction" : "SQLPARAM",
        "srcFieldName" : "ID",
        "getSrcPSDELogicParam" : {
          "modelref" : true,
          "id" : "Default"
        },
        "srcValueType" : "SRCDLPARAM"
      }, {
        "name" : "Default[ID]",
        "paramAction" : "SQLPARAM",
        "srcFieldName" : "ID",
        "getSrcPSDELogicParam" : {
          "modelref" : true,
          "id" : "Default"
        },
        "srcValueType" : "SRCDLPARAM"
      }, {
        "name" : "Default[ID]",
        "paramAction" : "SQLPARAM",
        "srcFieldName" : "ID",
        "getSrcPSDELogicParam" : {
          "modelref" : true,
          "id" : "Default"
        },
        "srcValueType" : "SRCDLPARAM"
      } ],
      "sql" : "SELECT\nCOUNT(1) as ylbugcnt\nFROM `zt_bug` t1 \nwhere  t1.OPENEDBUILD = (select t.build from zt_testtask t inner join zt_testreport tt on t.id = tt.tasks where tt.id = ?)   and t1.openedDate > (select tt.`begin` from  zt_testreport tt  where tt.id = ?\n) and t1.openedDate < (select CONCAT( DATE_FORMAT( tt.`end`, '%Y-%m-%d'),' 23:59:59') from  zt_testreport tt  where tt.id = ?\n) and (t1.`status` = 'active' or t1.resolvedDate > (select tt.`end` from zt_testreport tt where tt.id = ?))",
      "fillDstLogicParam" : true,
      "parallelOutput" : true
    }, {
      "codeName" : "Deaction1",
      "getDstPSDEAction" : {
        "modelref" : true,
        "path" : "PSMODULES/zentao/PSDATAENTITIES/TestReport/PSDEACTIONS/Get.json"
      },
      "getDstPSDELogicParam" : {
        "modelref" : true,
        "id" : "Default"
      },
      "getDstPSDataEntity" : {
        "modelref" : true,
        "path" : "PSMODULES/zentao/PSDATAENTITIES/TestReport.json"
      },
      "logicNodeType" : "DEACTION",
      "name" : "获取数据",
      "getPSDELogicLinks" : [ {
        "getDstPSDELogicNode" : {
          "modelref" : true,
          "id" : "Rawsqlcall1"
        },
        "name" : "连接9637",
        "getSrcPSDELogicNode" : {
          "modelref" : true,
          "id" : "Deaction1"
        },
        "defaultLink" : false
      } ],
      "parallelOutput" : true
    } ],
    "getPSDELogicParams" : [ {
      "codeName" : "Default",
      "name" : "传入变量",
      "getParamPSDataEntity" : {
        "modelref" : true,
        "path" : "PSMODULES/zentao/PSDATAENTITIES/TestReport.json"
      },
      "default" : true
    } ],
    "getStartPSDELogicNode" : {
      "modelref" : true,
      "id" : "Begin"
    },
    "enableBackend" : true,
    "enableFront" : false
  }, {
    "codeName" : "GetTestReportProject",
    "defaultParamName" : "Default",
    "dynaModelFilePath" : "PSMODULES/zentao/PSDATAENTITIES/TestReport/PSDELOGICS/GetTestReportProject.json",
    "logicName" : "根据测试报告获取基本信息（项目报告）",
    "name" : "根据测试报告获取基本信息（项目报告）",
    "getPSDELogicNodes" : [ {
      "codeName" : "Rawsqlcall5",
      "getDstPSDELogicParam" : {
        "modelref" : true,
        "id" : "Default"
      },
      "logicNodeType" : "RAWSQLCALL",
      "name" : "执行结果",
      "getPSDELogicLinks" : [ {
        "getDstPSDELogicNode" : {
          "modelref" : true,
          "id" : "Rawsqlcall6"
        },
        "name" : "连接7149",
        "getSrcPSDELogicNode" : {
          "modelref" : true,
          "id" : "Rawsqlcall5"
        },
        "defaultLink" : false
      } ],
      "getPSDELogicNodeParams" : [ {
        "name" : "Default[ID]",
        "paramAction" : "SQLPARAM",
        "srcFieldName" : "ID",
        "getSrcPSDELogicParam" : {
          "modelref" : true,
          "id" : "Default"
        },
        "srcValueType" : "SRCDLPARAM"
      } ],
      "sql" : "select COUNT(1) testresultcnt from zt_testresult t1 \nINNER JOIN zt_case t31 on t31.id = t1.`case`\ninner join zt_testrun t11 on t1.run = t11.id and t1.`case` = t11.`case`\ninner join zt_testreport t21 on FIND_IN_SET(t11.task, t21.tasks)\nwhere t21.id = ? and FIND_IN_SET(t11.`case`,t21.cases) and t31.deleted = '0' and t1.date >   t21.`begin` and t1.date <  CONCAT( DATE_FORMAT( t21.`end`, '%Y-%m-%d'),' 23:59:59')",
      "fillDstLogicParam" : true,
      "parallelOutput" : true
    }, {
      "codeName" : "Rawsqlcall6",
      "getDstPSDELogicParam" : {
        "modelref" : true,
        "id" : "Default"
      },
      "logicNodeType" : "RAWSQLCALL",
      "name" : "有效Bug数",
      "getPSDELogicLinks" : [ {
        "getDstPSDELogicNode" : {
          "modelref" : true,
          "id" : "Rawsqlcall7"
        },
        "name" : "连接6472",
        "getSrcPSDELogicNode" : {
          "modelref" : true,
          "id" : "Rawsqlcall6"
        },
        "defaultLink" : false
      } ],
      "getPSDELogicNodeParams" : [ {
        "name" : "Default[TASKS]",
        "paramAction" : "SQLPARAM",
        "srcFieldName" : "TASKS",
        "getSrcPSDELogicParam" : {
          "modelref" : true,
          "id" : "Default"
        },
        "srcValueType" : "SRCDLPARAM"
      }, {
        "name" : "Default[ID]",
        "paramAction" : "SQLPARAM",
        "srcFieldName" : "ID",
        "getSrcPSDELogicParam" : {
          "modelref" : true,
          "id" : "Default"
        },
        "srcValueType" : "SRCDLPARAM"
      }, {
        "name" : "Default[ID]",
        "paramAction" : "SQLPARAM",
        "srcFieldName" : "ID",
        "getSrcPSDELogicParam" : {
          "modelref" : true,
          "id" : "Default"
        },
        "srcValueType" : "SRCDLPARAM"
      }, {
        "name" : "Default[TASKS]",
        "paramAction" : "SQLPARAM",
        "srcFieldName" : "TASKS",
        "getSrcPSDELogicParam" : {
          "modelref" : true,
          "id" : "Default"
        },
        "srcValueType" : "SRCDLPARAM"
      } ],
      "sql" : "select count(1) as\teffective from (\nSELECT\nDISTINCT t1.*\nFROM `zt_bug` t1 \n\tINNER JOIN (select tt.id from zt_build tt where tt.deleted = '0' and tt.id in (\n\tselect t1.build from zt_testtask t1 where FIND_IN_SET(t1.id,?))) t71 on FIND_IN_SET(t71.id,t1.openedBuild)\nwhere  t1.openedDate > (select tt.`begin` from  zt_testreport tt  where tt.id = ?\n) and t1.openedDate < (select CONCAT(DATE_FORMAT(tt.`end`,'%Y-%m-%d'),' 23:59:59') from  zt_testreport tt  where tt.id = ?\n) and not EXISTS(select 1 from zt_build t where FIND_IN_SET(t.id,t1.openedBuild) and FIND_IN_SET(t.id,(select GROUP_CONCAT(tt.id) from (select tt.* from zt_build tt where  tt.id in (\n\tselect t1.build from zt_testtask t1 where FIND_IN_SET(t1.id,?))) tt GROUP BY tt.product)) = 0) and FIND_IN_SET('trunk',t1.openedBuild) = 0 and t1.`status` in ('resolved','closed') and t1.resolution in ('fixed','postponed')) t",
      "fillDstLogicParam" : true,
      "parallelOutput" : true
    }, {
      "codeName" : "Rawsqlcall4",
      "getDstPSDELogicParam" : {
        "modelref" : true,
        "id" : "Default"
      },
      "logicNodeType" : "RAWSQLCALL",
      "name" : "失败的用例数",
      "getPSDELogicLinks" : [ {
        "getDstPSDELogicNode" : {
          "modelref" : true,
          "id" : "Rawsqlcall12"
        },
        "name" : "连接1775",
        "getSrcPSDELogicNode" : {
          "modelref" : true,
          "id" : "Rawsqlcall4"
        },
        "defaultLink" : false
      } ],
      "getPSDELogicNodeParams" : [ {
        "name" : "Default[ID]",
        "paramAction" : "SQLPARAM",
        "srcFieldName" : "ID",
        "getSrcPSDELogicParam" : {
          "modelref" : true,
          "id" : "Default"
        },
        "srcValueType" : "SRCDLPARAM"
      }, {
        "name" : "Default[ID]",
        "paramAction" : "SQLPARAM",
        "srcFieldName" : "ID",
        "getSrcPSDELogicParam" : {
          "modelref" : true,
          "id" : "Default"
        },
        "srcValueType" : "SRCDLPARAM"
      }, {
        "name" : "Default[ID]",
        "paramAction" : "SQLPARAM",
        "srcFieldName" : "ID",
        "getSrcPSDELogicParam" : {
          "modelref" : true,
          "id" : "Default"
        },
        "srcValueType" : "SRCDLPARAM"
      }, {
        "name" : "Default[ID]",
        "paramAction" : "SQLPARAM",
        "srcFieldName" : "ID",
        "getSrcPSDELogicParam" : {
          "modelref" : true,
          "id" : "Default"
        },
        "srcValueType" : "SRCDLPARAM"
      } ],
      "sql" : "select COUNT(1) as failcase from (SELECT\nDISTINCT t1.id\nFROM `zt_case` t1 \nleft join zt_testrun t11 on t1.id = t11.`case`\nleft join zt_testresult t21 on t21.run = t11.id\nWHERE  t1.`DELETED` = '0' AND FIND_IN_SET ( t1.ID, (SELECT cases FROM ZT_TESTREPORT WHERE ID= ?)) and FIND_IN_SET(t11.task , (SELECT tasks FROM ZT_TESTREPORT WHERE ID= ?)) and t21.caseResult = 'fail' and t21.date >   (SELECT `BEGIN` FROM ZT_TESTREPORT WHERE ID= ?) and t21.date <  (SELECT CONCAT( DATE_FORMAT( `end`, '%Y-%m-%d'),' 23:59:59') FROM ZT_TESTREPORT WHERE ID= ?)) t",
      "fillDstLogicParam" : true,
      "parallelOutput" : true
    }, {
      "codeName" : "Rawsqlcall12",
      "getDstPSDELogicParam" : {
        "modelref" : true,
        "id" : "Default"
      },
      "logicNodeType" : "RAWSQLCALL",
      "name" : "测试版本",
      "getPSDELogicLinks" : [ {
        "getDstPSDELogicNode" : {
          "modelref" : true,
          "id" : "Rawsqlcall13"
        },
        "name" : "连接7154",
        "getSrcPSDELogicNode" : {
          "modelref" : true,
          "id" : "Rawsqlcall12"
        },
        "defaultLink" : false
      } ],
      "getPSDELogicNodeParams" : [ {
        "name" : "Default[ID]",
        "paramAction" : "SQLPARAM",
        "srcFieldName" : "ID",
        "getSrcPSDELogicParam" : {
          "modelref" : true,
          "id" : "Default"
        },
        "srcValueType" : "SRCDLPARAM"
      } ],
      "sql" : "select count(1) as buildcnt from zt_build t where FIND_IN_SET(t.id,(select tt.builds from zt_testreport tt where tt.id = ?))",
      "fillDstLogicParam" : true,
      "parallelOutput" : true
    }, {
      "codeName" : "Rawsqlcall2",
      "getDstPSDELogicParam" : {
        "modelref" : true,
        "id" : "Default"
      },
      "logicNodeType" : "RAWSQLCALL",
      "name" : "获取用例数",
      "getPSDELogicLinks" : [ {
        "getDstPSDELogicNode" : {
          "modelref" : true,
          "id" : "Rawsqlcall3"
        },
        "name" : "连接4999",
        "getSrcPSDELogicNode" : {
          "modelref" : true,
          "id" : "Rawsqlcall2"
        },
        "defaultLink" : false
      } ],
      "getPSDELogicNodeParams" : [ {
        "name" : "Default[ID]",
        "paramAction" : "SQLPARAM",
        "srcFieldName" : "ID",
        "getSrcPSDELogicParam" : {
          "modelref" : true,
          "id" : "Default"
        },
        "srcValueType" : "SRCDLPARAM"
      }, {
        "name" : "Default[ID]",
        "paramAction" : "SQLPARAM",
        "srcFieldName" : "ID",
        "getSrcPSDELogicParam" : {
          "modelref" : true,
          "id" : "Default"
        },
        "srcValueType" : "SRCDLPARAM"
      } ],
      "sql" : "select COUNT(1) as casecnt from ( SELECT\nDISTINCT t1.*\nFROM `zt_case` t1 \nleft join zt_testrun t11 on t1.id = t11.`case`\nWHERE  t1.`DELETED` = '0' AND FIND_IN_SET ( t1.ID, (SELECT cases FROM ZT_TESTREPORT WHERE ID= ?)) and FIND_IN_SET(t11.task ,(SELECT tasks FROM ZT_TESTREPORT WHERE ID= ?)) )t",
      "fillDstLogicParam" : true,
      "parallelOutput" : true
    }, {
      "codeName" : "Rawsqlcall9",
      "getDstPSDELogicParam" : {
        "modelref" : true,
        "id" : "Default"
      },
      "logicNodeType" : "RAWSQLCALL",
      "name" : "设置概况",
      "getPSDELogicNodeParams" : [ {
        "name" : "Default[storycnt]",
        "paramAction" : "SQLPARAM",
        "srcFieldName" : "storycnt",
        "getSrcPSDELogicParam" : {
          "modelref" : true,
          "id" : "Default"
        },
        "srcValueType" : "SRCDLPARAM"
      }, {
        "name" : "Default[storyestimate]",
        "paramAction" : "SQLPARAM",
        "srcFieldName" : "storyestimate",
        "getSrcPSDELogicParam" : {
          "modelref" : true,
          "id" : "Default"
        },
        "srcValueType" : "SRCDLPARAM"
      }, {
        "name" : "Default[storyestimate]",
        "paramAction" : "SQLPARAM",
        "srcFieldName" : "storyestimate",
        "getSrcPSDELogicParam" : {
          "modelref" : true,
          "id" : "Default"
        },
        "srcValueType" : "SRCDLPARAM"
      }, {
        "name" : "Default[casecnts]",
        "paramAction" : "SQLPARAM",
        "srcFieldName" : "casecnts",
        "getSrcPSDELogicParam" : {
          "modelref" : true,
          "id" : "Default"
        },
        "srcValueType" : "SRCDLPARAM"
      }, {
        "name" : "Default[storycnts]",
        "paramAction" : "SQLPARAM",
        "srcFieldName" : "storycnts",
        "getSrcPSDELogicParam" : {
          "modelref" : true,
          "id" : "Default"
        },
        "srcValueType" : "SRCDLPARAM"
      }, {
        "name" : "Default[storycnts]",
        "paramAction" : "SQLPARAM",
        "srcFieldName" : "storycnts",
        "getSrcPSDELogicParam" : {
          "modelref" : true,
          "id" : "Default"
        },
        "srcValueType" : "SRCDLPARAM"
      }, {
        "name" : "Default[storycnts]",
        "paramAction" : "SQLPARAM",
        "srcFieldName" : "storycnts",
        "getSrcPSDELogicParam" : {
          "modelref" : true,
          "id" : "Default"
        },
        "srcValueType" : "SRCDLPARAM"
      }, {
        "name" : "Default[buildcnt]",
        "paramAction" : "SQLPARAM",
        "srcFieldName" : "buildcnt",
        "getSrcPSDELogicParam" : {
          "modelref" : true,
          "id" : "Default"
        },
        "srcValueType" : "SRCDLPARAM"
      }, {
        "name" : "Default[casecnt]",
        "paramAction" : "SQLPARAM",
        "srcFieldName" : "casecnt",
        "getSrcPSDELogicParam" : {
          "modelref" : true,
          "id" : "Default"
        },
        "srcValueType" : "SRCDLPARAM"
      }, {
        "name" : "Default[rencase]",
        "paramAction" : "SQLPARAM",
        "srcFieldName" : "rencase",
        "getSrcPSDELogicParam" : {
          "modelref" : true,
          "id" : "Default"
        },
        "srcValueType" : "SRCDLPARAM"
      }, {
        "name" : "Default[testresultcnt]",
        "paramAction" : "SQLPARAM",
        "srcFieldName" : "testresultcnt",
        "getSrcPSDELogicParam" : {
          "modelref" : true,
          "id" : "Default"
        },
        "srcValueType" : "SRCDLPARAM"
      }, {
        "name" : "Default[failcase]",
        "paramAction" : "SQLPARAM",
        "srcFieldName" : "failcase",
        "getSrcPSDELogicParam" : {
          "modelref" : true,
          "id" : "Default"
        },
        "srcValueType" : "SRCDLPARAM"
      }, {
        "name" : "Default[bugcnt]",
        "paramAction" : "SQLPARAM",
        "srcFieldName" : "bugcnt",
        "getSrcPSDELogicParam" : {
          "modelref" : true,
          "id" : "Default"
        },
        "srcValueType" : "SRCDLPARAM"
      }, {
        "name" : "Default[ylbugcnt]",
        "paramAction" : "SQLPARAM",
        "srcFieldName" : "ylbugcnt",
        "getSrcPSDELogicParam" : {
          "modelref" : true,
          "id" : "Default"
        },
        "srcValueType" : "SRCDLPARAM"
      }, {
        "name" : "Default[casebugcnt]",
        "paramAction" : "SQLPARAM",
        "srcFieldName" : "casebugcnt",
        "getSrcPSDELogicParam" : {
          "modelref" : true,
          "id" : "Default"
        },
        "srcValueType" : "SRCDLPARAM"
      }, {
        "name" : "Default[effective]",
        "paramAction" : "SQLPARAM",
        "srcFieldName" : "effective",
        "getSrcPSDELogicParam" : {
          "modelref" : true,
          "id" : "Default"
        },
        "srcValueType" : "SRCDLPARAM"
      }, {
        "name" : "Default[resolvedcnt]",
        "paramAction" : "SQLPARAM",
        "srcFieldName" : "resolvedcnt",
        "getSrcPSDELogicParam" : {
          "modelref" : true,
          "id" : "Default"
        },
        "srcValueType" : "SRCDLPARAM"
      }, {
        "name" : "Default[resolvedcnt]",
        "paramAction" : "SQLPARAM",
        "srcFieldName" : "resolvedcnt",
        "getSrcPSDELogicParam" : {
          "modelref" : true,
          "id" : "Default"
        },
        "srcValueType" : "SRCDLPARAM"
      }, {
        "name" : "Default[resolvedcnt]",
        "paramAction" : "SQLPARAM",
        "srcFieldName" : "resolvedcnt",
        "getSrcPSDELogicParam" : {
          "modelref" : true,
          "id" : "Default"
        },
        "srcValueType" : "SRCDLPARAM"
      }, {
        "name" : "Default[casebugcnt]",
        "paramAction" : "SQLPARAM",
        "srcFieldName" : "casebugcnt",
        "getSrcPSDELogicParam" : {
          "modelref" : true,
          "id" : "Default"
        },
        "srcValueType" : "SRCDLPARAM"
      }, {
        "name" : "Default[bugcnt]",
        "paramAction" : "SQLPARAM",
        "srcFieldName" : "bugcnt",
        "getSrcPSDELogicParam" : {
          "modelref" : true,
          "id" : "Default"
        },
        "srcValueType" : "SRCDLPARAM"
      }, {
        "name" : "Default[bugcnt]",
        "paramAction" : "SQLPARAM",
        "srcFieldName" : "bugcnt",
        "getSrcPSDELogicParam" : {
          "modelref" : true,
          "id" : "Default"
        },
        "srcValueType" : "SRCDLPARAM"
      }, {
        "name" : "Default[bugcnt]",
        "paramAction" : "SQLPARAM",
        "srcFieldName" : "bugcnt",
        "getSrcPSDELogicParam" : {
          "modelref" : true,
          "id" : "Default"
        },
        "srcValueType" : "SRCDLPARAM"
      } ],
      "sql" : "select CONCAT_WS('','本页共 ',?,' 个需求，预计 ',case when ? is null then 0 else ? end,' 个工时，用例覆盖率 ',CONCAT(ROUND(?/(case when ?= 0 or ? is null then 1 else ? end) * 100, 0)),'%。<br>','共测试了',?,'个版本。共有',?,'个用例，共执行',?,'个用例，产生了',?,'个结果，失败的用例有',?,'个。<br>','共发现',?,'个Bug<a data-toggle=\"tooltip\" class=\"text-warning\" title=\"影响版本在测试轮次内，并且创建时间在测试时间范围内产生的Bug数。\" style=\"vertical-align: middle;padding: 2px;\"><i class=\"fa fa-question-circle\" style=\" color: #ff9800;\"></i></a>，遗留',?,'个Bug<a data-toggle=\"tooltip\" class=\"text-warning\" title=\"Bug状态是激活，或Bug的解决时间在测试结束时间之后。\" style=\"vertical-align: middle;padding: 2px;\"><i class=\"fa fa-question-circle\" style=\" color: #ff9800;\"></i></a>。 用例执行产生',?,'个Bug<a data-toggle=\"tooltip\" class=\"text-warning\" title=\"测试时间范围内，用例执行失败后创建的Bug。\" style=\"vertical-align: middle;padding: 2px;\"><i class=\"fa fa-question-circle\" style=\" color: #ff9800;\"></i></a>。 有效Bug率（方案为已解决或延期 / 状态为已解决或已关闭）：',CONCAT(ROUND(?/(case when ? = 0 or ? is null then 1 else ? end) * 100, 2), '%'),'，用例发现Bug率（用例创建的Bug / 发现Bug数）：',CONCAT(ROUND(?/(case when ? = 0 or ? is null then 1 else ? end)* 100, 2) , '%')) as OVERVIEWS from dual",
      "fillDstLogicParam" : true,
      "parallelOutput" : true
    }, {
      "codeName" : "Rawsqlcall13",
      "getDstPSDELogicParam" : {
        "modelref" : true,
        "id" : "Default"
      },
      "logicNodeType" : "RAWSQLCALL",
      "name" : "有效需求数",
      "getPSDELogicLinks" : [ {
        "getDstPSDELogicNode" : {
          "modelref" : true,
          "id" : "Rawsqlcall14"
        },
        "name" : "连接6952",
        "getSrcPSDELogicNode" : {
          "modelref" : true,
          "id" : "Rawsqlcall13"
        },
        "defaultLink" : false
      } ],
      "getPSDELogicNodeParams" : [ {
        "name" : "Default[ID]",
        "paramAction" : "SQLPARAM",
        "srcFieldName" : "ID",
        "getSrcPSDELogicParam" : {
          "modelref" : true,
          "id" : "Default"
        },
        "srcValueType" : "SRCDLPARAM"
      } ],
      "sql" : "SELECT\nCOUNT(1) as storycnts\nFROM `zt_story` t1 \nWHERE t1.`DELETED` = '0' AND FIND_IN_SET ( t1.ID, (SELECT STORIES FROM ZT_TESTREPORT WHERE ID= ?)) and (t1.`status` <> 'closed' or (t1.`status` = 'closed' and t1.closedReason in ('done','postponed')))",
      "fillDstLogicParam" : true,
      "parallelOutput" : true
    }, {
      "codeName" : "Rawsqlcall1",
      "getDstPSDELogicParam" : {
        "modelref" : true,
        "id" : "Default"
      },
      "logicNodeType" : "RAWSQLCALL",
      "name" : "获取需求数",
      "getPSDELogicLinks" : [ {
        "getDstPSDELogicNode" : {
          "modelref" : true,
          "id" : "Rawsqlcall2"
        },
        "name" : "连接9019",
        "getSrcPSDELogicNode" : {
          "modelref" : true,
          "id" : "Rawsqlcall1"
        },
        "defaultLink" : false
      } ],
      "getPSDELogicNodeParams" : [ {
        "name" : "Default[ID]",
        "paramAction" : "SQLPARAM",
        "srcFieldName" : "ID",
        "getSrcPSDELogicParam" : {
          "modelref" : true,
          "id" : "Default"
        },
        "srcValueType" : "SRCDLPARAM"
      } ],
      "sql" : "SELECT\nCOUNT(1) as storycnt, sum(t1.ESTIMATE) as storyestimate,GROUP_CONCAT(DISTINCT t1.id ORDER BY t1.id asc) as stories\nFROM `zt_story` t1 \nWHERE t1.`DELETED` = '0' AND FIND_IN_SET ( t1.ID, (SELECT STORIES FROM ZT_TESTREPORT WHERE ID= ?))",
      "fillDstLogicParam" : true,
      "parallelOutput" : true
    }, {
      "codeName" : "Begin",
      "logicNodeType" : "BEGIN",
      "name" : "开始",
      "getPSDELogicLinks" : [ {
        "getDstPSDELogicNode" : {
          "modelref" : true,
          "id" : "Deaction1"
        },
        "name" : "连接4377",
        "getSrcPSDELogicNode" : {
          "modelref" : true,
          "id" : "Begin"
        },
        "defaultLink" : false
      } ],
      "parallelOutput" : true
    }, {
      "codeName" : "Rawsqlcall14",
      "getDstPSDELogicParam" : {
        "modelref" : true,
        "id" : "Default"
      },
      "logicNodeType" : "RAWSQLCALL",
      "name" : "需求覆盖用例数",
      "getPSDELogicLinks" : [ {
        "getDstPSDELogicNode" : {
          "modelref" : true,
          "id" : "Rawsqlcall10"
        },
        "name" : "连接8440",
        "getSrcPSDELogicNode" : {
          "modelref" : true,
          "id" : "Rawsqlcall14"
        },
        "defaultLink" : false
      } ],
      "getPSDELogicNodeParams" : [ {
        "name" : "Default[ID]",
        "paramAction" : "SQLPARAM",
        "srcFieldName" : "ID",
        "getSrcPSDELogicParam" : {
          "modelref" : true,
          "id" : "Default"
        },
        "srcValueType" : "SRCDLPARAM"
      } ],
      "sql" : "SELECT\ncount(1) as casecnts\nFROM `zt_story` t1 \nWHERE t1.`DELETED` = '0' AND FIND_IN_SET ( t1.ID, (SELECT STORIES FROM ZT_TESTREPORT WHERE ID= ?)) and (t1.`status` <> 'closed' or (t1.`status` = 'closed' and t1.closedReason in ('done','postponed'))) and EXISTS(select 1 from zt_case t where t.deleted = '0' and t1.id = t.story)",
      "fillDstLogicParam" : true,
      "parallelOutput" : true
    }, {
      "codeName" : "Rawsqlcall8",
      "getDstPSDELogicParam" : {
        "modelref" : true,
        "id" : "Default"
      },
      "logicNodeType" : "RAWSQLCALL",
      "name" : "产生的Bug",
      "getPSDELogicLinks" : [ {
        "getDstPSDELogicNode" : {
          "modelref" : true,
          "id" : "Rawsqlcall9"
        },
        "name" : "连接8691",
        "getSrcPSDELogicNode" : {
          "modelref" : true,
          "id" : "Rawsqlcall8"
        },
        "defaultLink" : false
      } ],
      "getPSDELogicNodeParams" : [ {
        "name" : "Default[TASKS]",
        "paramAction" : "SQLPARAM",
        "srcFieldName" : "TASKS",
        "getSrcPSDELogicParam" : {
          "modelref" : true,
          "id" : "Default"
        },
        "srcValueType" : "SRCDLPARAM"
      }, {
        "name" : "Default[ID]",
        "paramAction" : "SQLPARAM",
        "srcFieldName" : "ID",
        "getSrcPSDELogicParam" : {
          "modelref" : true,
          "id" : "Default"
        },
        "srcValueType" : "SRCDLPARAM"
      }, {
        "name" : "Default[ID]",
        "paramAction" : "SQLPARAM",
        "srcFieldName" : "ID",
        "getSrcPSDELogicParam" : {
          "modelref" : true,
          "id" : "Default"
        },
        "srcValueType" : "SRCDLPARAM"
      }, {
        "name" : "Default[TASKS]",
        "paramAction" : "SQLPARAM",
        "srcFieldName" : "TASKS",
        "getSrcPSDELogicParam" : {
          "modelref" : true,
          "id" : "Default"
        },
        "srcValueType" : "SRCDLPARAM"
      } ],
      "sql" : "select count(1) as \tbugcnt from (\nSELECT\nDISTINCT t1.*\nFROM `zt_bug` t1 \n\tINNER JOIN (select tt.id from zt_build tt where tt.deleted = '0' and tt.id in (\n\tselect t1.build from zt_testtask t1 where FIND_IN_SET(t1.id,?))) t71 on FIND_IN_SET(t71.id,t1.openedBuild)\nwhere  t1.openedDate > (select tt.`begin` from  zt_testreport tt  where tt.id = ?\n) and t1.openedDate < (select CONCAT(DATE_FORMAT(tt.`end`,'%Y-%m-%d'),' 23:59:59') from  zt_testreport tt  where tt.id = ?\n) and not EXISTS(select 1 from zt_build t where FIND_IN_SET(t.id,t1.openedBuild) and FIND_IN_SET(t.id,(select GROUP_CONCAT(tt.id) from (select tt.* from zt_build tt where  tt.id in (\n\tselect t1.build from zt_testtask t1 where FIND_IN_SET(t1.id,?))) tt GROUP BY tt.product)) = 0) and FIND_IN_SET('trunk',t1.openedBuild) = 0) t",
      "fillDstLogicParam" : true,
      "parallelOutput" : true
    }, {
      "codeName" : "Rawsqlcall3",
      "getDstPSDELogicParam" : {
        "modelref" : true,
        "id" : "Default"
      },
      "logicNodeType" : "RAWSQLCALL",
      "name" : "执行的用例数",
      "getPSDELogicLinks" : [ {
        "getDstPSDELogicNode" : {
          "modelref" : true,
          "id" : "Rawsqlcall4"
        },
        "name" : "连接715",
        "getSrcPSDELogicNode" : {
          "modelref" : true,
          "id" : "Rawsqlcall3"
        },
        "defaultLink" : false
      } ],
      "getPSDELogicNodeParams" : [ {
        "name" : "Default[ID]",
        "paramAction" : "SQLPARAM",
        "srcFieldName" : "ID",
        "getSrcPSDELogicParam" : {
          "modelref" : true,
          "id" : "Default"
        },
        "srcValueType" : "SRCDLPARAM"
      }, {
        "name" : "Default[ID]",
        "paramAction" : "SQLPARAM",
        "srcFieldName" : "ID",
        "getSrcPSDELogicParam" : {
          "modelref" : true,
          "id" : "Default"
        },
        "srcValueType" : "SRCDLPARAM"
      }, {
        "name" : "Default[ID]",
        "paramAction" : "SQLPARAM",
        "srcFieldName" : "ID",
        "getSrcPSDELogicParam" : {
          "modelref" : true,
          "id" : "Default"
        },
        "srcValueType" : "SRCDLPARAM"
      }, {
        "name" : "Default[ID]",
        "paramAction" : "SQLPARAM",
        "srcFieldName" : "ID",
        "getSrcPSDELogicParam" : {
          "modelref" : true,
          "id" : "Default"
        },
        "srcValueType" : "SRCDLPARAM"
      } ],
      "sql" : "select COUNT(1) as rencase from (SELECT\nDISTINCT t1.id\nFROM `zt_case` t1 \nleft join zt_testrun t11 on t1.id = t11.`case`\nINNER join zt_testresult t21 on t21.run = t11.id\nWHERE  t1.`DELETED` = '0' AND FIND_IN_SET ( t1.ID, (SELECT cases FROM ZT_TESTREPORT WHERE ID= ?)) and FIND_IN_SET(t11.task , (SELECT tasks FROM ZT_TESTREPORT WHERE ID= ?)) and t21.date >   (SELECT `BEGIN` FROM ZT_TESTREPORT WHERE ID= ?) and t21.date <  (SELECT CONCAT( DATE_FORMAT( `end`, '%Y-%m-%d'),' 23:59:59') FROM ZT_TESTREPORT WHERE ID= ?) ) t",
      "fillDstLogicParam" : true,
      "parallelOutput" : true
    }, {
      "codeName" : "Rawsqlcall11",
      "getDstPSDELogicParam" : {
        "modelref" : true,
        "id" : "Default"
      },
      "logicNodeType" : "RAWSQLCALL",
      "name" : "用例产生的Bug",
      "getPSDELogicLinks" : [ {
        "getDstPSDELogicNode" : {
          "modelref" : true,
          "id" : "Rawsqlcall5"
        },
        "name" : "连接3617",
        "getSrcPSDELogicNode" : {
          "modelref" : true,
          "id" : "Rawsqlcall11"
        },
        "defaultLink" : false
      } ],
      "getPSDELogicNodeParams" : [ {
        "name" : "Default[TASKS]",
        "paramAction" : "SQLPARAM",
        "srcFieldName" : "TASKS",
        "getSrcPSDELogicParam" : {
          "modelref" : true,
          "id" : "Default"
        },
        "srcValueType" : "SRCDLPARAM"
      }, {
        "name" : "Default[ID]",
        "paramAction" : "SQLPARAM",
        "srcFieldName" : "ID",
        "getSrcPSDELogicParam" : {
          "modelref" : true,
          "id" : "Default"
        },
        "srcValueType" : "SRCDLPARAM"
      }, {
        "name" : "Default[ID]",
        "paramAction" : "SQLPARAM",
        "srcFieldName" : "ID",
        "getSrcPSDELogicParam" : {
          "modelref" : true,
          "id" : "Default"
        },
        "srcValueType" : "SRCDLPARAM"
      }, {
        "name" : "Default[TASKS]",
        "paramAction" : "SQLPARAM",
        "srcFieldName" : "TASKS",
        "getSrcPSDELogicParam" : {
          "modelref" : true,
          "id" : "Default"
        },
        "srcValueType" : "SRCDLPARAM"
      } ],
      "sql" : "select count(1) as \tcasebugcnt from (\nSELECT\nDISTINCT t1.*\nFROM `zt_bug` t1 \n\tINNER JOIN (select tt.id from zt_build tt where tt.deleted = '0' and tt.id in (\n\tselect t1.build from zt_testtask t1 where FIND_IN_SET(t1.id,?))) t71 on FIND_IN_SET(t71.id,t1.openedBuild)\nwhere  t1.openedDate > (select tt.`begin` from  zt_testreport tt  where tt.id = ?\n) and t1.openedDate < (select CONCAT(DATE_FORMAT(tt.`end`,'%Y-%m-%d'),' 23:59:59') from  zt_testreport tt  where tt.id = ?\n) and not EXISTS(select 1 from zt_build t where FIND_IN_SET(t.id,t1.openedBuild) and FIND_IN_SET(t.id,(select GROUP_CONCAT(tt.id) from (select tt.* from zt_build tt where  tt.id in (\n\tselect t1.build from zt_testtask t1 where FIND_IN_SET(t1.id,?))) tt GROUP BY tt.product)) = 0) and FIND_IN_SET('trunk',t1.openedBuild) = 0 and t1.`case` > 0) t",
      "fillDstLogicParam" : true,
      "parallelOutput" : true
    }, {
      "codeName" : "Deaction1",
      "getDstPSDEAction" : {
        "modelref" : true,
        "path" : "PSMODULES/zentao/PSDATAENTITIES/TestReport/PSDEACTIONS/Get.json"
      },
      "getDstPSDELogicParam" : {
        "modelref" : true,
        "id" : "Default"
      },
      "getDstPSDataEntity" : {
        "modelref" : true,
        "path" : "PSMODULES/zentao/PSDATAENTITIES/TestReport.json"
      },
      "logicNodeType" : "DEACTION",
      "name" : "获取数据",
      "getPSDELogicLinks" : [ {
        "getDstPSDELogicNode" : {
          "modelref" : true,
          "id" : "Rawsqlcall1"
        },
        "name" : "连接9637",
        "getSrcPSDELogicNode" : {
          "modelref" : true,
          "id" : "Deaction1"
        },
        "defaultLink" : false
      } ],
      "parallelOutput" : true
    }, {
      "codeName" : "Rawsqlcall10",
      "getDstPSDELogicParam" : {
        "modelref" : true,
        "id" : "Default"
      },
      "logicNodeType" : "RAWSQLCALL",
      "name" : "遗留Bug",
      "getPSDELogicLinks" : [ {
        "getDstPSDELogicNode" : {
          "modelref" : true,
          "id" : "Rawsqlcall11"
        },
        "name" : "连接4549",
        "getSrcPSDELogicNode" : {
          "modelref" : true,
          "id" : "Rawsqlcall10"
        },
        "defaultLink" : false
      } ],
      "getPSDELogicNodeParams" : [ {
        "name" : "Default[TASKS]",
        "paramAction" : "SQLPARAM",
        "srcFieldName" : "TASKS",
        "getSrcPSDELogicParam" : {
          "modelref" : true,
          "id" : "Default"
        },
        "srcValueType" : "SRCDLPARAM"
      }, {
        "name" : "Default[ID]",
        "paramAction" : "SQLPARAM",
        "srcFieldName" : "ID",
        "getSrcPSDELogicParam" : {
          "modelref" : true,
          "id" : "Default"
        },
        "srcValueType" : "SRCDLPARAM"
      }, {
        "name" : "Default[ID]",
        "paramAction" : "SQLPARAM",
        "srcFieldName" : "ID",
        "getSrcPSDELogicParam" : {
          "modelref" : true,
          "id" : "Default"
        },
        "srcValueType" : "SRCDLPARAM"
      }, {
        "name" : "Default[TASKS]",
        "paramAction" : "SQLPARAM",
        "srcFieldName" : "TASKS",
        "getSrcPSDELogicParam" : {
          "modelref" : true,
          "id" : "Default"
        },
        "srcValueType" : "SRCDLPARAM"
      }, {
        "name" : "Default[ID]",
        "paramAction" : "SQLPARAM",
        "srcFieldName" : "ID",
        "getSrcPSDELogicParam" : {
          "modelref" : true,
          "id" : "Default"
        },
        "srcValueType" : "SRCDLPARAM"
      } ],
      "sql" : "select count(1) as \tylbugcnt from (\nSELECT\nDISTINCT t1.*\nFROM `zt_bug` t1 \n\tINNER JOIN (select tt.id from zt_build tt where tt.deleted = '0' and tt.id in (\n\tselect t1.build from zt_testtask t1 where FIND_IN_SET(t1.id,?))) t71 on FIND_IN_SET(t71.id,t1.openedBuild)\nwhere  t1.openedDate > (select tt.`begin` from  zt_testreport tt  where tt.id = ?\n) and t1.openedDate < (select CONCAT(DATE_FORMAT(tt.`end`,'%Y-%m-%d'),' 23:59:59') from  zt_testreport tt  where tt.id = ?\n) and not EXISTS(select 1 from zt_build t where FIND_IN_SET(t.id,t1.openedBuild) and FIND_IN_SET(t.id,(select GROUP_CONCAT(tt.id) from (select tt.* from zt_build tt where  tt.id in (\n\tselect t1.build from zt_testtask t1 where FIND_IN_SET(t1.id,?))) tt GROUP BY tt.product)) = 0) and FIND_IN_SET('trunk',t1.openedBuild) = 0 and  (t1.`status` = 'active' or t1.resolvedDate > (select CONCAT(DATE_FORMAT(tt.`end`,'%Y-%m-%d'),' 23:59:59') from zt_testreport tt where tt.id = ?))) t\n",
      "fillDstLogicParam" : true,
      "parallelOutput" : true
    }, {
      "codeName" : "Rawsqlcall7",
      "getDstPSDELogicParam" : {
        "modelref" : true,
        "id" : "Default"
      },
      "logicNodeType" : "RAWSQLCALL",
      "name" : "解决的Bug",
      "getPSDELogicLinks" : [ {
        "getDstPSDELogicNode" : {
          "modelref" : true,
          "id" : "Rawsqlcall8"
        },
        "name" : "连接1248",
        "getSrcPSDELogicNode" : {
          "modelref" : true,
          "id" : "Rawsqlcall7"
        },
        "defaultLink" : false
      } ],
      "getPSDELogicNodeParams" : [ {
        "name" : "Default[TASKS]",
        "paramAction" : "SQLPARAM",
        "srcFieldName" : "TASKS",
        "getSrcPSDELogicParam" : {
          "modelref" : true,
          "id" : "Default"
        },
        "srcValueType" : "SRCDLPARAM"
      }, {
        "name" : "Default[ID]",
        "paramAction" : "SQLPARAM",
        "srcFieldName" : "ID",
        "getSrcPSDELogicParam" : {
          "modelref" : true,
          "id" : "Default"
        },
        "srcValueType" : "SRCDLPARAM"
      }, {
        "name" : "Default[ID]",
        "paramAction" : "SQLPARAM",
        "srcFieldName" : "ID",
        "getSrcPSDELogicParam" : {
          "modelref" : true,
          "id" : "Default"
        },
        "srcValueType" : "SRCDLPARAM"
      }, {
        "name" : "Default[TASKS]",
        "paramAction" : "SQLPARAM",
        "srcFieldName" : "TASKS",
        "getSrcPSDELogicParam" : {
          "modelref" : true,
          "id" : "Default"
        },
        "srcValueType" : "SRCDLPARAM"
      } ],
      "sql" : "select count(1) as \tresolvedcnt from (\nSELECT\nDISTINCT t1.*\nFROM `zt_bug` t1 \n\tINNER JOIN (select tt.id from zt_build tt where tt.deleted = '0' and tt.id in (\n\tselect t1.build from zt_testtask t1 where FIND_IN_SET(t1.id,?))) t71 on FIND_IN_SET(t71.id,t1.openedBuild)\nwhere  t1.openedDate > (select tt.`begin` from  zt_testreport tt  where tt.id = ?\n) and t1.openedDate < (select CONCAT(DATE_FORMAT(tt.`end`,'%Y-%m-%d'),' 23:59:59') from  zt_testreport tt  where tt.id = ?\n) and not EXISTS(select 1 from zt_build t where FIND_IN_SET(t.id,t1.openedBuild) and FIND_IN_SET(t.id,(select GROUP_CONCAT(tt.id) from (select tt.* from zt_build tt where  tt.id in (\n\tselect t1.build from zt_testtask t1 where FIND_IN_SET(t1.id,?))) tt GROUP BY tt.product)) = 0) and FIND_IN_SET('trunk',t1.openedBuild) = 0 and FIND_IN_SET('trunk',t1.openedBuild) = 0 and  t1.`status` in ('resolved','closed')) t",
      "fillDstLogicParam" : true,
      "parallelOutput" : true
    } ],
    "getPSDELogicParams" : [ {
      "codeName" : "Default",
      "name" : "传入变量",
      "getParamPSDataEntity" : {
        "modelref" : true,
        "path" : "PSMODULES/zentao/PSDATAENTITIES/TestReport.json"
      },
      "default" : true
    } ],
    "getStartPSDELogicNode" : {
      "modelref" : true,
      "id" : "Begin"
    },
    "enableBackend" : true,
    "enableFront" : false
  } ],
  "getAllPSDEOPPrivs" : [ {
    "logicName" : "Project_Create",
    "mapPSDEName" : "ZT_PROJECT",
    "mapPSDEOPPrivName" : "CREATE",
    "getMapPSDER" : {
      "modelref" : true,
      "path" : "PSMODULES/zentao/PSDATAENTITIES/TestReport/PSDERS/DER1N_ZT_TESTREPORT_ZT_PROJECT_PROJECT.json"
    },
    "name" : "CREATE",
    "id" : "ZTProject__CREATE"
  }, {
    "logicName" : "Product_Create",
    "mapPSDEName" : "ZT_PRODUCT",
    "mapPSDEOPPrivName" : "TESTREPORTMANAGE",
    "getMapPSDER" : {
      "modelref" : true,
      "path" : "PSMODULES/zentao/PSDATAENTITIES/TestReport/PSDERS/DER1N_ZT_TESTREPORT_ZT_PRODUCT_PRODUCT.json"
    },
    "name" : "CREATE",
    "id" : "ZTProduct__CREATE"
  }, {
    "logicName" : "建立",
    "name" : "CREATE"
  }, {
    "logicName" : "Product_Delete",
    "mapPSDEName" : "ZT_PRODUCT",
    "mapPSDEOPPrivName" : "TESTREPORTMANAGE",
    "getMapPSDER" : {
      "modelref" : true,
      "path" : "PSMODULES/zentao/PSDATAENTITIES/TestReport/PSDERS/DER1N_ZT_TESTREPORT_ZT_PRODUCT_PRODUCT.json"
    },
    "name" : "DELETE",
    "id" : "ZTProduct__DELETE"
  }, {
    "logicName" : "Project_Delete",
    "mapPSDEName" : "ZT_PROJECT",
    "mapPSDEOPPrivName" : "DELETE",
    "getMapPSDER" : {
      "modelref" : true,
      "path" : "PSMODULES/zentao/PSDATAENTITIES/TestReport/PSDERS/DER1N_ZT_TESTREPORT_ZT_PROJECT_PROJECT.json"
    },
    "name" : "DELETE",
    "id" : "ZTProject__DELETE"
  }, {
    "logicName" : "删除",
    "name" : "DELETE"
  }, {
    "logicName" : "管理",
    "name" : "MANAGE"
  }, {
    "logicName" : "Product_Manage",
    "mapPSDEName" : "ZT_PRODUCT",
    "mapPSDEOPPrivName" : "TESTREPORTMANAGE",
    "getMapPSDER" : {
      "modelref" : true,
      "path" : "PSMODULES/zentao/PSDATAENTITIES/TestReport/PSDERS/DER1N_ZT_TESTREPORT_ZT_PRODUCT_PRODUCT.json"
    },
    "name" : "MANAGE",
    "id" : "ZTProduct__MANAGE"
  }, {
    "logicName" : "Project_Manage",
    "mapPSDEName" : "ZT_PROJECT",
    "mapPSDEOPPrivName" : "MANAGE",
    "getMapPSDER" : {
      "modelref" : true,
      "path" : "PSMODULES/zentao/PSDATAENTITIES/TestReport/PSDERS/DER1N_ZT_TESTREPORT_ZT_PROJECT_PROJECT.json"
    },
    "name" : "MANAGE",
    "id" : "ZTProject__MANAGE"
  }, {
    "logicName" : "读取",
    "name" : "READ"
  }, {
    "logicName" : "Product_Read",
    "mapPSDEName" : "ZT_PRODUCT",
    "mapPSDEOPPrivName" : "READ",
    "getMapPSDER" : {
      "modelref" : true,
      "path" : "PSMODULES/zentao/PSDATAENTITIES/TestReport/PSDERS/DER1N_ZT_TESTREPORT_ZT_PRODUCT_PRODUCT.json"
    },
    "name" : "READ",
    "id" : "ZTProduct__READ"
  }, {
    "logicName" : "Project_Read",
    "mapPSDEName" : "ZT_PROJECT",
    "mapPSDEOPPrivName" : "READ",
    "getMapPSDER" : {
      "modelref" : true,
      "path" : "PSMODULES/zentao/PSDATAENTITIES/TestReport/PSDERS/DER1N_ZT_TESTREPORT_ZT_PROJECT_PROJECT.json"
    },
    "name" : "READ",
    "id" : "ZTProject__READ"
  }, {
    "logicName" : "Product_Update",
    "mapPSDEName" : "ZT_PRODUCT",
    "mapPSDEOPPrivName" : "TESTREPORTMANAGE",
    "getMapPSDER" : {
      "modelref" : true,
      "path" : "PSMODULES/zentao/PSDATAENTITIES/TestReport/PSDERS/DER1N_ZT_TESTREPORT_ZT_PRODUCT_PRODUCT.json"
    },
    "name" : "UPDATE",
    "id" : "ZTProduct__UPDATE"
  }, {
    "logicName" : "更新",
    "name" : "UPDATE"
  }, {
    "logicName" : "Project_Update",
    "mapPSDEName" : "ZT_PROJECT",
    "mapPSDEOPPrivName" : "UPDATE",
    "getMapPSDER" : {
      "modelref" : true,
      "path" : "PSMODULES/zentao/PSDATAENTITIES/TestReport/PSDERS/DER1N_ZT_TESTREPORT_ZT_PROJECT_PROJECT.json"
    },
    "name" : "UPDATE",
    "id" : "ZTProject__UPDATE"
  } ],
  "getAllPSDEUserRoles" : [ {
    "customCond" : "[ (1, '=', 1) ]",
    "dynaModelFilePath" : "PSMODULES/zentao/PSDATAENTITIES/TestReport/PSDEUSERROLES/TestReport_Maintain.json",
    "name" : "测试报告维护",
    "getPSDEUserRoleOPPrivs" : [ {
      "dataAccessAction" : "UPDATE",
      "name" : "TestReport_Maintain_UPDATE",
      "getPSDEOPPriv" : {
        "modelref" : true,
        "id" : "UPDATE"
      }
    }, {
      "dataAccessAction" : "READ",
      "name" : "TestReport_Maintain_READ",
      "getPSDEOPPriv" : {
        "modelref" : true,
        "id" : "READ"
      }
    }, {
      "dataAccessAction" : "CREATE",
      "name" : "TestReport_Maintain_CREATE",
      "getPSDEOPPriv" : {
        "modelref" : true,
        "id" : "CREATE"
      }
    }, {
      "dataAccessAction" : "DELETE",
      "name" : "TestReport_Maintain_DELETE",
      "getPSDEOPPriv" : {
        "modelref" : true,
        "id" : "DELETE"
      }
    } ],
    "roleTag" : "TestReport_Maintain",
    "userDRAction" : "READ"
  }, {
    "customCond" : "[ (1, '=', 1) ]",
    "dynaModelFilePath" : "PSMODULES/zentao/PSDATAENTITIES/TestReport/PSDEUSERROLES/TestReport_Read.json",
    "name" : "测试报告查看",
    "getPSDEUserRoleOPPrivs" : [ {
      "dataAccessAction" : "READ",
      "name" : "TestReport_Read_READ",
      "getPSDEOPPriv" : {
        "modelref" : true,
        "id" : "READ"
      }
    } ],
    "roleTag" : "TestReport_Read",
    "userDRAction" : "READ"
  } ],
  "codeName" : "TestReport",
  "dEType" : 1,
  "dSLink" : "DEFAULT",
  "dataAccCtrlArch" : 1,
  "dataAccCtrlMode" : 2,
  "dataChangeLogMode" : 0,
  "dataImpExpMode" : 3,
  "getDefaultPSDEDataSet" : {
    "modelref" : true,
    "id" : "Default"
  },
  "dynaInstMode" : 1,
  "dynaModelFilePath" : "PSMODULES/zentao/PSDATAENTITIES/TestReport.json",
  "enableActions" : 7,
  "enableUIActions" : 15,
  "enableViewLevel" : 0,
  "extendMode" : 0,
  "invalidLogicValue" : "1",
  "logicName" : "测试报告",
  "getMajorPSDERs" : [ {
    "codeName" : "TestReport",
    "dERSubType" : "DER1N",
    "dERType" : "DERCUSTOM",
    "dynaModelFilePath" : "PSMODULES/zentao/PSDATAENTITIES/Action/PSDERS/DERCUSTOM_ZT_ACTION_ZT_TESTREPORT.json",
    "logicName" : "报告",
    "getMajorPSDataEntity" : {
      "modelref" : true,
      "path" : "PSMODULES/zentao/PSDATAENTITIES/TestReport.json"
    },
    "masterRS" : 4,
    "getMinorPSDataEntity" : {
      "modelref" : true,
      "path" : "PSMODULES/zentao/PSDATAENTITIES/Action.json"
    },
    "name" : "DERCUSTOM_ZT_ACTION_ZT_TESTREPORT",
    "orderValue" : 100,
    "pickupDEFName" : "OBJECTID",
    "getPickupPSDEField" : {
      "name" : "OBJECTID",
      "codeName" : "ObjectID"
    },
    "removeActionType" : 0,
    "removeOrder" : -1,
    "typeValue" : "testreport"
  }, {
    "codeName" : "testreport",
    "dERSubType" : "DER1N",
    "dERType" : "DERCUSTOM",
    "dynaModelFilePath" : "PSMODULES/zentao/PSDATAENTITIES/File/PSDERS/DERCUSTOM_ZT_FILE_ZT_TESTREPORT.json",
    "getMajorPSDataEntity" : {
      "modelref" : true,
      "path" : "PSMODULES/zentao/PSDATAENTITIES/TestReport.json"
    },
    "masterRS" : 4,
    "getMinorPSDataEntity" : {
      "modelref" : true,
      "path" : "PSMODULES/zentao/PSDATAENTITIES/File.json"
    },
    "name" : "DERCUSTOM_ZT_FILE_ZT_TESTREPORT",
    "orderValue" : 100,
    "removeActionType" : 0,
    "removeOrder" : -1,
    "typeValue" : "testreport"
  } ],
  "getMinorPSDERs" : [ {
    "codeName" : "ZTProduct",
    "dERType" : "DER1N",
    "dynaModelFilePath" : "PSMODULES/zentao/PSDATAENTITIES/TestReport/PSDERS/DER1N_ZT_TESTREPORT_ZT_PRODUCT_PRODUCT.json",
    "getMajorPSDataEntity" : {
      "modelref" : true,
      "path" : "PSMODULES/zentao/PSDATAENTITIES/Product.json"
    },
    "masterOrder" : -1,
    "masterRS" : 4,
    "getMinorPSDataEntity" : {
      "modelref" : true,
      "path" : "PSMODULES/zentao/PSDATAENTITIES/TestReport.json"
    },
    "name" : "DER1N_ZT_TESTREPORT_ZT_PRODUCT_PRODUCT",
    "orderValue" : 100,
    "getPSPickupDEField" : {
      "name" : "PRODUCT",
      "codeName" : "Product"
    },
    "getPSPickupTextDEField" : {
      "name" : "PRODUCTNAME",
      "codeName" : "ProductName"
    },
    "pickupDEFName" : "PRODUCT",
    "removeActionType" : -1,
    "removeOrder" : 0
  }, {
    "codeName" : "ZTProject",
    "dERType" : "DER1N",
    "dynaModelFilePath" : "PSMODULES/zentao/PSDATAENTITIES/TestReport/PSDERS/DER1N_ZT_TESTREPORT_ZT_PROJECT_PROJECT.json",
    "getMajorPSDataEntity" : {
      "modelref" : true,
      "path" : "PSMODULES/zentao/PSDATAENTITIES/Project.json"
    },
    "masterOrder" : -1,
    "masterRS" : 4,
    "getMinorPSDataEntity" : {
      "modelref" : true,
      "path" : "PSMODULES/zentao/PSDATAENTITIES/TestReport.json"
    },
    "name" : "DER1N_ZT_TESTREPORT_ZT_PROJECT_PROJECT",
    "orderValue" : 100,
    "getPSPickupDEField" : {
      "name" : "PROJECT",
      "codeName" : "Project"
    },
    "getPSPickupTextDEField" : {
      "name" : "PROJECTNAME",
      "codeName" : "ProjectName"
    },
    "pickupDEFName" : "PROJECT",
    "removeActionType" : -1,
    "removeOrder" : 0
  } ],
  "name" : "ZT_TESTREPORT",
  "saaSDCIdColumnName" : "SRFDCID",
  "saaSDataIdColumnName" : "SRFID",
  "saaSMode" : 2,
  "serviceAPIMode" : 1,
  "serviceCodeName" : "TestReport",
  "storageMode" : 1,
  "systemTag" : "iBizPMS",
  "tableName" : "zt_testreport",
  "validLogicValue" : "0",
  "virtualMode" : 0,
  "enableAPIStorage" : false,
  "enableCreate" : true,
  "enableDataVer" : false,
  "enableEntityCache" : false,
  "enableModify" : true,
  "enableMultiDS" : false,
  "enableMultiForm" : false,
  "enableMultiStorage" : false,
  "enableNoSQLStorage" : false,
  "enableRemove" : true,
  "enableSQLStorage" : true,
  "logicValid" : true,
  "subSysAsCloud" : false
}