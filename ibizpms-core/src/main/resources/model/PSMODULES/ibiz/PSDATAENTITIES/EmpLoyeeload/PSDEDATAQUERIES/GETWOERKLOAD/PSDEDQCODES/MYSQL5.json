{
  "dBType" : "MYSQL5",
  "name" : "MySQL5",
  "queryCode" : "select t1.* from(select t1.assignedTo,t1.project,t1.projectname,t1.taskcnt,t1.`left`,t1.totaltaskcnt,t1.totalleft,t1.workload,'assign' as isassigned from (\nselect t1.*,t4.taskcnt as totaltaskcnt,t4.`left` as totalleft,CONCAT(ROUND( t4.`left`/ ((case when  #{srf.datacontext.workday} \nis null then 6 else \n#{srf.datacontext.workday}  \nend) * (case when \n#{srf.datacontext.everydaytime}  \nis null then 7 else \n#{srf.datacontext.everydaytime}  \nend)) * 100, 2),'%')  as WORKLOAD from ( select  t1.assignedTo,t1.project,t1.projectname,COUNT(1) as taskcnt,sum(t1.`left`) as `left` from( select t1.id,t1.`name`,t1.`left`,t1.project ,t2.`name` as projectname,t1.assignedTo from zt_task t1 left join zt_project t2 on t1.project = t2.id \nwhere t1.deleted = '0' and t1.`status` in ('wait','doing') and t2.deleted = '0' and t2.`status` in ('wait','doing') and t1.assignedTo <> '' and t1.parent >= 0 and not EXISTS(select  1  from zt_team t where t.type = 'task' and t.root = t1.id) \nunion \nselect t1.id,t1.`name`,t3.`left`,t1.project ,t2.`name` as projectname,t3.account as assignedTo from zt_task t1 left join zt_project t2 on t1.project = t2.id \nINNER join zt_team t3 on t1.id = t3.root and t3.type = 'task'\nwhere t1.deleted = '0' and t1.`status` in ('wait','doing') and t2.deleted = '0' and t2.`status` in ('wait','doing')  and t1.`left` > 0 ) t1 GROUP BY t1.assignedTo,t1.project,t1.projectname) t1 left join zt_user tt on tt.account = t1.assignedTo \nleft join  ( select  t1.assignedTo,COUNT(1) as taskcnt,sum(t1.`left`) as `left` from( select t1.id,t1.`name`,t1.`left`,t1.project ,t2.`name` as projectname,t1.assignedTo from zt_task t1 left join zt_project t2 on t1.project = t2.id \nwhere t1.deleted = '0' and t1.`status` in ('wait','doing') and t2.deleted = '0' and t2.`status` in ('wait','doing') and t1.assignedTo <> '' and t1.parent >= 0 and not EXISTS(select  1  from zt_team t where t.type = 'task' and t.root = t1.id) \nunion \nselect t1.id,t1.`name`,t3.`left`,t1.project ,t2.`name` as projectname,t3.account as assignedTo from zt_task t1 left join zt_project t2 on t1.project = t2.id \nINNER join zt_team t3 on t1.id = t3.root and t3.type = 'task'\nwhere t1.deleted = '0' and t1.`status` in ('wait','doing') and t2.deleted = '0' and t2.`status` in ('wait','doing')  and t1.`left` > 0 ) t1 GROUP BY t1.assignedTo) t4 on t4.assignedTo = t1.assignedTo\nwhere tt.dept =  #{srf.datacontext.dept} \nor  #{srf.datacontext.dept} \nis null) t1 \nunion\nselect t1.assignedTo,t1.project,t1.projectname,t1.taskcnt,t1.`left`,t1.totaltaskcnt,t1.totalleft,t1.workload, t1.isassigned as isassigned from (select  t1.account as assignedTo,t2.id as project,t2.`name` as projectname, 0 as taskcnt,0 as `left`,0 as totaltaskcnt,0 as totalleft,'0%' as workload,'noassign' as isassigned  from zt_team t1 \nLEFT JOIN zt_project t2 on t2.id = t1.root\nwhere t2.`status` not in ('cancel','closed','done','suspended')  and t1.type = 'project' \nand t1.account not in (SELECT assignedTo from zt_task where project = t1.root and `status` not in ('cancel','closed','done','pause') and assignedTo <> '' GROUP BY assignedTo) ORDER BY t1.ACCOUNT,t2.`name`)t1) t1 \nwhere (t1.isassigned = #{srf.datacontext.assign}) or (#{srf.datacontext.assign} is null and t1.isassigned = 'assign')",
  "id" : "PSMODULES/ibiz/PSDATAENTITIES/EmpLoyeeload/PSDEDATAQUERIES/GETWOERKLOAD/PSDEDQCODES/MYSQL5.json"
}